/// <reference types="node" />
import { Buffer } from 'node:buffer';
import type { H3Event } from 'h3';
import type { RuntimeOgImageOptions } from '../types';
export declare function wasmLoader(asyncModuleLoad: Promise<any> | Buffer | string, fallback: string): {
    load(options: RuntimeOgImageOptions): Promise<any>;
};
export declare function fetchOptionsCached(e: H3Event, path: string): Promise<RuntimeOgImageOptions>;
export declare function fetchOptions(e: H3Event, path: string): Promise<RuntimeOgImageOptions>;
export declare function base64ToArrayBuffer(base64: string): ArrayBuffer;
export declare function readPublicAsset(file: string, encoding?: BufferEncoding): Promise<string | Buffer | undefined>;
export declare function readPublicAssetBase64(file: string): Promise<{
    src: string;
    width?: number;
    height?: number;
} | undefined>;
export declare function toBase64Image(fileName: string, data: string | ArrayBuffer): string;
export * from './utils-pure';
