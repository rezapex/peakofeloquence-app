import { createSiteConfigStack } from "site-config-stack";
import { defineNuxtPlugin, useNuxtApp, useRequestEvent, useRuntimeConfig, useState } from "#imports";
export default defineNuxtPlugin({
  name: "nuxt-site-config",
  enforce: "pre",
  async setup(nuxtApp) {
    const config = useRuntimeConfig()["nuxt-site-config"] || { debug: false };
    let stack;
    const state = useState("site-config");
    if (process.server) {
      stack = useRequestEvent().context.siteConfig;
      nuxtApp.hooks.hook("app:rendered", () => {
        state.value = useRequestEvent().context.siteConfig.get();
      });
    }
    if (!stack) {
      stack = createSiteConfigStack({
        debug: config.debug
      });
    }
    if (process.client) {
      stack.push({
        _context: "window",
        url: window.location.origin
      });
      const nuxt = useNuxtApp();
      if (nuxt.payload.serverRendered) {
        stack.push(state.value);
      } else if (typeof window.__NUXT_SITE_CONFIG__ !== "undefined") {
        stack.push(window.__NUXT_SITE_CONFIG__);
      }
    }
    return {
      provide: {
        nuxtSiteConfig: stack
      }
    };
  }
});
