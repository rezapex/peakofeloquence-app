import { fixSlashes, resolveSitePath } from "site-config-stack";
import { useRuntimeConfig } from "#internal/nitro";
import { useNitroOrigin, useSiteConfig } from "#internal/nuxt-site-config";
export function createSitePathResolver(e, options = {}) {
  const siteConfig = useSiteConfig(e);
  const nitroOrigin = useNitroOrigin(e);
  const nuxtBase = useRuntimeConfig().app.baseURL || "/";
  return (path) => {
    return resolveSitePath(path, {
      ...options,
      siteUrl: options.canonical !== false || process.env.prerender ? siteConfig.url : nitroOrigin,
      trailingSlash: siteConfig.trailingSlash,
      base: nuxtBase
    });
  };
}
export function withSiteTrailingSlash(e, path) {
  const siteConfig = e.context.siteConfig?.get();
  return fixSlashes(siteConfig.trailingSlash, path);
}
export function withSiteUrl(e, path, options = {}) {
  const siteConfig = e.context.siteConfig?.get();
  return resolveSitePath(path, {
    absolute: true,
    siteUrl: options.canonical !== false || process.env.prerender ? siteConfig.url : e.context.siteConfigNitroOrigin,
    trailingSlash: siteConfig.trailingSlash,
    base: e.context.nitro.baseURL,
    withBase: options.withBase
  });
}
