import { ref, inject } from "vue";
import { createSharedComposable } from "@vueuse/core";
export const slidOverInjectionKey = Symbol("nuxt-ui.slideover");
function _useSlideover() {
  const slideoverState = inject(slidOverInjectionKey);
  const isOpen = ref(false);
  function open(component, props) {
    if (!slideoverState) {
      throw new Error("useSlideover() is called without provider");
    }
    slideoverState.value = {
      component,
      props: props ?? {}
    };
    isOpen.value = true;
  }
  function close() {
    if (!slideoverState)
      return;
    isOpen.value = false;
  }
  function patch(props) {
    if (!slideoverState)
      return;
    slideoverState.value = {
      ...slideoverState.value,
      props: {
        ...slideoverState.value.props,
        ...props
      }
    };
  }
  return {
    open,
    close,
    patch,
    isOpen
  };
}
export const useSlideover = createSharedComposable(_useSlideover);
