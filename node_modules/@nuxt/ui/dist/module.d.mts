import * as _nuxt_schema from '@nuxt/schema';
import { CollectionNames, IconsPluginOptions } from '@egoist/tailwindcss-icons';

declare const _default$H: {
    wrapper: string;
    base: string;
    divide: string;
    thead: string;
    tbody: string;
    tr: {
        base: string;
        selected: string;
        active: string;
    };
    th: {
        base: string;
        padding: string;
        color: string;
        font: string;
        size: string;
    };
    td: {
        base: string;
        padding: string;
        color: string;
        font: string;
        size: string;
    };
    checkbox: {
        padding: string;
    };
    loadingState: {
        wrapper: string;
        label: string;
        icon: string;
    };
    emptyState: {
        wrapper: string;
        label: string;
        icon: string;
    };
    progress: {
        wrapper: string;
    };
    default: {
        sortAscIcon: string;
        sortDescIcon: string;
        sortButton: {
            icon: string;
            trailing: boolean;
            square: boolean;
            color: "gray";
            variant: "ghost";
            class: string;
        };
        progress: {
            color: "primary";
            animation: "carousel";
        };
        loadingState: {
            icon: string;
            label: string;
        };
        emptyState: {
            icon: string;
            label: string;
        };
    };
};

declare const _default$G: {
    wrapper: string;
    background: string;
    rounded: string;
    text: string;
    placeholder: string;
    size: {
        '3xs': string;
        '2xs': string;
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
        '2xl': string;
        '3xl': string;
    };
    chip: {
        base: string;
        background: string;
        position: {
            'top-right': string;
            'bottom-right': string;
            'top-left': string;
            'bottom-left': string;
        };
        size: {
            '3xs': string;
            '2xs': string;
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
            '2xl': string;
            '3xl': string;
        };
    };
    icon: {
        base: string;
        size: {
            '3xs': string;
            '2xs': string;
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
            '2xl': string;
            '3xl': string;
        };
    };
    default: {
        size: string;
        icon: any;
        chipColor: any;
        chipPosition: string;
    };
};

declare const _default$F: {
    wrapper: string;
    ring: string;
    margin: string;
};

declare const _default$E: {
    base: string;
    rounded: string;
    font: string;
    size: {
        xs: string;
        sm: string;
        md: string;
        lg: string;
    };
    color: {
        white: {
            solid: string;
        };
        gray: {
            solid: string;
        };
        black: {
            solid: string;
        };
    };
    variant: {
        solid: string;
        outline: string;
        soft: string;
        subtle: string;
    };
    default: {
        size: string;
        variant: string;
        color: string;
    };
};

declare const _default$D: {
    base: string;
    font: string;
    rounded: string;
    truncate: string;
    block: string;
    inline: string;
    size: {
        '2xs': string;
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    gap: {
        '2xs': string;
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    padding: {
        '2xs': string;
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    square: {
        '2xs': string;
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    color: {
        white: {
            solid: string;
            ghost: string;
        };
        gray: {
            solid: string;
            ghost: string;
            link: string;
        };
        black: {
            solid: string;
            link: string;
        };
    };
    variant: {
        solid: string;
        outline: string;
        soft: string;
        ghost: string;
        link: string;
    };
    icon: {
        base: string;
        loading: string;
        size: {
            '2xs': string;
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
    };
    default: {
        size: string;
        variant: string;
        color: string;
        loadingIcon: string;
    };
};

declare const _default$C: {
    wrapper: {
        horizontal: string;
        vertical: string;
    };
    rounded: string;
    shadow: string;
    orientation: {
        'rounded-none': {
            horizontal: {
                start: string;
                end: string;
            };
            vertical: {
                start: string;
                end: string;
            };
        };
        'rounded-sm': {
            horizontal: {
                start: string;
                end: string;
            };
            vertical: {
                start: string;
                end: string;
            };
        };
        rounded: {
            horizontal: {
                start: string;
                end: string;
            };
            vertical: {
                start: string;
                end: string;
            };
        };
        'rounded-md': {
            horizontal: {
                start: string;
                end: string;
            };
            vertical: {
                start: string;
                end: string;
            };
        };
        'rounded-lg': {
            horizontal: {
                start: string;
                end: string;
            };
            vertical: {
                start: string;
                end: string;
            };
        };
        'rounded-xl': {
            horizontal: {
                start: string;
                end: string;
            };
            vertical: {
                start: string;
                end: string;
            };
        };
        'rounded-2xl': {
            horizontal: {
                start: string;
                end: string;
            };
            vertical: {
                start: string;
                end: string;
            };
        };
        'rounded-3xl': {
            horizontal: {
                start: string;
                end: string;
            };
            vertical: {
                start: string;
                end: string;
            };
        };
        'rounded-full': {
            horizontal: {
                start: string;
                end: string;
            };
            vertical: {
                start: string;
                end: string;
            };
        };
    };
};

declare const _default$B: {
    wrapper: string;
    base: string;
    background: string;
    position: {
        'top-right': string;
        'bottom-right': string;
        'top-left': string;
        'bottom-left': string;
    };
    translate: {
        'top-right': string;
        'bottom-right': string;
        'top-left': string;
        'bottom-left': string;
    };
    size: {
        '3xs': string;
        '2xs': string;
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
        '2xl': string;
        '3xl': string;
    };
    default: {
        size: string;
        color: string;
        position: string;
        inset: boolean;
    };
};

declare const _default$A: {
    wrapper: string;
    container: string;
    trigger: string;
    width: string;
    height: string;
    background: string;
    shadow: string;
    rounded: string;
    ring: string;
    base: string;
    divide: string;
    padding: string;
    item: {
        base: string;
        rounded: string;
        padding: string;
        size: string;
        active: string;
        inactive: string;
        disabled: string;
        icon: {
            base: string;
            active: string;
            inactive: string;
        };
        avatar: {
            base: string;
            size: "2xs";
        };
        label: string;
        shortcuts: string;
    };
    transition: {
        enterActiveClass: string;
        enterFromClass: string;
        enterToClass: string;
        leaveActiveClass: string;
        leaveFromClass: string;
        leaveToClass: string;
    };
    popper: {
        placement: string;
        strategy: string;
    };
    default: {
        openDelay: number;
        closeDelay: number;
    };
    arrow: {
        ring: string;
        background: string;
        base: string;
        rounded: string;
        shadow: string;
        placement: string;
    };
};

declare const _default$z: {
    wrapper: string;
    container: string;
    item: {
        base: string;
        size: string;
        color: string;
        padding: string;
        icon: string;
    };
    transition: {
        enterActiveClass: string;
        leaveActiveClass: string;
    };
    default: {
        openIcon: string;
        closeIcon: string;
        class: string;
        variant: "soft";
    };
};

declare const _default$y: {
    wrapper: string;
    inner: string;
    title: string;
    description: string;
    actions: string;
    shadow: string;
    rounded: string;
    padding: string;
    gap: string;
    icon: {
        base: string;
    };
    avatar: {
        base: string;
        size: "md";
    };
    color: {
        white: {
            solid: string;
        };
    };
    variant: {
        solid: string;
        outline: string;
        soft: string;
        subtle: string;
    };
    default: {
        color: string;
        variant: string;
        icon: any;
        closeButton: any;
        actionButton: {
            size: "xs";
            color: "primary";
            variant: "link";
        };
    };
};

declare const _default$x: {
    base: string;
    padding: string;
    size: {
        xs: string;
        sm: string;
        md: string;
    };
    rounded: string;
    font: string;
    background: string;
    ring: string;
    default: {
        size: string;
    };
};

declare const _default$w: {
    wrapper: string;
    indicator: {
        container: {
            base: string;
            width: string;
            transition: string;
        };
        align: string;
        width: string;
        color: string;
        size: {
            '2xs': string;
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
            '2xl': string;
        };
    };
    progress: {
        base: string;
        width: string;
        size: {
            '2xs': string;
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
            '2xl': string;
        };
        rounded: string;
        track: string;
        bar: string;
        color: string;
        background: string;
        indeterminate: {
            base: string;
            rounded: string;
        };
    };
    steps: {
        base: string;
        color: string;
        size: {
            '2xs': string;
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
            '2xl': string;
        };
    };
    step: {
        base: string;
        align: string;
        active: string;
        first: string;
    };
    animation: {
        carousel: string;
        'carousel-inverse': string;
        swing: string;
        elastic: string;
    };
    default: {
        color: string;
        size: string;
        animation: string;
    };
};

declare const _default$v: {
    wrapper: string;
    indicator: {
        container: string;
        text: string;
        size: {
            '2xs': string;
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
            '2xl': string;
        };
    };
    meter: {
        base: string;
        background: string;
        color: string;
        ring: string;
        rounded: string;
        shadow: string;
        size: {
            '2xs': string;
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
            '2xl': string;
        };
        appearance: {
            inner: string;
            meter: string;
            bar: string;
            value: string;
        };
        bar: {
            transition: string;
            ring: string;
            rounded: string;
            size: {
                '2xs': string;
                xs: string;
                sm: string;
                md: string;
                lg: string;
                xl: string;
                '2xl': string;
            };
        };
    };
    label: {
        base: string;
        text: string;
        color: string;
        size: {
            '2xs': string;
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
            '2xl': string;
        };
    };
    color: {
        white: string;
        black: string;
        gray: string;
    };
    default: {
        size: string;
        color: string;
    };
};

declare const _default$u: {
    wrapper: string;
    base: string;
    background: string;
    transition: string;
    rounded: string;
    shadow: string;
    list: string;
    orientation: {
        'rounded-none': {
            left: string;
            right: string;
        };
        'rounded-sm': {
            left: string;
            right: string;
        };
        rounded: {
            left: string;
            right: string;
        };
        'rounded-md': {
            left: string;
            right: string;
        };
        'rounded-lg': {
            left: string;
            right: string;
        };
        'rounded-xl': {
            left: string;
            right: string;
        };
        'rounded-2xl': {
            left: string;
            right: string;
        };
        'rounded-3xl': {
            left: string;
            right: string;
        };
        'rounded-full': {
            left: string;
            right: string;
        };
    };
    default: {
        size: string;
        icon: string;
    };
};

declare const _default$t: {
    wrapper: string;
    container: string;
    item: string;
    arrows: {
        wrapper: string;
    };
    indicators: {
        wrapper: string;
        base: string;
        active: string;
        inactive: string;
    };
    default: {
        prevButton: {
            color: "black";
            class: string;
            icon: string;
        };
        nextButton: {
            color: "black";
            class: string;
            icon: string;
        };
    };
};

declare const _default$s: {
    wrapper: string;
    base: string;
    form: string;
    rounded: string;
    placeholder: string;
    file: {
        base: string;
        padding: {
            '2xs': string;
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
    };
    size: {
        '2xs': string;
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    gap: {
        '2xs': string;
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    padding: {
        '2xs': string;
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    leading: {
        padding: {
            '2xs': string;
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
    };
    trailing: {
        padding: {
            '2xs': string;
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
    };
    color: {
        white: {
            outline: string;
        };
        gray: {
            outline: string;
        };
    };
    variant: {
        outline: string;
        none: string;
    };
    icon: {
        base: string;
        color: string;
        loading: string;
        size: {
            '2xs': string;
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        leading: {
            wrapper: string;
            pointer: string;
            padding: {
                '2xs': string;
                xs: string;
                sm: string;
                md: string;
                lg: string;
                xl: string;
            };
        };
        trailing: {
            wrapper: string;
            pointer: string;
            padding: {
                '2xs': string;
                xs: string;
                sm: string;
                md: string;
                lg: string;
                xl: string;
            };
        };
    };
    default: {
        size: string;
        color: string;
        variant: string;
        loadingIcon: string;
    };
};

declare const _default$r: {
    container: string;
    trigger: string;
    width: string;
    height: string;
    base: string;
    background: string;
    shadow: string;
    rounded: string;
    padding: string;
    ring: string;
    empty: string;
    option: {
        base: string;
        rounded: string;
        padding: string;
        size: string;
        color: string;
        container: string;
        active: string;
        inactive: string;
        selected: string;
        disabled: string;
        empty: string;
        icon: {
            base: string;
            active: string;
            inactive: string;
        };
        selectedIcon: {
            wrapper: string;
            padding: string;
            base: string;
        };
        avatar: {
            base: string;
            size: "2xs";
        };
        chip: {
            base: string;
        };
    };
    transition: {
        leaveActiveClass: string;
        leaveFromClass: string;
        leaveToClass: string;
    };
    popper: {
        placement: string;
    };
    default: {
        selectedIcon: string;
        trailingIcon: string;
    };
    arrow: {
        ring: string;
        background: string;
        base: string;
        rounded: string;
        shadow: string;
        placement: string;
    };
};

declare const _default$q: {
    wrapper: string;
    inner: string;
    label: {
        wrapper: string;
        base: string;
        required: string;
    };
    size: {
        '2xs': string;
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    container: string;
    description: string;
    hint: string;
    help: string;
    error: string;
    default: {
        size: string;
    };
};

declare const _default$p: {
    form: string;
    default: {
        size: string;
        color: string;
        variant: string;
    };
    wrapper: string;
    base: string;
    rounded: string;
    placeholder: string;
    file: {
        base: string;
        padding: {
            '2xs': string;
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
    };
    size: {
        '2xs': string;
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    gap: {
        '2xs': string;
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    padding: {
        '2xs': string;
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    leading: {
        padding: {
            '2xs': string;
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
    };
    trailing: {
        padding: {
            '2xs': string;
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
    };
    color: {
        white: {
            outline: string;
        };
        gray: {
            outline: string;
        };
    };
    variant: {
        outline: string;
        none: string;
    };
    icon: {
        base: string;
        color: string;
        loading: string;
        size: {
            '2xs': string;
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        leading: {
            wrapper: string;
            pointer: string;
            padding: {
                '2xs': string;
                xs: string;
                sm: string;
                md: string;
                lg: string;
                xl: string;
            };
        };
        trailing: {
            wrapper: string;
            pointer: string;
            padding: {
                '2xs': string;
                xs: string;
                sm: string;
                md: string;
                lg: string;
                xl: string;
            };
        };
    };
};

declare const _default$o: {
    form: string;
    placeholder: string;
    default: {
        size: string;
        color: string;
        variant: string;
        loadingIcon: string;
        trailingIcon: string;
    };
    wrapper: string;
    base: string;
    rounded: string;
    file: {
        base: string;
        padding: {
            '2xs': string;
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
    };
    size: {
        '2xs': string;
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    gap: {
        '2xs': string;
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    padding: {
        '2xs': string;
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    leading: {
        padding: {
            '2xs': string;
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
    };
    trailing: {
        padding: {
            '2xs': string;
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
    };
    color: {
        white: {
            outline: string;
        };
        gray: {
            outline: string;
        };
    };
    variant: {
        outline: string;
        none: string;
    };
    icon: {
        base: string;
        color: string;
        loading: string;
        size: {
            '2xs': string;
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        leading: {
            wrapper: string;
            pointer: string;
            padding: {
                '2xs': string;
                xs: string;
                sm: string;
                md: string;
                lg: string;
                xl: string;
            };
        };
        trailing: {
            wrapper: string;
            pointer: string;
            padding: {
                '2xs': string;
                xs: string;
                sm: string;
                md: string;
                lg: string;
                xl: string;
            };
        };
    };
};

declare const _default$n: {
    select: string;
    input: string;
    required: string;
    label: string;
    option: {
        create: string;
        base: string;
        rounded: string;
        padding: string;
        size: string;
        color: string;
        container: string;
        active: string;
        inactive: string;
        selected: string;
        disabled: string;
        empty: string;
        icon: {
            base: string;
            active: string;
            inactive: string;
        };
        selectedIcon: {
            wrapper: string;
            padding: string;
            base: string;
        };
        avatar: {
            base: string;
            size: "2xs";
        };
        chip: {
            base: string;
        };
    };
    transition: {
        leaveActiveClass: string;
        leaveFromClass: string;
        leaveToClass: string;
    };
    popper: {
        placement: string;
    };
    default: {
        selectedIcon: string;
        clearSearchOnClose: boolean;
        showCreateOptionWhen: string;
    };
    arrow: {
        ring: string;
        background: string;
        base: string;
        rounded: string;
        shadow: string;
        placement: string;
    };
    container: string;
    trigger: string;
    width: string;
    height: string;
    base: string;
    background: string;
    shadow: string;
    rounded: string;
    padding: string;
    ring: string;
    empty: string;
};

declare const _default$m: {
    wrapper: string;
    fieldset: string;
    legend: string;
    default: {
        color: string;
    };
};

declare const _default$l: {
    wrapper: string;
    container: string;
    base: string;
    form: string;
    color: string;
    background: string;
    border: string;
    ring: string;
    inner: string;
    label: string;
    required: string;
    help: string;
    default: {
        color: string;
    };
};

declare const _default$k: {
    wrapper: string;
    container: string;
    base: string;
    form: string;
    rounded: string;
    color: string;
    background: string;
    border: string;
    ring: string;
    inner: string;
    label: string;
    required: string;
    help: string;
    default: {
        color: string;
    };
};

declare const _default$j: {
    base: string;
    rounded: string;
    ring: string;
    active: string;
    inactive: string;
    size: {
        '2xs': string;
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
        '2xl': string;
    };
    container: {
        base: string;
        active: {
            '2xs': string;
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
            '2xl': string;
        };
        inactive: string;
        size: {
            '2xs': string;
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
            '2xl': string;
        };
    };
    icon: {
        base: string;
        active: string;
        inactive: string;
        size: {
            '2xs': string;
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
            '2xl': string;
        };
        on: string;
        off: string;
        loading: string;
    };
    default: {
        onIcon: any;
        offIcon: any;
        loadingIcon: string;
        color: string;
        size: string;
    };
};

declare const _default$i: {
    wrapper: string;
    base: string;
    rounded: string;
    background: string;
    ring: string;
    progress: {
        base: string;
        rounded: string;
        background: string;
        size: {
            '2xs': string;
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
            '2xl': string;
        };
    };
    thumb: {
        base: string;
        color: string;
        background: string;
        ring: string;
        size: {
            '2xs': string;
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
            '2xl': string;
        };
    };
    track: {
        base: string;
        background: string;
        rounded: string;
        size: {
            '2xs': string;
            xs: string;
            sm: string;
            md: string;
            lg: string;
            xl: string;
            '2xl': string;
        };
    };
    size: {
        '2xs': string;
        xs: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
        '2xl': string;
    };
    default: {
        size: string;
        color: string;
    };
};

declare const _default$h: {
    base: string;
    background: string;
    divide: string;
    ring: string;
    rounded: string;
    shadow: string;
    body: {
        base: string;
        background: string;
        padding: string;
    };
    header: {
        base: string;
        background: string;
        padding: string;
    };
    footer: {
        base: string;
        background: string;
        padding: string;
    };
};

declare const _default$g: {
    base: string;
    padding: string;
    constrained: string;
};

declare const _default$f: {
    base: string;
    background: string;
    rounded: string;
};

declare const _default$e: {
    wrapper: {
        base: string;
        horizontal: string;
        vertical: string;
    };
    container: {
        base: string;
        horizontal: string;
        vertical: string;
    };
    border: {
        base: string;
        horizontal: string;
        vertical: string;
        size: {
            horizontal: {
                '2xs': string;
                xs: string;
                sm: string;
                md: string;
                lg: string;
                xl: string;
            };
            vertical: {
                '2xs': string;
                xs: string;
                sm: string;
                md: string;
                lg: string;
                xl: string;
            };
        };
        type: {
            solid: string;
            dotted: string;
            dashed: string;
        };
    };
    icon: {
        base: string;
    };
    avatar: {
        base: string;
        size: "2xs";
    };
    label: string;
    default: {
        size: "2xs";
    };
};

declare const _default$d: {
    wrapper: string;
    base: string;
    ring: string;
    padding: string;
    width: string;
    rounded: string;
    font: string;
    size: string;
    active: string;
    inactive: string;
    label: string;
    icon: {
        base: string;
        active: string;
        inactive: string;
    };
    avatar: {
        base: string;
        size: "2xs";
    };
    badge: {
        base: string;
        color: "gray";
        variant: "solid";
        size: "xs";
    };
    divider: {
        wrapper: {
            base: string;
        };
    };
};

declare const _default$c: {
    wrapper: string;
    container: string;
    inner: string;
    base: string;
    before: string;
    after: string;
    active: string;
    inactive: string;
    label: string;
    icon: {
        base: string;
        active: string;
        inactive: string;
    };
    avatar: {
        base: string;
        size: "2xs";
    };
    badge: {
        base: string;
        color: "gray";
        variant: "solid";
        size: "xs";
    };
};

declare const _default$b: {
    wrapper: string;
    container: string;
    input: {
        wrapper: string;
        base: string;
        padding: string;
        height: string;
        size: string;
        icon: {
            base: string;
            loading: string;
            size: string;
            padding: string;
        };
        closeButton: {
            base: string;
            padding: string;
        };
    };
    emptyState: {
        wrapper: string;
        label: string;
        queryLabel: string;
        icon: string;
    };
    group: {
        wrapper: string;
        label: string;
        container: string;
        command: {
            base: string;
            active: string;
            inactive: string;
            label: string;
            prefix: string;
            suffix: string;
            container: string;
            icon: {
                base: string;
                active: string;
                inactive: string;
            };
            selectedIcon: {
                base: string;
            };
            avatar: {
                base: string;
                size: "2xs";
            };
            chip: {
                base: string;
            };
            disabled: string;
            shortcuts: string;
        };
        active: string;
        inactive: string;
    };
    default: {
        icon: string;
        loadingIcon: string;
        emptyState: {
            icon: string;
            label: string;
            queryLabel: string;
        };
        closeButton: any;
        selectedIcon: string;
    };
};

declare const _default$a: {
    wrapper: string;
    base: string;
    rounded: string;
    default: {
        size: string;
        activeButton: {
            color: "primary";
        };
        inactiveButton: {
            color: "white";
        };
        firstButton: {
            color: "white";
            class: string;
            icon: string;
        };
        lastButton: {
            color: "white";
            class: string;
            icon: string;
        };
        prevButton: {
            color: "white";
            class: string;
            icon: string;
        };
        nextButton: {
            color: "white";
            class: string;
            icon: string;
        };
    };
};

declare const _default$9: {
    wrapper: string;
    container: string;
    base: string;
    list: {
        base: string;
        background: string;
        rounded: string;
        shadow: string;
        padding: string;
        height: string;
        width: string;
        marker: {
            wrapper: string;
            base: string;
            background: string;
            rounded: string;
            shadow: string;
        };
        tab: {
            base: string;
            background: string;
            active: string;
            inactive: string;
            height: string;
            padding: string;
            size: string;
            font: string;
            rounded: string;
            shadow: string;
        };
    };
};

declare const _default$8: {
    wrapper: string;
    ol: string;
    li: string;
    base: string;
    label: string;
    icon: {
        base: string;
        active: string;
        inactive: string;
    };
    divider: {
        base: string;
    };
    active: string;
    inactive: string;
    default: {
        divider: string;
    };
};

declare const _default$7: {
    wrapper: string;
    inner: string;
    container: string;
    padding: string;
    margin: string;
    base: string;
    overlay: {
        base: string;
        background: string;
        transition: {
            enter: string;
            enterFrom: string;
            enterTo: string;
            leave: string;
            leaveFrom: string;
            leaveTo: string;
        };
    };
    background: string;
    ring: string;
    rounded: string;
    shadow: string;
    width: string;
    height: string;
    fullscreen: string;
    transition: {
        enter: string;
        enterFrom: string;
        enterTo: string;
        leave: string;
        leaveFrom: string;
        leaveTo: string;
    };
};

declare const _default$6: {
    wrapper: string;
    overlay: {
        base: string;
        background: string;
        transition: {
            enter: string;
            enterFrom: string;
            enterTo: string;
            leave: string;
            leaveFrom: string;
            leaveTo: string;
        };
    };
    base: string;
    background: string;
    ring: string;
    rounded: string;
    padding: string;
    shadow: string;
    width: string;
    translate: {
        base: string;
        left: string;
        right: string;
    };
    transition: {
        enter: string;
        leave: string;
    };
};

declare const _default$5: {
    wrapper: string;
    container: string;
    width: string;
    background: string;
    color: string;
    shadow: string;
    rounded: string;
    ring: string;
    base: string;
    shortcuts: string;
    middot: string;
    transition: {
        enterActiveClass: string;
        enterFromClass: string;
        enterToClass: string;
        leaveActiveClass: string;
        leaveFromClass: string;
        leaveToClass: string;
    };
    popper: {
        strategy: string;
    };
    default: {
        openDelay: number;
        closeDelay: number;
    };
    arrow: {
        base: string;
        ring: string;
        rounded: string;
        background: string;
        shadow: string;
        placement: string;
    };
};

declare const _default$4: {
    wrapper: string;
    container: string;
    trigger: string;
    width: string;
    background: string;
    shadow: string;
    rounded: string;
    ring: string;
    base: string;
    transition: {
        enterActiveClass: string;
        enterFromClass: string;
        enterToClass: string;
        leaveActiveClass: string;
        leaveFromClass: string;
        leaveToClass: string;
    };
    overlay: {
        base: string;
        background: string;
        transition: {
            enterActiveClass: string;
            enterFromClass: string;
            enterToClass: string;
            leaveActiveClass: string;
            leaveFromClass: string;
            leaveToClass: string;
        };
    };
    popper: {
        strategy: string;
    };
    default: {
        openDelay: number;
        closeDelay: number;
    };
    arrow: {
        base: string;
        ring: string;
        rounded: string;
        background: string;
        shadow: string;
        placement: string;
    };
};

declare const _default$3: {
    wrapper: string;
    container: string;
    width: string;
    background: string;
    shadow: string;
    rounded: string;
    ring: string;
    base: string;
    transition: {
        enterActiveClass: string;
        enterFromClass: string;
        enterToClass: string;
        leaveActiveClass: string;
        leaveFromClass: string;
        leaveToClass: string;
    };
    popper: {
        placement: string;
        scroll: boolean;
    };
    arrow: {
        base: string;
        ring: string;
        rounded: string;
        background: string;
        shadow: string;
        placement: string;
    };
};

declare const _default$2: {
    wrapper: string;
    container: string;
    inner: string;
    title: string;
    description: string;
    actions: string;
    background: string;
    shadow: string;
    rounded: string;
    padding: string;
    gap: string;
    ring: string;
    icon: {
        base: string;
        color: string;
    };
    avatar: {
        base: string;
        size: "md";
    };
    progress: {
        base: string;
        background: string;
    };
    transition: {
        enterActiveClass: string;
        enterFromClass: string;
        enterToClass: string;
        leaveActiveClass: string;
        leaveFromClass: string;
        leaveToClass: string;
    };
    default: {
        color: string;
        icon: any;
        timeout: number;
        closeButton: {
            icon: string;
            color: "gray";
            variant: "link";
            padded: boolean;
        };
        actionButton: {
            size: "xs";
            color: "white";
        };
    };
};

declare const _default$1: {
    wrapper: string;
    position: string;
    width: string;
    container: string;
};

declare namespace config {
  export { _default$z as accordion, _default$y as alert, _default$G as avatar, _default$F as avatarGroup, _default$E as badge, _default$8 as breadcrumb, _default$D as button, _default$C as buttonGroup, _default$h as card, _default$t as carousel, _default$k as checkbox, _default$B as chip, _default$b as commandPalette, _default$g as container, _default$3 as contextMenu, _default$e as divider, _default$A as dropdown, _default$q as formGroup, _default$c as horizontalNavigation, _default$s as input, _default$r as inputMenu, _default$x as kbd, _default$v as meter, _default$u as meterGroup, _default$7 as modal, _default$2 as notification, _default$1 as notifications, _default$a as pagination, _default$4 as popover, _default$w as progress, _default$l as radio, _default$m as radioGroup, _default$i as range, _default$o as select, _default$n as selectMenu, _default$f as skeleton, _default$6 as slideover, _default$H as table, _default$9 as tabs, _default$p as textarea, _default$j as toggle, _default$5 as tooltip, _default$d as verticalNavigation };
}

type Strategy = 'merge' | 'override'

type DeepPartial<T> = Partial<{
  [P in keyof T]: DeepPartial<T[P]> | { [key: string]: string | object }
}>

type UI = {
    primary?: string;
    gray?: string;
    colors?: string[];
    strategy?: Strategy;
    [key: string]: any;
} & DeepPartial<typeof config>;
declare module 'nuxt/schema' {
    interface AppConfigInput {
        ui?: UI;
    }
}
declare module '@nuxt/schema' {
    interface AppConfigInput {
        ui?: UI;
    }
}
interface ModuleOptions {
    /**
     * @default 'u'
     */
    prefix?: string;
    /**
     * @default false
     */
    global?: boolean;
    icons: CollectionNames[] | 'all' | IconsPluginOptions;
    safelistColors?: string[];
    /**
     * Disables the global css styles added by the module.
     */
    disableGlobalStyles?: boolean;
}
declare const _default: _nuxt_schema.NuxtModule<ModuleOptions>;

export { type ModuleOptions, _default as default };
