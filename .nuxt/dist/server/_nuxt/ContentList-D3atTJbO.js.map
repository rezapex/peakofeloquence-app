{"version":3,"file":"ContentList-D3atTJbO.js","sources":["../../../../node_modules/@nuxt/content/dist/runtime/components/ContentList.vue"],"sourcesContent":["<script>\nimport { defineComponent, h, useSlots } from \"vue\";\nimport ContentQuery from \"./ContentQuery.vue\";\nconst emptyNode = (slot, data) => h(\"pre\", null, JSON.stringify({ message: \"You should use slots with <ContentList>\", slot, data }, null, 2));\nconst ContentList = defineComponent({\n  name: \"ContentList\",\n  props: {\n    /**\n     * Query props\n     */\n    /**\n     * The path of the content to load from content source.\n     * @default '/'\n     */\n    path: {\n      type: String,\n      required: false,\n      default: void 0\n    },\n    /**\n     * A query builder params object to be passed to <ContentQuery /> component.\n     */\n    query: {\n      type: Object,\n      required: false,\n      default: void 0\n    }\n  },\n  /**\n   * Content empty fallback\n   * @slot empty\n   */\n  /**\n   * Content not found fallback\n   * @slot not-found\n   */\n  render(ctx) {\n    const slots = useSlots();\n    const { path, query } = ctx;\n    const contentQueryProps = {\n      ...query || {},\n      path: path || query?.path || \"/\"\n    };\n    return h(\n      ContentQuery,\n      contentQueryProps,\n      {\n        // Default slot\n        default: slots?.default ? ({ data, refresh, isPartial }) => slots.default({ list: data, refresh, isPartial, ...this.$attrs }) : (bindings) => emptyNode(\"default\", bindings.data),\n        // Empty slot\n        empty: (bindings) => slots?.empty ? slots.empty(bindings) : emptyNode(\"default\", bindings?.data),\n        // Not Found slot\n        \"not-found\": (bindings) => slots?.[\"not-found\"] ? slots?.[\"not-found\"]?.(bindings) : emptyNode(\"not-found\", bindings?.data)\n      }\n    );\n  }\n});\nexport default ContentList;\n</script>\n"],"names":["ContentQuery"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAGA,MAAM,YAAY,CAAC,MAAM,SAAS,EAAE,OAAO,MAAM,KAAK,UAAU,EAAE,SAAS,2CAA2C,MAAM,KAAM,GAAE,MAAM,CAAC,CAAC;AAC5I,MAAM,cAAc,gBAAgB;AAAA,EAClC,MAAM;AAAA,EACN,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQL,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,UAAU;AAAA,MACV,SAAS;AAAA,IACV;AAAA;AAAA;AAAA;AAAA,IAID,OAAO;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA,MACV,SAAS;AAAA,IACX;AAAA,EACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASD,OAAO,KAAK;AACV,UAAM,QAAQ;AACd,UAAM,EAAE,MAAM,UAAU;AACxB,UAAM,oBAAoB;AAAA,MACxB,GAAG,SAAS,CAAE;AAAA,MACd,MAAM,SAAQ,+BAAO,SAAQ;AAAA;AAE/B,WAAO;AAAA,MACLA;AAAAA,MACA;AAAA,MACA;AAAA;AAAA,QAEE,UAAS,+BAAO,WAAU,CAAC,EAAE,MAAM,SAAS,gBAAgB,MAAM,QAAQ,EAAE,MAAM,MAAM,SAAS,WAAW,GAAG,KAAK,OAAQ,CAAA,IAAI,CAAC,aAAa,UAAU,WAAW,SAAS,IAAI;AAAA;AAAA,QAEhL,OAAO,CAAC,cAAa,+BAAO,SAAQ,MAAM,MAAM,QAAQ,IAAI,UAAU,WAAW,qCAAU,IAAI;AAAA;AAAA,QAE/F,aAAa,CAAC,aAAQ;;AAAK,iDAAQ,iBAAe,oCAAQ,iBAAR,+BAAuB,YAAY,UAAU,aAAa,qCAAU,IAAI;AAAA;AAAA,MAC5H;AAAA;EAEJ;AACF,CAAC;AACI,kBAAa;;;;;;;","x_google_ignoreList":[0]}