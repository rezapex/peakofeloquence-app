{"version":3,"file":"CodeGroup-BbXTG5DJ.js","sources":["../../../../node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/CodeGroup.vue"],"sourcesContent":["<template>\n  <div :class=\"ui.wrapper\" v-bind=\"attrs\">\n    <div :class=\"ui.header\">\n      <button\n        v-for=\"(tab, index) in tabs\"\n        :key=\"index\"\n        tabindex=\"-1\"\n        :class=\"[ui.tab.base, selectedIndex === index ? ui.tab.active : ui.tab.inactive]\"\n        @click=\"selectedIndex = index\"\n      >\n        <ProseCodeIcon :icon=\"tab.icon\" :filename=\"tab.label\" :class=\"ui.tab.icon.base\" />\n        <span>{{ tab.label }}</span>\n      </button>\n    </div>\n\n    <component :is=\"selectedTab?.component\" :key=\"selectedIndex\" hide-header />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { PropType } from 'vue'\n\nconst config = {\n  wrapper: 'relative [&>div:last-child]:!my-0 [&>div:last-child]:!static my-5',\n  header: 'flex items-center gap-1 border border-gray-200 dark:border-gray-700 border-b-0 rounded-t-md overflow-hidden p-2',\n  tab: {\n    base: 'px-2 py-1.5 focus:outline-none text-gray-700 dark:text-gray-200 text-sm rounded-md flex items-center gap-1.5',\n    active: 'bg-gray-100 dark:bg-gray-800',\n    inactive: 'hover:bg-gray-50 dark:hover:bg-gray-800/50',\n    icon: {\n      base: ''\n    }\n  }\n}\n\ndefineOptions({\n  inheritAttrs: false\n})\n\nconst props = defineProps({\n  class: {\n    type: [String, Object, Array] as PropType<any>,\n    default: undefined\n  }\n})\n\nconst slots = useSlots()\nconst { ui, attrs } = useUI('content.codeGroup', undefined, config, toRef(props, 'class'), true)\n\nconst selectedIndex = ref(0)\ndefineExpose({ selectedIndex })\n\nfunction transformSlot (slot: any, index: number) {\n  if (typeof slot.type === 'symbol') {\n    return slot.children?.map(transformSlot)\n  }\n\n  return {\n    label: slot.props?.filename || slot.props?.label || `${index}`,\n    icon: slot.props?.icon,\n    component: slot\n  }\n}\n\n// Computed\n\nconst tabs = computed(() => slots.default?.()?.flatMap(transformSlot).filter(Boolean) || [])\n\nconst selectedTab = computed(() => tabs.value.find((_, index) => index === selectedIndex.value))\n</script>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,UAAM,SAAS;AAAA,MACb,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,KAAK;AAAA,QACH,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,UAAU;AAAA,QACV,MAAM;AAAA,UACJ,MAAM;AAAA,QACR;AAAA,MACF;AAAA,IAAA;AAOF,UAAM,QAAQ;AAOd,UAAM,QAAQ;AACd,UAAM,EAAE,IAAI,UAAU,MAAM,qBAAqB,QAAW,QAAQ,MAAM,OAAO,OAAO,GAAG,IAAI;AAEzF,UAAA,gBAAgB,IAAI,CAAC;AACd,aAAA,EAAE,eAAe;AAErB,aAAA,cAAe,MAAW,OAAe;;AAC5C,UAAA,OAAO,KAAK,SAAS,UAAU;AAC1B,gBAAA,UAAK,aAAL,mBAAe,IAAI;AAAA,MAC5B;AAEO,aAAA;AAAA,QACL,SAAO,UAAK,UAAL,mBAAY,eAAY,UAAK,UAAL,mBAAY,UAAS,GAAG,KAAK;AAAA,QAC5D,OAAM,UAAK,UAAL,mBAAY;AAAA,QAClB,WAAW;AAAA,MAAA;AAAA,IAEf;AAIA,UAAM,OAAO,SAAS,MAAM;;AAAA,gCAAM,YAAN,sDAAmB,QAAQ,eAAe,OAAO,aAAY,CAAE;AAAA,KAAA;AAE3F,UAAM,cAAc,SAAS,MAAM,KAAK,MAAM,KAAK,CAAC,GAAG,UAAU,UAAU,cAAc,KAAK,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","x_google_ignoreList":[0]}