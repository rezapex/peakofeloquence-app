{"version":3,"file":"index-B5sAnAZo.js","sources":["../../../../node_modules/@nuxt/ui/dist/runtime/ui.config/elements/avatarGroup.mjs","../../../../node_modules/@nuxt/ui-pro/components/blog/BlogList.vue","../../../../node_modules/@nuxt/ui/dist/runtime/components/elements/AvatarGroup.mjs","../../../../node_modules/@nuxt/ui-pro/components/blog/BlogPost.vue","../../../../pages/blog/index.vue"],"sourcesContent":["export default {\n  wrapper: \"inline-flex flex-row-reverse justify-end\",\n  ring: \"ring-2 ring-white dark:ring-gray-900\",\n  margin: \"-me-1.5 first:me-0\"\n};\n","<template>\n  <div :class=\"ui.wrapper\" v-bind=\"attrs\">\n    <slot />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { PropType } from 'vue'\n\ndefineOptions({\n  inheritAttrs: false\n})\n\nconst props = defineProps({\n  orientation: {\n    type: String as PropType<'vertical' | 'horizontal'>,\n    default: 'horizontal'\n  },\n  class: {\n    type: [String, Object, Array] as PropType<any>,\n    default: undefined\n  },\n  ui: {\n    type: Object as PropType<Partial<typeof config.value>>,\n    default: () => ({})\n  }\n})\n\nconst config = computed(() => {\n  const wrapper: string = ({\n    horizontal: 'flex flex-col lg:grid lg:grid-cols-3 gap-x-8 gap-y-16',\n    vertical: 'flex flex-col gap-y-16 w-full'\n  })[props.orientation]\n\n  return {\n    wrapper\n  }\n})\n\nconst { ui, attrs } = useUI('blog.list', toRef(props, 'ui'), config, toRef(props, 'class'), true)\n</script>\n","import { h, cloneVNode, computed, toRef, defineComponent } from \"vue\";\nimport { twMerge, twJoin } from \"tailwind-merge\";\nimport UAvatar from \"./Avatar.vue\";\nimport { useUI } from \"../../composables/useUI.mjs\";\nimport { mergeConfig, getSlotsChildren } from \"../../utils/index.mjs\";\nimport appConfig from \"#build/app.config\";\nimport { avatar, avatarGroup } from \"#ui/ui.config\";\nconst avatarConfig = mergeConfig(appConfig.ui.strategy, appConfig.ui.avatar, avatar);\nconst avatarGroupConfig = mergeConfig(appConfig.ui.strategy, appConfig.ui.avatarGroup, avatarGroup);\nexport default defineComponent({\n  inheritAttrs: false,\n  props: {\n    size: {\n      type: String,\n      default: null,\n      validator(value) {\n        return Object.keys(avatarConfig.size).includes(value);\n      }\n    },\n    max: {\n      type: Number,\n      default: null\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(props, { slots }) {\n    const { ui, attrs } = useUI(\"avatarGroup\", toRef(props, \"ui\"), avatarGroupConfig, toRef(props, \"class\"));\n    const children = computed(() => getSlotsChildren(slots));\n    const max = computed(() => typeof props.max === \"string\" ? parseInt(props.max, 10) : props.max);\n    const clones = computed(() => children.value.map((node, index) => {\n      const vProps = {};\n      if (!props.max || max.value && index < max.value) {\n        if (props.size) {\n          vProps.size = props.size;\n        }\n        vProps.class = node.props.class || \"\";\n        vProps.class = twMerge(twJoin(vProps.class, ui.value.ring, ui.value.margin), vProps.class);\n        return cloneVNode(node, vProps);\n      }\n      if (max.value !== void 0 && index === max.value) {\n        return h(UAvatar, {\n          size: props.size || avatarConfig.default.size,\n          text: `+${children.value.length - max.value}`,\n          class: twJoin(ui.value.ring, ui.value.margin)\n        });\n      }\n      return null;\n    }).filter(Boolean).reverse());\n    return () => h(\"div\", { class: ui.value.wrapper, ...attrs.value }, clones.value);\n  }\n});\n","<template>\n  <article :class=\"ui.wrapper\" v-bind=\"attrs\">\n    <div v-if=\"image || $slots.image\" :class=\"ui.image.wrapper\">\n      <slot name=\"image\">\n        <NuxtImg v-bind=\"typeof image === 'string' ? { src: image, alt: title } : { alt: title, ...image }\" :class=\"ui.image.base\" />\n      </slot>\n    </div>\n\n    <div :class=\"ui.container\">\n      <div :class=\"ui.inner\">\n        <NuxtLink v-if=\"to\" :aria-label=\"ariaLabel\" v-bind=\"nuxtLinkBind\" class=\"focus:outline-none\" tabindex=\"-1\">\n          <span class=\"absolute inset-0\" aria-hidden=\"true\" />\n        </NuxtLink>\n\n        <div v-if=\"badge || $slots.badge\" :class=\"ui.badge.wrapper\">\n          <slot name=\"badge\">\n            <UBadge v-if=\"badge\" v-bind=\"{ variant: 'subtle', ...badge }\" :class=\"ui.badge.base\" />\n          </slot>\n        </div>\n\n        <h2 v-if=\"title || $slots.title\" :class=\"ui.title\">\n          <slot name=\"title\">\n            {{ title }}\n          </slot>\n        </h2>\n\n        <p v-if=\"description || $slots.description\" :class=\"ui.description\">\n          <slot name=\"description\">\n            {{ description }}\n          </slot>\n        </p>\n\n        <slot />\n      </div>\n\n      <div v-if=\"authors?.length || date\" :class=\"ui.authors.wrapper\">\n        <slot name=\"authors\">\n          <UAvatarGroup v-if=\"authors?.length\">\n            <UAvatar\n              v-for=\"(author, index) in authors\"\n              :key=\"index\"\n              :alt=\"author.name\"\n              :class=\"ui.authors.avatar.base\"\n              v-bind=\"{ size: ui.authors.avatar.size, ...author.avatar }\"\n            >\n              <NuxtLink v-if=\"author.to\" v-bind=\"{ target: '_blank', ...getNuxtLinkProps(author) }\" class=\"focus:outline-none\" tabindex=\"-1\">\n                <span class=\"absolute inset-0\" aria-hidden=\"true\" />\n              </NuxtLink>\n            </UAvatar>\n          </UAvatarGroup>\n        </slot>\n\n        <slot name=\"date\">\n          <time v-if=\"date\" :datetime=\"new Date(date).toISOString()\" :class=\"ui.date\">\n            {{ date }}\n          </time>\n        </slot>\n      </div>\n    </div>\n  </article>\n</template>\n\n<script setup lang=\"ts\">\nimport type { PropType } from 'vue'\nimport { twJoin } from 'tailwind-merge'\nimport { nuxtLinkProps, getNuxtLinkProps } from '#ui/utils'\nimport { getSlotChildrenText } from '../../lib/slots'\nimport type { Avatar, Badge } from '#ui/types'\nimport type { NuxtLinkProps } from '#app'\n\ndefineOptions({\n  inheritAttrs: false\n})\n\nconst slots = useSlots()\n\nconst props = defineProps({\n  ...nuxtLinkProps,\n  title: {\n    type: String,\n    default: undefined\n  },\n  description: {\n    type: String,\n    default: undefined\n  },\n  date: {\n    type: [String, Date],\n    default: undefined\n  },\n  image: {\n    type: [String, Object] as PropType<Partial<HTMLImageElement> | string>,\n    default: undefined\n  },\n  badge: {\n    type: Object as PropType<Badge>,\n    default: undefined\n  },\n  authors: {\n    type: Array as PropType<({\n      name: string\n      avatar: Avatar\n    } & NuxtLinkProps)[]>,\n    default: undefined\n  },\n  orientation: {\n    type: String as PropType<'vertical' | 'horizontal'>,\n    default: 'vertical'\n  },\n  class: {\n    type: [String, Object, Array] as PropType<any>,\n    default: undefined\n  },\n  ui: {\n    type: Object as PropType<Partial<typeof config.value>>,\n    default: () => ({})\n  }\n})\n\nconst config = computed(() => {\n  const wrapper = twJoin(\n    'relative group flex flex-col w-full gap-y-6',\n    props.orientation === 'horizontal' && (!!props.image || !!slots.image) ? 'lg:grid lg:grid-cols-2 lg:gap-x-8 lg:items-center' : undefined\n  )\n\n  return {\n    wrapper,\n    image: {\n      wrapper: 'ring-1 ring-gray-200 dark:ring-gray-800 relative overflow-hidden aspect-[16/9] w-full rounded-lg pointer-events-none',\n      base: 'object-cover object-top w-full h-full transform transition-transform duration-200 group-hover:scale-105'\n    },\n    container: 'flex flex-col justify-between flex-1',\n    inner: 'flex-1',\n    badge: {\n      wrapper: 'mb-3',\n      base: ''\n    },\n    title: 'text-gray-900 dark:text-white text-xl font-semibold truncate group-hover:text-gray-600 dark:group-hover:text-gray-300 transition-colors duration-200',\n    description: 'text-base text-gray-500 dark:text-gray-400 mt-1',\n    date: 'text-sm text-gray-500 dark:text-gray-400 font-medium pointer-events-none',\n    authors: {\n      wrapper: 'relative flex items-center gap-x-3 mt-4',\n      avatar: {\n        base: 'relative ring-1 lg:hover:scale-105 lg:hover:ring-primary-500 dark:lg:hover:ring-primary-400 transition-transform',\n        size: 'xs' as const\n      }\n    }\n  }\n})\n\nconst { ui, attrs } = useUI('blog.post', toRef(props, 'ui'), config, toRef(props, 'class'), true)\n\nconst nuxtLinkBind = computed(() => getNuxtLinkProps(props))\nconst ariaLabel = computed(() => (props.title || (slots.title && getSlotChildrenText(slots.title())) || 'Post link').trim())\n</script>\n","<script setup lang=\"ts\">\nimport type { BlogPost } from '~/types'\n\nconst { data: page } = await useAsyncData('blog', () => queryContent('/blog').findOne())\nif (!page.value) {\n  throw createError({ statusCode: 404, statusMessage: 'Page not found', fatal: true })\n}\n\nconst { data: posts } = await useAsyncData('posts', () => queryContent<BlogPost>('/blog')\n  .where({ _extension: 'md' })\n  .sort({ date: -1 })\n  .find())\n\nuseSeoMeta({\n  title: page.value.title,\n  ogTitle: page.value.title,\n  description: page.value.description,\n  ogDescription: page.value.description\n})\n\ndefineOgImage({\n  component: 'Saas',\n  title: page.value.title,\n  description: page.value.description\n})\n</script>\n\n<template>\n  <UContainer>\n    <UPageHeader v-bind=\"page\" class=\"py-[50px]\" />\n\n    <UPageBody>\n      <UBlogList>\n        <UBlogPost\n          v-for=\"(post, index) in posts\"\n          :key=\"index\"\n          :to=\"post._path\"\n          :title=\"post.title\"\n          :description=\"post.description\"\n          :image=\"post.image\"\n          :date=\"new Date(post.date).toLocaleDateString('en', { year: 'numeric', month: 'short', day: 'numeric' })\"\n          :authors=\"post.authors\"\n          :badge=\"post.badge\"\n          :orientation=\"index === 0 ? 'horizontal' : 'vertical'\"\n          :class=\"[index === 0 && 'col-span-full']\"\n          :ui=\"{\n            description: 'line-clamp-2'\n          }\"\n        />\n      </UBlogList>\n    </UPageBody>\n  </UContainer>\n</template>\n"],"names":["UAvatar","_withAsyncContext"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}