{"version":3,"file":"ContentToc-Biys1i44.js","sources":["../../../../node_modules/@nuxt/ui-pro/modules/pro/runtime/components/content/ContentSurroundLink.vue","../../../../node_modules/@nuxt/ui-pro/modules/pro/runtime/components/content/ContentSurround.vue","../../../../node_modules/@nuxt/ui-pro/composables/useScrollspy.ts","../../../../node_modules/@nuxt/ui-pro/modules/pro/runtime/components/content/ContentTocLinks.vue","../../../../node_modules/@nuxt/ui-pro/modules/pro/runtime/components/content/ContentToc.vue"],"sourcesContent":["<template>\n  <NuxtLink :to=\"(link as ParsedContent)._path\" :class=\"ui.wrapper\" v-bind=\"attrs\">\n    <div v-if=\"icon || (link as ParsedContent).icon\" :class=\"ui.icon.wrapper\">\n      <UIcon :name=\"icon || (link as ParsedContent).icon\" :class=\"ui.icon.base\" />\n    </div>\n\n    <p :class=\"ui.title\">\n      {{ (link as ParsedContent).title }}\n    </p>\n\n    <p :class=\"ui.description\">\n      {{ (link as ParsedContent).description }}\n    </p>\n  </NuxtLink>\n</template>\n\n<script setup lang=\"ts\">\nimport type { PropType } from 'vue'\nimport type { ParsedContent } from '@nuxt/content/dist/runtime/types'\n\nconst config = {\n  wrapper: 'block px-6 py-8 border not-prose rounded-lg border-gray-200 dark:border-gray-800 hover:bg-gray-100/50 dark:hover:bg-gray-800/50 group',\n  icon: {\n    wrapper: 'inline-flex items-center rounded-full p-1.5 bg-gray-100 dark:bg-gray-800 group-hover:bg-primary/10 ring-1 ring-gray-300 dark:ring-gray-700 mb-4 group-hover:ring-primary/50',\n    base: 'w-5 h-5 text-gray-900 dark:text-white group-hover:text-primary'\n  },\n  title: 'font-medium text-gray-900 dark:text-white text-[15px] mb-1',\n  description: 'text-sm font-normal text-gray-500 dark:text-gray-400 line-clamp-2'\n}\n\ndefineOptions({\n  inheritAttrs: false\n})\n\nconst props = defineProps({\n  link: {\n    type: Object as PropType<Pick<ParsedContent, string>>,\n    required: true\n  },\n  icon: {\n    type: String,\n    default: undefined\n  },\n  class: {\n    type: [String, Object, Array] as PropType<any>,\n    default: undefined\n  },\n  ui: {\n    type: Object as PropType<Partial<typeof config>>,\n    default: () => ({})\n  }\n})\n\nconst { ui, attrs } = useUI('content.surround.link', toRef(props, 'ui'), config, toRef(props, 'class'), true)\n</script>\n","<template>\n  <div :class=\"ui.wrapper\" v-bind=\"attrs\">\n    <UContentSurroundLink\n      v-if=\"prev\"\n      :link=\"prev\"\n      :ui=\"ui.link\"\n      :icon=\"ui.icon.prev\"\n    />\n    <span v-else class=\"hidden sm:block\">&nbsp;</span>\n    <UContentSurroundLink\n      v-if=\"next\"\n      :link=\"next\"\n      :ui=\"ui.link\"\n      :icon=\"ui.icon.next\"\n      class=\"text-right\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { PropType } from 'vue'\nimport type { ParsedContent } from '@nuxt/content/dist/runtime/types'\n\nconst config = {\n  wrapper: 'grid gap-8 sm:grid-cols-2',\n  icon: {\n    prev: 'i-heroicons-arrow-left-20-solid',\n    next: 'i-heroicons-arrow-right-20-solid'\n  },\n  link: {}\n}\n\ndefineOptions({\n  inheritAttrs: false\n})\n\nconst props = defineProps({\n  surround: {\n    type: Array as PropType<Pick<ParsedContent, string>[]>,\n    default: () => []\n  },\n  class: {\n    type: [String, Object, Array] as PropType<any>,\n    default: undefined\n  },\n  ui: {\n    type: Object as PropType<Partial<typeof config>>,\n    default: () => ({})\n  }\n})\n\nconst { ui, attrs } = useUI('content.surround', toRef(props, 'ui'), config, toRef(props, 'class'), true)\n\nconst [prev, next] = props.surround || []\n</script>\n","/**\n * Scrollspy allows you to watch visible headings in a specific page.\n * Useful for table of contents live style updates.\n */\nexport const useScrollspy = () => {\n  const observer = ref<IntersectionObserver>()\n  const visibleHeadings = ref<string[]>([])\n  const activeHeadings = ref<string[]>([])\n\n  const observerCallback = (entries: IntersectionObserverEntry[]) => {\n    entries.forEach((entry) => {\n      const id = entry.target.id\n\n      if (entry.isIntersecting) {\n        visibleHeadings.value = [...visibleHeadings.value, id]\n      } else {\n        visibleHeadings.value = visibleHeadings.value.filter(h => h !== id)\n      }\n    })\n  }\n\n  const updateHeadings = (headings: Element[]) => {\n    headings.forEach((heading) => {\n      if (!observer.value) {\n        return\n      }\n\n      observer.value.observe(heading)\n    })\n  }\n\n  watch(visibleHeadings, (val, oldVal) => {\n    if (val.length === 0) {\n      activeHeadings.value = oldVal\n    } else {\n      activeHeadings.value = val\n    }\n  })\n\n  // Create intersection observer\n  onBeforeMount(() => (observer.value = new IntersectionObserver(observerCallback)))\n\n  // Destroy it\n  onBeforeUnmount(() => observer.value?.disconnect())\n\n  return {\n    visibleHeadings,\n    activeHeadings,\n    updateHeadings\n  }\n}\n","<template>\n  <ul v-if=\"links?.length\" :class=\"ui.wrapper\" v-bind=\"attrs\">\n    <li v-for=\"link in links\" :key=\"link.text\" :class=\"[ui.wrapper, link.depth === 3 && ui.depth]\">\n      <a\n        :href=\"`#${link.id}`\"\n        :class=\"[ui.base, activeHeadings.includes(link.id) ? ui.active : ui.inactive]\"\n        @click.prevent=\"scrollToHeading(link.id)\"\n      >\n        {{ link.text }}\n      </a>\n\n      <UContentTocLinks v-if=\"link.children\" :links=\"link.children\" />\n    </li>\n  </ul>\n</template>\n\n<script setup lang=\"ts\">\nimport type { PropType } from 'vue'\nimport type { TocLink } from '@nuxt/content/dist/runtime/types'\n\nconst config = {\n  wrapper: 'space-y-1',\n  base: 'block text-sm/6 truncate',\n  active: 'text-primary',\n  inactive: 'text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200',\n  depth: 'ml-3'\n}\n\ndefineOptions({\n  inheritAttrs: false\n})\n\nconst props = defineProps({\n  links: {\n    type: Array as PropType<TocLink[]>,\n    default: () => []\n  },\n  class: {\n    type: [String, Object, Array] as PropType<any>,\n    default: undefined\n  },\n  ui: {\n    type: Object as PropType<Partial<typeof config>>,\n    default: () => ({})\n  }\n})\n\nconst emit = defineEmits(['move'])\n\nconst router = useRouter()\nconst nuxtApp = useNuxtApp()\nconst { activeHeadings, updateHeadings } = useScrollspy()\nconst { ui, attrs } = useUI('content.toc.links', toRef(props, 'ui'), config, toRef(props, 'class'), true)\n\nnuxtApp.hooks.hookOnce('page:finish', () => {\n  updateHeadings([\n    ...document.querySelectorAll('h2'),\n    ...document.querySelectorAll('h3')\n  ])\n})\n\nconst scrollToHeading = (id: string) => {\n  const encodedId = encodeURIComponent(id)\n  router.push(`#${encodedId}`)\n  emit('move', id)\n}\n</script>\n","<template>\n  <nav :class=\"ui.wrapper\" v-bind=\"attrs\">\n    <div :class=\"[links?.length ? ui.container.base : ui.container.empty]\">\n      <slot name=\"top\" />\n\n      <button v-if=\"links?.length\" :class=\"ui.button.base\" tabindex=\"-1\" @click=\"open = !open\">\n        <span :class=\"ui.button.label\">{{ title }}</span>\n\n        <UIcon\n          :name=\"ui.button.trailingIcon.name\"\n          class=\"lg:!hidden\"\n          :class=\"[ui.button.trailingIcon.base, open ? ui.button.trailingIcon.active : ui.button.trailingIcon.inactive]\"\n        />\n      </button>\n\n      <UContentTocLinks :links=\"links\" :ui=\"ui.links\" :class=\"[open ? 'lg:block' : 'hidden lg:block']\" />\n\n      <slot name=\"bottom\" />\n    </div>\n  </nav>\n</template>\n\n<script setup lang=\"ts\">\nimport type { PropType } from 'vue'\nimport type { TocLink } from '@nuxt/content/dist/runtime/types'\n\nconst appConfig = useAppConfig()\n\nconst config = computed(() => ({\n  wrapper: 'sticky top-[--header-height] bg-background/75 backdrop-blur -mx-4 sm:-mx-6 px-4 sm:px-6 lg:px-4 lg:-mx-4 overflow-y-auto max-h-[calc(100vh-var(--header-height))]',\n  container: {\n    base: 'py-3 lg:py-8 border-b border-dashed border-gray-200 dark:border-gray-800 lg:border-0 space-y-3',\n    empty: 'lg:py-8 space-y-3'\n  },\n  button: {\n    base: 'flex items-center gap-1.5 lg:cursor-text lg:select-text w-full group',\n    label: 'font-semibold text-sm/6 truncate',\n    trailingIcon: {\n      name: appConfig.ui.icons.chevron,\n      base: 'w-5 h-5 ms-auto transform transition-transform duration-200 flex-shrink-0 mr-1.5',\n      active: 'text-gray-700 dark:text-gray-200',\n      inactive: 'text-gray-500 dark:text-gray-400 group-hover:text-gray-700 dark:group-hover:text-gray-200 -rotate-90'\n    }\n  },\n  links: {}\n}))\n\ndefineOptions({\n  inheritAttrs: false\n})\n\nconst props = defineProps({\n  title: {\n    type: String,\n    default: 'Table of Contents'\n  },\n  links: {\n    type: Array as PropType<TocLink[]>,\n    default: () => []\n  },\n  class: {\n    type: [String, Object, Array] as PropType<any>,\n    default: undefined\n  },\n  ui: {\n    type: Object as PropType<Partial<typeof config.value>>,\n    default: () => ({})\n  }\n})\n\nconst { ui, attrs } = useUI('content.toc', toRef(props, 'ui'), config, toRef(props, 'class'), true)\n\nconst open = ref(false)\n</script>\n"],"names":[],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}