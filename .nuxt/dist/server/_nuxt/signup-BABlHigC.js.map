{"version":3,"file":"signup-BABlHigC.js","sources":["../../../../node_modules/@nuxt/ui/dist/runtime/components/forms/Form.vue","../../../../node_modules/@nuxt/ui-pro/components/auth/AuthForm.vue","../../../../pages/signup.vue"],"sourcesContent":["<template>\n  <form @submit.prevent=\"onSubmit\">\n    <slot />\n  </form>\n</template>\n\n<script>\nimport { provide, ref, defineComponent, onUnmounted, onMounted } from \"vue\";\nimport { useEventBus } from \"@vueuse/core\";\nimport { useId } from \"#imports\";\nclass FormException extends Error {\n  constructor(message) {\n    super(message);\n    this.message = message;\n    Object.setPrototypeOf(this, FormException.prototype);\n  }\n}\nexport default defineComponent({\n  props: {\n    schema: {\n      type: Object,\n      default: void 0\n    },\n    state: {\n      type: Object,\n      required: true\n    },\n    validate: {\n      type: Function,\n      default: () => []\n    },\n    validateOn: {\n      type: Array,\n      default: () => [\"blur\", \"input\", \"change\", \"submit\"]\n    }\n  },\n  emits: [\"submit\", \"error\"],\n  setup(props, { expose, emit }) {\n    const formId = useId();\n    const bus = useEventBus(`form-${formId}`);\n    onMounted(() => {\n      bus.on(async (event) => {\n        if (event.type !== \"submit\" && props.validateOn?.includes(event.type)) {\n          await validate(event.path, { silent: true });\n        }\n      });\n    });\n    onUnmounted(() => {\n      bus.reset();\n    });\n    const errors = ref([]);\n    provide(\"form-errors\", errors);\n    provide(\"form-events\", bus);\n    const inputs = ref({});\n    provide(\"form-inputs\", inputs);\n    async function getErrors() {\n      let errs = await props.validate(props.state);\n      if (props.schema) {\n        if (isZodSchema(props.schema)) {\n          errs = errs.concat(await getZodErrors(props.state, props.schema));\n        } else if (isYupSchema(props.schema)) {\n          errs = errs.concat(await getYupErrors(props.state, props.schema));\n        } else if (isJoiSchema(props.schema)) {\n          errs = errs.concat(await getJoiErrors(props.state, props.schema));\n        } else if (isValibotSchema(props.schema)) {\n          errs = errs.concat(await getValibotError(props.state, props.schema));\n        } else {\n          throw new Error(\"Form validation failed: Unsupported form schema\");\n        }\n      }\n      return errs;\n    }\n    async function validate(path, opts = { silent: false }) {\n      let paths = path;\n      if (path && !Array.isArray(path)) {\n        paths = [path];\n      }\n      if (paths) {\n        const otherErrors = errors.value.filter(\n          (error) => !paths.includes(error.path)\n        );\n        const pathErrors = (await getErrors()).filter(\n          (error) => paths.includes(error.path)\n        );\n        errors.value = otherErrors.concat(pathErrors);\n      } else {\n        errors.value = await getErrors();\n      }\n      if (errors.value.length > 0) {\n        if (opts.silent)\n          return false;\n        throw new FormException(\n          `Form validation failed: ${JSON.stringify(errors.value, null, 2)}`\n        );\n      }\n      return props.state;\n    }\n    async function onSubmit(payload) {\n      const event = payload;\n      try {\n        if (props.validateOn?.includes(\"submit\")) {\n          await validate();\n        }\n        const submitEvent = {\n          ...event,\n          data: props.state\n        };\n        emit(\"submit\", submitEvent);\n      } catch (error) {\n        if (!(error instanceof FormException)) {\n          throw error;\n        }\n        const errorEvent = {\n          ...event,\n          errors: errors.value.map((err) => ({\n            ...err,\n            id: inputs.value[err.path]\n          }))\n        };\n        emit(\"error\", errorEvent);\n      }\n    }\n    expose({\n      validate,\n      errors,\n      setErrors(errs, path) {\n        errors.value = errs;\n        if (path) {\n          errors.value = errors.value.filter(\n            (error) => error.path !== path\n          ).concat(errs);\n        } else {\n          errors.value = errs;\n        }\n      },\n      async submit() {\n        await onSubmit(new Event(\"submit\"));\n      },\n      getErrors(path) {\n        if (path) {\n          return errors.value.filter((err) => err.path === path);\n        }\n        return errors.value;\n      },\n      clear(path) {\n        if (path) {\n          errors.value = errors.value.filter((err) => err.path !== path);\n        } else {\n          errors.value = [];\n        }\n      }\n    });\n    return {\n      onSubmit\n    };\n  }\n});\nfunction isYupSchema(schema) {\n  return schema.validate && schema.__isYupSchema__;\n}\nfunction isYupError(error) {\n  return error.inner !== void 0;\n}\nasync function getYupErrors(state, schema) {\n  try {\n    await schema.validate(state, { abortEarly: false });\n    return [];\n  } catch (error) {\n    if (isYupError(error)) {\n      return error.inner.map((issue) => ({\n        path: issue.path ?? \"\",\n        message: issue.message\n      }));\n    } else {\n      throw error;\n    }\n  }\n}\nfunction isZodSchema(schema) {\n  return schema.parse !== void 0;\n}\nasync function getZodErrors(state, schema) {\n  const result = await schema.safeParseAsync(state);\n  if (result.success === false) {\n    return result.error.issues.map((issue) => ({\n      path: issue.path.join(\".\"),\n      message: issue.message\n    }));\n  }\n  return [];\n}\nfunction isJoiSchema(schema) {\n  return schema.validateAsync !== void 0 && schema.id !== void 0;\n}\nfunction isJoiError(error) {\n  return error.isJoi === true;\n}\nasync function getJoiErrors(state, schema) {\n  try {\n    await schema.validateAsync(state, { abortEarly: false });\n    return [];\n  } catch (error) {\n    if (isJoiError(error)) {\n      return error.details.map((detail) => ({\n        path: detail.path.join(\".\"),\n        message: detail.message\n      }));\n    } else {\n      throw error;\n    }\n  }\n}\nfunction isValibotSchema(schema) {\n  return schema._parse !== void 0;\n}\nasync function getValibotError(state, schema) {\n  const result = await schema._parse(state);\n  if (result.issues) {\n    return result.issues.map((issue) => ({\n      path: issue.path?.map((p) => p.key).join(\".\") || \"\",\n      message: issue.message\n    }));\n  }\n  return [];\n}\n</script>\n","<template>\n  <div :class=\"ui.wrapper\" v-bind=\"attrs\">\n    <div v-if=\"(icon || $slots.icon) || (title || $slots.title) || (description || $slots.description)\" :class=\"ui.base\">\n      <div v-if=\"icon || $slots.icon\" :class=\"ui.icon.wrapper\">\n        <slot name=\"icon\">\n          <UIcon :name=\"(icon as string)\" :class=\"ui.icon.base\" />\n        </slot>\n      </div>\n\n      <p v-if=\"title || $slots.title\" :class=\"ui.title\">\n        <slot name=\"title\">\n          {{ title }}\n        </slot>\n      </p>\n\n      <p v-if=\"description || $slots.description\" :class=\"ui.description\">\n        <slot name=\"description\">\n          {{ description }}\n        </slot>\n      </p>\n    </div>\n\n    <div :class=\"ui.container\">\n      <div v-if=\"providers?.length\" :class=\"ui.providers\">\n        <UButton v-for=\"(provider, index) in providers\" :key=\"index\" v-bind=\"provider\" block @click=\"provider.click\" />\n      </div>\n\n      <UDivider v-if=\"providers?.length && fields?.length\" :label=\"divider\" />\n\n      <UForm\n        v-if=\"fields?.length\"\n        ref=\"formRef\"\n        :state=\"state\"\n        :schema=\"schema\"\n        :validate=\"validate\"\n        :validate-on=\"validateOn\"\n        :class=\"ui.form\"\n        @submit=\"$emit('submit', $event.data)\"\n      >\n        <UFormGroup\n          v-for=\"field in fields\"\n          :key=\"field.name\"\n          :label=\"field.label\"\n          :description=\"field.description\"\n          :help=\"field.help\"\n          :hint=\"field.hint\"\n          :name=\"field.name\"\n          :size=\"field.size\"\n        >\n          <UInput v-model=\"state[field.name]\" v-bind=\"omit(field, ['label', 'description', 'help', 'hint', 'size'])\" />\n\n          <template v-if=\"$slots[`${field.name}-label`]\" #label>\n            <slot :name=\"`${field.name}-label`\" />\n          </template>\n          <template v-if=\"$slots[`${field.name}-description`]\" #description>\n            <slot :name=\"`${field.name}-description`\" />\n          </template>\n          <template v-if=\"$slots[`${field.name}-hint`]\" #hint>\n            <slot :name=\"`${field.name}-hint`\" />\n          </template>\n          <template v-if=\"$slots[`${field.name}-help`]\" #help>\n            <slot :name=\"`${field.name}-help`\" />\n          </template>\n        </UFormGroup>\n        <slot name=\"validation\" />\n        <UButton type=\"submit\" block :loading=\"loading\" v-bind=\"{ ...ui.default.submitButton, ...submitButton }\" />\n      </UForm>\n    </div>\n\n    <p v-if=\"$slots.footer\" :class=\"ui.footer\">\n      <slot name=\"footer\" />\n    </p>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { PropType } from 'vue'\nimport { twJoin } from 'tailwind-merge'\nimport { omit } from '#ui/utils'\nimport type { Button, FormError, FormEventType, FormGroupSize } from '#ui/types'\n\ndefineOptions({\n  inheritAttrs: false\n})\n\nconst props = defineProps({\n  title: {\n    type: String,\n    default: undefined\n  },\n  description: {\n    type: String,\n    default: undefined\n  },\n  icon: {\n    type: String,\n    default: undefined\n  },\n  align: {\n    type: String as PropType<'top' | 'bottom'>,\n    default: 'bottom'\n  },\n  loading: {\n    type: Boolean,\n    default: false\n  },\n  fields: {\n    type: Array as PropType<{\n      name: string\n      type: string\n      label: string\n      description?: string\n      help?: string\n      hint?: string\n      size?: FormGroupSize\n      placeholder?: string\n      required?: boolean\n      value?: string | number\n      readonly?: boolean\n    }[]>,\n    default: () => []\n  },\n  providers: {\n    type: Array as PropType<(Button & { click?: Function })[]>,\n    default: () => []\n  },\n  submitButton: {\n    type: Object as PropType<Button>,\n    default: () => ({})\n  },\n  schema: {\n    type: Object as PropType<any>,\n    default: undefined\n  },\n  validate: {\n    type: [Function, Array] as PropType<((state: any) => Promise<FormError[]>) | ((state: any) => FormError[])>,\n    default: undefined\n  },\n  validateOn: {\n    type: Array as PropType<FormEventType[]>,\n    default: () => ['submit']\n  },\n  divider: {\n    type: String,\n    default: 'or'\n  },\n  class: {\n    type: [String, Object, Array] as PropType<any>,\n    default: undefined\n  },\n  ui: {\n    type: Object as PropType<Partial<typeof config.value>>,\n    default: () => ({})\n  }\n})\n\ndefineEmits(['submit'])\n\nconst config = computed(() => {\n  const container: string = twJoin(\n    'gap-y-6 flex flex-col',\n    props.align === 'top' && 'flex-col-reverse'\n  )\n\n  return {\n    wrapper: 'w-full max-w-sm space-y-6',\n    base: '',\n    container,\n    title: 'text-2xl text-gray-900 dark:text-white font-bold',\n    description: 'text-gray-500 dark:text-gray-400 mt-1',\n    icon: {\n      wrapper: 'mb-2 pointer-events-none',\n      base: 'w-8 h-8 flex-shrink-0 text-gray-900 dark:text-white'\n    },\n    providers: 'space-y-3',\n    form: 'space-y-6',\n    footer: 'text-sm text-gray-500 dark:text-gray-400 mt-2',\n    default: {\n      submitButton: {\n        label: 'Continue'\n      }\n    }\n  }\n})\n\nconst formRef = ref<HTMLElement>()\n\nconst { ui, attrs } = useUI('auth.form', toRef(props, 'ui'), config, toRef(props, 'class'), true)\n\nconst state = reactive(Object.values(props.fields).reduce((acc, { name, value }) => {\n  acc[name] = value\n  return acc\n}, {} as Record<string, any>))\n\n// Expose\n\ndefineExpose({\n  formRef,\n  state\n})\n</script>\n","<script setup lang=\"ts\">\ndefinePageMeta({\n  layout: 'auth'\n})\n\nuseSeoMeta({\n  title: 'Sign up'\n})\n\nconst fields = [{\n  name: 'name',\n  type: 'text',\n  label: 'Name',\n  placeholder: 'Enter your name'\n}, {\n  name: 'email',\n  type: 'text',\n  label: 'Email',\n  placeholder: 'Enter your email'\n}, {\n  name: 'password',\n  label: 'Password',\n  type: 'password',\n  placeholder: 'Enter your password'\n}]\n\nconst validate = (state: any) => {\n  const errors = []\n  if (!state.email) errors.push({ path: 'email', message: 'Email is required' })\n  if (!state.password) errors.push({ path: 'password', message: 'Password is required' })\n  return errors\n}\n\nconst providers = [{\n  label: 'Continue with GitHub',\n  icon: 'i-simple-icons-github',\n  color: 'gray' as const,\n  click: () => {\n    console.log('Redirect to GitHub')\n  }\n}]\n\nfunction onSubmit (data: any) {\n  console.log('Submitted', data)\n}\n</script>\n\n<!-- eslint-disable vue/multiline-html-element-content-newline -->\n<!-- eslint-disable vue/singleline-html-element-content-newline -->\n<template>\n  <UCard class=\"max-w-sm w-full bg-white/75 dark:bg-white/5 backdrop-blur\">\n    <UAuthForm\n      :fields=\"fields\"\n      :validate=\"validate\"\n      :providers=\"providers\"\n      align=\"top\"\n      title=\"Create an account\"\n      :ui=\"{ base: 'text-center', footer: 'text-center' }\"\n      :submit-button=\"{ label: 'Create account' }\"\n      @submit=\"onSubmit\"\n    >\n      <template #description>\n        Already have an account? <NuxtLink to=\"/login\" class=\"text-primary font-medium\">Login</NuxtLink>.\n      </template>\n\n      <template #footer>\n        By signing up, you agree to our <NuxtLink to=\"/\" class=\"text-primary font-medium\">Terms of Service</NuxtLink>.\n      </template>\n    </UAuthForm>\n  </UCard>\n</template>\n"],"names":["_sfc_main","_ssrRenderAttrs","_ssrRenderSlot"],"mappings":"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","x_google_ignoreList":[0,1]}