{"version":3,"file":"ContentQuery-DrpApfFF.js","sources":["../../../../node_modules/@nuxt/content/dist/runtime/components/ContentQuery.vue"],"sourcesContent":["<script>\nimport { hash } from \"ohash\";\nimport { toRefs, defineComponent, h, useSlots, watch } from \"vue\";\nimport { computed, useAsyncData, queryContent, useRuntimeConfig } from \"#imports\";\nconst ContentQuery = defineComponent({\n  name: \"ContentQuery\",\n  props: {\n    /**\n     * The path of the content to load from content source.\n     */\n    path: {\n      type: String,\n      required: false,\n      default: void 0\n    },\n    /**\n     * Select a subset of fields\n     */\n    only: {\n      type: Array,\n      required: false,\n      default: void 0\n    },\n    /**\n     * Remove a subset of fields\n     */\n    without: {\n      type: Array,\n      required: false,\n      default: void 0\n    },\n    /**\n     * Filter results\n     */\n    where: {\n      type: Object,\n      required: false,\n      default: void 0\n    },\n    /**\n     * Sort results\n     */\n    sort: {\n      type: Object,\n      required: false,\n      default: void 0\n    },\n    /**\n     * Limit number of results\n     */\n    limit: {\n      type: Number,\n      required: false,\n      default: void 0\n    },\n    /**\n     * Skip number of results\n     */\n    skip: {\n      type: Number,\n      required: false,\n      default: void 0\n    },\n    /**\n     * Filter contents based on locale\n     */\n    locale: {\n      type: String,\n      required: false,\n      default: void 0\n    },\n    /**\n     * A type of query to be made.\n     */\n    find: {\n      type: String,\n      required: false,\n      default: void 0\n    }\n  },\n  async setup(props) {\n    const {\n      path,\n      only,\n      without,\n      where,\n      sort,\n      limit,\n      skip,\n      locale,\n      find\n    } = toRefs(props);\n    const isPartial = computed(() => path.value?.includes(\"/_\"));\n    const legacy = !useRuntimeConfig().public.content.experimental.advanceQuery;\n    watch(() => props, () => refresh(), { deep: true });\n    const resolveResult = (result) => {\n      if (legacy) {\n        if (result?.surround) {\n          return result.surround;\n        }\n        return result?._id || Array.isArray(result) ? result : result?.result;\n      }\n      return result.result;\n    };\n    const { data, refresh } = await useAsyncData(\n      `content-query-${hash(props)}`,\n      () => {\n        let queryBuilder;\n        if (path.value) {\n          queryBuilder = queryContent(path.value);\n        } else {\n          queryBuilder = queryContent();\n        }\n        if (only.value) {\n          queryBuilder = queryBuilder.only(only.value);\n        }\n        if (without.value) {\n          queryBuilder = queryBuilder.without(without.value);\n        }\n        if (where.value) {\n          queryBuilder = queryBuilder.where(where.value);\n        }\n        if (sort.value) {\n          queryBuilder = queryBuilder.sort(sort.value);\n        }\n        if (limit.value) {\n          queryBuilder = queryBuilder.limit(limit.value);\n        }\n        if (skip.value) {\n          queryBuilder = queryBuilder.skip(skip.value);\n        }\n        if (locale.value) {\n          queryBuilder = queryBuilder.where({ _locale: locale.value });\n        }\n        if (find.value === \"one\") {\n          return queryBuilder.findOne().then(resolveResult);\n        }\n        if (find.value === \"surround\") {\n          if (!path.value) {\n            console.warn(\"[Content] Surround queries requires `path` prop to be set.\");\n            console.warn(\"[Content] Query without `path` will return regular `find()` results.\");\n            return queryBuilder.find().then(resolveResult);\n          }\n          if (legacy) {\n            return queryBuilder.findSurround(path.value);\n          } else {\n            return queryBuilder.withSurround(path.value).findOne().then(resolveResult);\n          }\n        }\n        return queryBuilder.find().then(resolveResult);\n      }\n    );\n    return {\n      isPartial,\n      data,\n      refresh\n    };\n  },\n  /**\n   * Content not found fallback\n   * @slot not-found\n   */\n  render(ctx) {\n    const slots = useSlots();\n    const {\n      // Setup\n      data,\n      refresh,\n      isPartial,\n      // Props\n      path,\n      only,\n      without,\n      where,\n      sort,\n      limit,\n      skip,\n      locale,\n      find\n    } = ctx;\n    const props = {\n      path,\n      only,\n      without,\n      where,\n      sort,\n      limit,\n      skip,\n      locale,\n      find\n    };\n    if (props.find === \"one\") {\n      if (!data && slots?.[\"not-found\"]) {\n        return slots[\"not-found\"]({ props, ...this.$attrs });\n      }\n      if (slots?.empty && data?._type === \"markdown\" && !data?.body?.children.length) {\n        return slots.empty({ props, ...this.$attrs });\n      }\n    } else if (!data || !data.length) {\n      if (slots?.[\"not-found\"]) {\n        return slots[\"not-found\"]({ props, ...this.$attrs });\n      }\n    }\n    if (slots?.default) {\n      return slots.default({ data, refresh, isPartial, props, ...this.$attrs });\n    }\n    const emptyNode = (slot, data2) => h(\"pre\", null, JSON.stringify({ message: \"You should use slots with <ContentQuery>!\", slot, data: data2 }, null, 2));\n    return emptyNode(\"default\", { data, props, isPartial });\n  }\n});\nexport default ContentQuery;\n</script>\n"],"names":[],"mappings":"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","x_google_ignoreList":[0]}