{
  "resolvedId": "/Users/rezajafar/peakofeloquence-site/node_modules/nuxt-og-image/dist/runtime/composables/util.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { unref, useRuntimeConfig } from \"#imports\";\nimport { componentNames } from \"#build/og-image-component-names.mjs\";\nexport function normaliseOgImageOptions(_options) {\n  const options = { ...unref(_options) };\n  if (options.static)\n    options.cache = options.cache || options.static;\n  if (!options.provider)\n    options.provider = \"satori\";\n  const { runtimeSatori } = useRuntimeConfig()[\"nuxt-og-image\"];\n  if (options.provider === \"satori\" && !runtimeSatori)\n    options.provider = \"browser\";\n  if (options.component && componentNames) {\n    const originalName = options.component;\n    for (const component of componentNames) {\n      if (component.pascalName.endsWith(originalName) || component.kebabName.endsWith(originalName)) {\n        options.component = component.pascalName;\n        options.componentHash = component.hash;\n        break;\n      }\n    }\n  }\n  return options;\n}\n",
      "start": 1712268133720,
      "end": 1712268133745,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1712268133745,
      "end": 1712268133745,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1712268133745,
      "end": 1712268133745,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1712268133745,
      "end": 1712268133745,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1712268133745,
      "end": 1712268133745,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1712268133745,
      "end": 1712268133745,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1712268133745,
      "end": 1712268133745,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1712268133745,
      "end": 1712268133745,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1712268133745,
      "end": 1712268133745,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1712268133745,
      "end": 1712268133745,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1712268133745,
      "end": 1712268133745,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1712268133745,
      "end": 1712268133745,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1712268133745,
      "end": 1712268133745,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1712268133745,
      "end": 1712268133745,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1712268133745,
      "end": 1712268133745,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712268133745,
      "end": 1712268133745,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712268133745,
      "end": 1712268133745,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1712268133745,
      "end": 1712268133745,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1712268133745,
      "end": 1712268133745,
      "order": "normal"
    },
    {
      "name": "nuxt:fonts:font-family-injection",
      "start": 1712268133745,
      "end": 1712268133745,
      "order": "normal"
    },
    {
      "name": "nuxt:fonts:font-family-injection",
      "start": 1712268133745,
      "end": 1712268133745,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1712268133745,
      "end": 1712268133745,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712268133745,
      "end": 1712268133745,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1712268133745,
      "end": 1712268133745,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1712268133745,
      "end": 1712268133745,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1712268133745,
      "end": 1712268133745,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1712268133745,
      "end": 1712268133745,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1712268133745,
      "end": 1712268133745,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1712268133745,
      "end": 1712268133745,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1712268133745,
      "end": 1712268133745,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1712268133745,
      "end": 1712268133745,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1712268133745,
      "end": 1712268133745,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1712268133745,
      "end": 1712268133745,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1712268133745,
      "end": 1712268133745,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { unref } from 'vue';\nimport { useRuntimeConfig } from '#app/nuxt';\nimport { componentNames } from \"#build/og-image-component-names.mjs\";\nexport function normaliseOgImageOptions(_options) {\n  const options = { ...unref(_options) };\n  if (options.static)\n    options.cache = options.cache || options.static;\n  if (!options.provider)\n    options.provider = \"satori\";\n  const { runtimeSatori } = useRuntimeConfig()[\"nuxt-og-image\"];\n  if (options.provider === \"satori\" && !runtimeSatori)\n    options.provider = \"browser\";\n  if (options.component && componentNames) {\n    const originalName = options.component;\n    for (const component of componentNames) {\n      if (component.pascalName.endsWith(originalName) || component.kebabName.endsWith(originalName)) {\n        options.component = component.pascalName;\n        options.componentHash = component.hash;\n        break;\n      }\n    }\n  }\n  return options;\n}\n",
      "start": 1712268133745,
      "end": 1712268133745,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjtG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC;"
      }
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { unref } from 'vue';\nimport { useRuntimeConfig } from '#app/nuxt';\nimport { componentNames } from \"#build/og-image-component-names.mjs\";\nexport function normaliseOgImageOptions(_options) {\n  const options = { ...unref(_options) };\n  if (options.static)\n    options.cache = options.cache || options.static;\n  if (!options.provider)\n    options.provider = \"satori\";\n  const { runtimeSatori } = useRuntimeConfig()[\"nuxt-og-image\"];\n  if (options.provider === \"satori\" && !runtimeSatori)\n    options.provider = \"browser\";\n  if (options.component && componentNames) {\n    const originalName = options.component;\n    for (const component of componentNames) {\n      if (component.pascalName.endsWith(originalName) || component.kebabName.endsWith(originalName)) {\n        options.component = component.pascalName;\n        options.componentHash = component.hash;\n        break;\n      }\n    }\n  }\n  return options;\n}\n",
      "start": 1712268133745,
      "end": 1712268133745,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjtG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1712268133745,
      "end": 1712268133745,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1712268133745,
      "end": 1712268133745,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1712268133745,
      "end": 1712268133745,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1712268133745,
      "end": 1712268133745,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1712268133745,
      "end": 1712268133745,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1712268133745,
      "end": 1712268133745,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1712268133745,
      "end": 1712268133745,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1712268133745,
      "end": 1712268133745,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1712268133745,
      "end": 1712268133745,
      "order": "normal"
    }
  ]
}
