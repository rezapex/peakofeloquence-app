{
  "resolvedId": "/Users/rezajafar/peakofeloquence-app/node_modules/@nuxt/ui-pro/modules/pro/runtime/utils/content.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { splitByCase, upperFirst } from 'scule'\nimport type { NavItem, ParsedContent } from '@nuxt/content/dist/runtime/types'\nimport type { NavigationTree } from '#ui-pro/types'\n\nconst navMap = {\n  'title': 'label',\n  '_path': 'to'\n}\n\nexport function mapContentNavigation (navigation: NavItem[], rootNavigation?: NavItem[]): NavigationTree[] {\n  return navigation.map((navLink) => {\n    const link = {} as NavigationTree\n    for (const key in navLink) {\n      if (key === 'children') {\n        link.children = navLink.children?.length ? mapContentNavigation(navLink.children, rootNavigation) : undefined\n        continue\n      }\n      if (navLink[key]) {\n        // @ts-ignore\n        link[navMap[key] || key] = navLink[key]\n      }\n    }\n    return link\n  })\n}\n\nexport function findPageHeadline (page: ParsedContent): string {\n  return page._dir?.title ? page._dir.title : splitByCase(page._dir).map(p => upperFirst(p)).join(' ')\n}\n\nexport function findPageBreadcrumb (navigation?: NavItem[], page?: ParsedContent | undefined | null): NavItem[] {\n  if (!navigation || !page) {\n    return []\n  }\n\n  return navigation.reduce((breadcrumb: NavItem[], link: NavItem) => {\n    if (page._path?.startsWith(link._path)) {\n      if (link.children) {\n        breadcrumb.push(link)\n        breadcrumb.push(...findPageBreadcrumb(link.children, page))\n      }\n    }\n    return breadcrumb\n  }, [])\n}\n",
      "start": 1714175014009,
      "end": 1714175014036,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1714175014036,
      "end": 1714175014036,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1714175014036,
      "end": 1714175014036,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1714175014036,
      "end": 1714175014036,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1714175014036,
      "end": 1714175014036,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1714175014036,
      "end": 1714175014036,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1714175014036,
      "end": 1714175014036,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1714175014036,
      "end": 1714175014036,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1714175014036,
      "end": 1714175014036,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1714175014036,
      "end": 1714175014036,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { splitByCase, upperFirst } from \"scule\";\nconst navMap = {\n  \"title\": \"label\",\n  \"_path\": \"to\"\n};\nexport function mapContentNavigation(navigation, rootNavigation) {\n  return navigation.map((navLink) => {\n    const link = {};\n    for (const key in navLink) {\n      if (key === \"children\") {\n        link.children = navLink.children?.length ? mapContentNavigation(navLink.children, rootNavigation) : void 0;\n        continue;\n      }\n      if (navLink[key]) {\n        link[navMap[key] || key] = navLink[key];\n      }\n    }\n    return link;\n  });\n}\nexport function findPageHeadline(page) {\n  return page._dir?.title ? page._dir.title : splitByCase(page._dir).map((p) => upperFirst(p)).join(\" \");\n}\nexport function findPageBreadcrumb(navigation, page) {\n  if (!navigation || !page) {\n    return [];\n  }\n  return navigation.reduce((breadcrumb, link) => {\n    if (page._path?.startsWith(link._path)) {\n      if (link.children) {\n        breadcrumb.push(link);\n        breadcrumb.push(...findPageBreadcrumb(link.children, page));\n      }\n    }\n    return breadcrumb;\n  }, []);\n}\n",
      "start": 1714175014036,
      "end": 1714175014511,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/rezajafar/peakofeloquence-app/node_modules/@nuxt/ui-pro/modules/pro/runtime/utils/content.ts"
        ],
        "sourcesContent": [
          "import { splitByCase, upperFirst } from 'scule'\nimport type { NavItem, ParsedContent } from '@nuxt/content/dist/runtime/types'\nimport type { NavigationTree } from '#ui-pro/types'\n\nconst navMap = {\n  'title': 'label',\n  '_path': 'to'\n}\n\nexport function mapContentNavigation (navigation: NavItem[], rootNavigation?: NavItem[]): NavigationTree[] {\n  return navigation.map((navLink) => {\n    const link = {} as NavigationTree\n    for (const key in navLink) {\n      if (key === 'children') {\n        link.children = navLink.children?.length ? mapContentNavigation(navLink.children, rootNavigation) : undefined\n        continue\n      }\n      if (navLink[key]) {\n        // @ts-ignore\n        link[navMap[key] || key] = navLink[key]\n      }\n    }\n    return link\n  })\n}\n\nexport function findPageHeadline (page: ParsedContent): string {\n  return page._dir?.title ? page._dir.title : splitByCase(page._dir).map(p => upperFirst(p)).join(' ')\n}\n\nexport function findPageBreadcrumb (navigation?: NavItem[], page?: ParsedContent | undefined | null): NavItem[] {\n  if (!navigation || !page) {\n    return []\n  }\n\n  return navigation.reduce((breadcrumb: NavItem[], link: NavItem) => {\n    if (page._path?.startsWith(link._path)) {\n      if (link.children) {\n        breadcrumb.push(link)\n        breadcrumb.push(...findPageBreadcrumb(link.children, page))\n      }\n    }\n    return breadcrumb\n  }, [])\n}\n"
        ],
        "mappings": "AAAA,SAAS,aAAa,kBAAkB;AAIxC,MAAM,SAAS;AAAA,EACb,SAAS;AAAA,EACT,SAAS;AACX;AAEO,gBAAS,qBAAsB,YAAuB,gBAA8C;AACzG,SAAO,WAAW,IAAI,CAAC,YAAY;AACjC,UAAM,OAAO,CAAC;AACd,eAAW,OAAO,SAAS;AACzB,UAAI,QAAQ,YAAY;AACtB,aAAK,WAAW,QAAQ,UAAU,SAAS,qBAAqB,QAAQ,UAAU,cAAc,IAAI;AACpG;AAAA,MACF;AACA,UAAI,QAAQ,GAAG,GAAG;AAEhB,aAAK,OAAO,GAAG,KAAK,GAAG,IAAI,QAAQ,GAAG;AAAA,MACxC;AAAA,IACF;AACA,WAAO;AAAA,EACT,CAAC;AACH;AAEO,gBAAS,iBAAkB,MAA6B;AAC7D,SAAO,KAAK,MAAM,QAAQ,KAAK,KAAK,QAAQ,YAAY,KAAK,IAAI,EAAE,IAAI,OAAK,WAAW,CAAC,CAAC,EAAE,KAAK,GAAG;AACrG;AAEO,gBAAS,mBAAoB,YAAwB,MAAoD;AAC9G,MAAI,CAAC,cAAc,CAAC,MAAM;AACxB,WAAO,CAAC;AAAA,EACV;AAEA,SAAO,WAAW,OAAO,CAAC,YAAuB,SAAkB;AACjE,QAAI,KAAK,OAAO,WAAW,KAAK,KAAK,GAAG;AACtC,UAAI,KAAK,UAAU;AACjB,mBAAW,KAAK,IAAI;AACpB,mBAAW,KAAK,GAAG,mBAAmB,KAAK,UAAU,IAAI,CAAC;AAAA,MAC5D;AAAA,IACF;AACA,WAAO;AAAA,EACT,GAAG,CAAC,CAAC;AACP;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1714175014511,
      "end": 1714175014511,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714175014511,
      "end": 1714175014511,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1714175014511,
      "end": 1714175014511,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714175014511,
      "end": 1714175014511,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1714175014511,
      "end": 1714175014511,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1714175014511,
      "end": 1714175014511,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1714175014511,
      "end": 1714175014511,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1714175014511,
      "end": 1714175014511,
      "order": "normal"
    },
    {
      "name": "nuxt:fonts:font-family-injection",
      "start": 1714175014511,
      "end": 1714175014511,
      "order": "normal"
    },
    {
      "name": "nuxt:fonts:font-family-injection",
      "start": 1714175014511,
      "end": 1714175014511,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1714175014512,
      "end": 1714175014512,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1714175014512,
      "end": 1714175014512,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1714175014512,
      "end": 1714175014512,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1714175014512,
      "end": 1714175014512,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1714175014512,
      "end": 1714175014512,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714175014512,
      "end": 1714175014512,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714175014512,
      "end": 1714175014512,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714175014512,
      "end": 1714175014512,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714175014512,
      "end": 1714175014512,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714175014512,
      "end": 1714175014512,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714175014512,
      "end": 1714175014512,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1714175014512,
      "end": 1714175014512,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1714175014512,
      "end": 1714175014512,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1714175014512,
      "end": 1714175014512,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1714175014512,
      "end": 1714175014512,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1714175014512,
      "end": 1714175014512,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1714175014512,
      "end": 1714175014512,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1714175014512,
      "end": 1714175014512,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1714175014512,
      "end": 1714175014512,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1714175014512,
      "end": 1714175014512,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1714175014512,
      "end": 1714175014512,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1714175014512,
      "end": 1714175014512,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714175014512,
      "end": 1714175014512,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714175014512,
      "end": 1714175014512,
      "order": "normal"
    }
  ]
}
