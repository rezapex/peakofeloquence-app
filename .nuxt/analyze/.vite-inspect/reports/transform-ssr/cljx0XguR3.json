{
  "resolvedId": "/Users/rezajafar/peakofeloquence-app/node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import getWindow from \"./getWindow.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport { isHTMLElement, isShadowRoot } from \"./instanceOf.js\";\nimport isTableElement from \"./isTableElement.js\";\nimport getParentNode from \"./getParentNode.js\";\nimport getUAString from \"../utils/userAgent.js\";\n\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837\n  getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n\n  return element.offsetParent;\n} // `.offsetParent` reports `null` for fixed elements, while absolute elements\n// return the containing block\n\n\nfunction getContainingBlock(element) {\n  var isFirefox = /firefox/i.test(getUAString());\n  var isIE = /Trident/i.test(getUAString());\n\n  if (isIE && isHTMLElement(element)) {\n    // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport\n    var elementCss = getComputedStyle(element);\n\n    if (elementCss.position === 'fixed') {\n      return null;\n    }\n  }\n\n  var currentNode = getParentNode(element);\n\n  if (isShadowRoot(currentNode)) {\n    currentNode = currentNode.host;\n  }\n\n  while (isHTMLElement(currentNode) && ['html', 'body'].indexOf(getNodeName(currentNode)) < 0) {\n    var css = getComputedStyle(currentNode); // This is non-exhaustive but covers the most common CSS properties that\n    // create a containing block.\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n    if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') {\n      return currentNode;\n    } else {\n      currentNode = currentNode.parentNode;\n    }\n  }\n\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\n\nexport default function getOffsetParent(element) {\n  var window = getWindow(element);\n  var offsetParent = getTrueOffsetParent(element);\n\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static')) {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}",
      "start": 1714175015437,
      "end": 1714175015469,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1714175015469,
      "end": 1714175015469,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1714175015469,
      "end": 1714175015469,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1714175015469,
      "end": 1714175015469,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1714175015469,
      "end": 1714175015469,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1714175015469,
      "end": 1714175015469,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1714175015469,
      "end": 1714175015469,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1714175015469,
      "end": 1714175015469,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1714175015469,
      "end": 1714175015469,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1714175015469,
      "end": 1714175015469,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1714175015469,
      "end": 1714175015469,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1714175015469,
      "end": 1714175015469,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714175015469,
      "end": 1714175015469,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1714175015469,
      "end": 1714175015469,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714175015469,
      "end": 1714175015469,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1714175015469,
      "end": 1714175015469,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1714175015469,
      "end": 1714175015469,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1714175015469,
      "end": 1714175015469,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1714175015469,
      "end": 1714175015469,
      "order": "normal"
    },
    {
      "name": "nuxt:fonts:font-family-injection",
      "start": 1714175015469,
      "end": 1714175015469,
      "order": "normal"
    },
    {
      "name": "nuxt:fonts:font-family-injection",
      "start": 1714175015469,
      "end": 1714175015469,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1714175015469,
      "end": 1714175015469,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1714175015469,
      "end": 1714175015469,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1714175015469,
      "end": 1714175015469,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import getWindow from \"./getWindow.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport { isHTMLElement, isShadowRoot } from \"./instanceOf.js\";\nimport isTableElement from \"./isTableElement.js\";\nimport getParentNode from \"./getParentNode.js\";\nimport getUAString from \"../utils/userAgent.js\";\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837\n  getComputedStyle(element).position === \"fixed\") {\n    return null;\n  }\n  return element.offsetParent;\n}\nfunction getContainingBlock(element) {\n  var isFirefox = /firefox/i.test(getUAString());\n  var isIE = /Trident/i.test(getUAString());\n  if (isIE && isHTMLElement(element)) {\n    var elementCss = getComputedStyle(element);\n    if (elementCss.position === \"fixed\") {\n      return null;\n    }\n  }\n  var currentNode = getParentNode(element);\n  if (isShadowRoot(currentNode)) {\n    currentNode = currentNode.host;\n  }\n  while (isHTMLElement(currentNode) && [\"html\", \"body\"].indexOf(getNodeName(currentNode)) < 0) {\n    var css = getComputedStyle(currentNode);\n    if (css.transform !== \"none\" || css.perspective !== \"none\" || css.contain === \"paint\" || [\"transform\", \"perspective\"].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === \"filter\" || isFirefox && css.filter && css.filter !== \"none\") {\n      return currentNode;\n    } else {\n      currentNode = currentNode.parentNode;\n    }\n  }\n  return null;\n}\nexport default function getOffsetParent(element) {\n  var window = getWindow(element);\n  var offsetParent = getTrueOffsetParent(element);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === \"static\") {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === \"html\" || getNodeName(offsetParent) === \"body\" && getComputedStyle(offsetParent).position === \"static\")) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\n",
      "start": 1714175015469,
      "end": 1714175015472,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"/Users/rezajafar/peakofeloquence-app/node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js\"],\n  \"sourcesContent\": [\"import getWindow from \\\"./getWindow.js\\\";\\nimport getNodeName from \\\"./getNodeName.js\\\";\\nimport getComputedStyle from \\\"./getComputedStyle.js\\\";\\nimport { isHTMLElement, isShadowRoot } from \\\"./instanceOf.js\\\";\\nimport isTableElement from \\\"./isTableElement.js\\\";\\nimport getParentNode from \\\"./getParentNode.js\\\";\\nimport getUAString from \\\"../utils/userAgent.js\\\";\\n\\nfunction getTrueOffsetParent(element) {\\n  if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837\\n  getComputedStyle(element).position === 'fixed') {\\n    return null;\\n  }\\n\\n  return element.offsetParent;\\n} // `.offsetParent` reports `null` for fixed elements, while absolute elements\\n// return the containing block\\n\\n\\nfunction getContainingBlock(element) {\\n  var isFirefox = /firefox/i.test(getUAString());\\n  var isIE = /Trident/i.test(getUAString());\\n\\n  if (isIE && isHTMLElement(element)) {\\n    // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport\\n    var elementCss = getComputedStyle(element);\\n\\n    if (elementCss.position === 'fixed') {\\n      return null;\\n    }\\n  }\\n\\n  var currentNode = getParentNode(element);\\n\\n  if (isShadowRoot(currentNode)) {\\n    currentNode = currentNode.host;\\n  }\\n\\n  while (isHTMLElement(currentNode) && ['html', 'body'].indexOf(getNodeName(currentNode)) < 0) {\\n    var css = getComputedStyle(currentNode); // This is non-exhaustive but covers the most common CSS properties that\\n    // create a containing block.\\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\\n\\n    if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') {\\n      return currentNode;\\n    } else {\\n      currentNode = currentNode.parentNode;\\n    }\\n  }\\n\\n  return null;\\n} // Gets the closest ancestor positioned element. Handles some edge cases,\\n// such as table ancestors and cross browser bugs.\\n\\n\\nexport default function getOffsetParent(element) {\\n  var window = getWindow(element);\\n  var offsetParent = getTrueOffsetParent(element);\\n\\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\\n    offsetParent = getTrueOffsetParent(offsetParent);\\n  }\\n\\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static')) {\\n    return window;\\n  }\\n\\n  return offsetParent || getContainingBlock(element) || window;\\n}\"],\n  \"mappings\": \"AAAA,OAAO,eAAe;AACtB,OAAO,iBAAiB;AACxB,OAAO,sBAAsB;AAC7B,SAAS,eAAe,oBAAoB;AAC5C,OAAO,oBAAoB;AAC3B,OAAO,mBAAmB;AAC1B,OAAO,iBAAiB;AAExB,SAAS,oBAAoB,SAAS;AACpC,MAAI,CAAC,cAAc,OAAO;AAAA,EAC1B,iBAAiB,OAAO,EAAE,aAAa,SAAS;AAC9C,WAAO;AAAA,EACT;AAEA,SAAO,QAAQ;AACjB;AAIA,SAAS,mBAAmB,SAAS;AACnC,MAAI,YAAY,WAAW,KAAK,YAAY,CAAC;AAC7C,MAAI,OAAO,WAAW,KAAK,YAAY,CAAC;AAExC,MAAI,QAAQ,cAAc,OAAO,GAAG;AAElC,QAAI,aAAa,iBAAiB,OAAO;AAEzC,QAAI,WAAW,aAAa,SAAS;AACnC,aAAO;AAAA,IACT;AAAA,EACF;AAEA,MAAI,cAAc,cAAc,OAAO;AAEvC,MAAI,aAAa,WAAW,GAAG;AAC7B,kBAAc,YAAY;AAAA,EAC5B;AAEA,SAAO,cAAc,WAAW,KAAK,CAAC,QAAQ,MAAM,EAAE,QAAQ,YAAY,WAAW,CAAC,IAAI,GAAG;AAC3F,QAAI,MAAM,iBAAiB,WAAW;AAItC,QAAI,IAAI,cAAc,UAAU,IAAI,gBAAgB,UAAU,IAAI,YAAY,WAAW,CAAC,aAAa,aAAa,EAAE,QAAQ,IAAI,UAAU,MAAM,MAAM,aAAa,IAAI,eAAe,YAAY,aAAa,IAAI,UAAU,IAAI,WAAW,QAAQ;AACpP,aAAO;AAAA,IACT,OAAO;AACL,oBAAc,YAAY;AAAA,IAC5B;AAAA,EACF;AAEA,SAAO;AACT;AAIA,wBAAwB,gBAAgB,SAAS;AAC/C,MAAI,SAAS,UAAU,OAAO;AAC9B,MAAI,eAAe,oBAAoB,OAAO;AAE9C,SAAO,gBAAgB,eAAe,YAAY,KAAK,iBAAiB,YAAY,EAAE,aAAa,UAAU;AAC3G,mBAAe,oBAAoB,YAAY;AAAA,EACjD;AAEA,MAAI,iBAAiB,YAAY,YAAY,MAAM,UAAU,YAAY,YAAY,MAAM,UAAU,iBAAiB,YAAY,EAAE,aAAa,WAAW;AAC1J,WAAO;AAAA,EACT;AAEA,SAAO,gBAAgB,mBAAmB,OAAO,KAAK;AACxD;\",\n  \"names\": []\n}\n"
    },
    {
      "name": "vite:css-post",
      "start": 1714175015472,
      "end": 1714175015472,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714175015472,
      "end": 1714175015472,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714175015472,
      "end": 1714175015472,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714175015472,
      "end": 1714175015472,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714175015472,
      "end": 1714175015473,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714175015473,
      "end": 1714175015473,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714175015473,
      "end": 1714175015473,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1714175015473,
      "end": 1714175015473,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1714175015473,
      "end": 1714175015473,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1714175015473,
      "end": 1714175015473,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1714175015473,
      "end": 1714175015473,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1714175015473,
      "end": 1714175015473,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1714175015473,
      "end": 1714175015473,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1714175015473,
      "end": 1714175015473,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1714175015473,
      "end": 1714175015473,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1714175015473,
      "end": 1714175015473,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1714175015473,
      "end": 1714175015473,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1714175015473,
      "end": 1714175015473,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714175015473,
      "end": 1714175015473,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714175015473,
      "end": 1714175015473,
      "order": "normal"
    }
  ]
}
