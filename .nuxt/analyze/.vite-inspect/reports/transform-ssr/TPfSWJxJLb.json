{
  "resolvedId": "/Users/rezajafar/peakofeloquence-app/node_modules/@nuxt/image/dist/runtime/utils/index.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "export default function imageFetch(url) {\n  return fetch(cleanDoubleSlashes(url));\n}\nexport function getInt(x) {\n  if (typeof x === \"number\") {\n    return x;\n  }\n  if (typeof x === \"string\") {\n    return parseInt(x, 10);\n  }\n  return void 0;\n}\nexport function getFileExtension(url = \"\") {\n  const extension = url.split(/[?#]/).shift().split(\"/\").pop().split(\".\").pop();\n  return extension;\n}\nexport function cleanDoubleSlashes(path = \"\") {\n  return path.replace(/(https?:\\/\\/)|(\\/)+/g, \"$1$2\");\n}\nexport function createMapper(map) {\n  return (key) => {\n    return key ? map[key] || key : map.missingValue;\n  };\n}\nexport function createOperationsGenerator({ formatter, keyMap, joinWith = \"/\", valueMap } = {}) {\n  if (!formatter) {\n    formatter = (key, value) => `${key}=${value}`;\n  }\n  if (keyMap && typeof keyMap !== \"function\") {\n    keyMap = createMapper(keyMap);\n  }\n  const map = valueMap || {};\n  Object.keys(map).forEach((valueKey) => {\n    if (typeof map[valueKey] !== \"function\") {\n      map[valueKey] = createMapper(map[valueKey]);\n    }\n  });\n  return (modifiers = {}) => {\n    const operations = Object.entries(modifiers).filter(([_, value]) => typeof value !== \"undefined\").map(([key, value]) => {\n      const mapper = map[key];\n      if (typeof mapper === \"function\") {\n        value = mapper(modifiers[key]);\n      }\n      key = typeof keyMap === \"function\" ? keyMap(key) : key;\n      return formatter(key, value);\n    });\n    return operations.join(joinWith);\n  };\n}\nexport function renderAttributesToString(attributes = {}) {\n  return Object.entries(attributes).map(([key, value]) => value ? `${key}=\"${value}\"` : \"\").filter(Boolean).join(\" \");\n}\nexport function renderTag(tag, attrs, contents) {\n  const html = `<${tag} ${renderAttributesToString(attrs)}>`;\n  if (!contents) {\n    return html;\n  }\n  return html + contents + `</${tag}>`;\n}\nexport function generateAlt(src = \"\") {\n  return src.split(/[?#]/).shift().split(\"/\").pop().split(\".\").shift();\n}\nexport function parseSize(input = \"\") {\n  if (typeof input === \"number\") {\n    return input;\n  }\n  if (typeof input === \"string\") {\n    if (input.replace(\"px\", \"\").match(/^\\d+$/g)) {\n      return parseInt(input, 10);\n    }\n  }\n}\nexport function parseDensities(input = \"\") {\n  if (input === void 0 || !input.length) {\n    return [];\n  }\n  const densities = /* @__PURE__ */ new Set();\n  for (const density of input.split(\" \")) {\n    const d = parseInt(density.replace(\"x\", \"\"));\n    if (d) {\n      densities.add(d);\n    }\n  }\n  return Array.from(densities);\n}\nexport function checkDensities(densities) {\n  if (densities.length === 0) {\n    throw new Error(\"`densities` must not be empty, configure to `1` to render regular size only (DPR 1.0)\");\n  }\n  if (process.dev && Array.from(densities).some((d) => d > 2)) {\n    console.warn(\"[nuxt] [image] Density values above `2` are not recommended. See https://observablehq.com/@eeeps/visual-acuity-and-device-pixel-ratio.\");\n  }\n}\nexport function parseSizes(input) {\n  const sizes = {};\n  if (typeof input === \"string\") {\n    for (const entry of input.split(/[\\s,]+/).filter((e) => e)) {\n      const s = entry.split(\":\");\n      if (s.length !== 2) {\n        sizes[\"1px\"] = s[0].trim();\n      } else {\n        sizes[s[0].trim()] = s[1].trim();\n      }\n    }\n  } else {\n    Object.assign(sizes, input);\n  }\n  return sizes;\n}\n",
      "start": 1714172189530,
      "end": 1714172189537,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1714172189537,
      "end": 1714172189537,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1714172189537,
      "end": 1714172189537,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1714172189537,
      "end": 1714172189537,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1714172189537,
      "end": 1714172189537,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1714172189537,
      "end": 1714172189537,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1714172189537,
      "end": 1714172189537,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1714172189537,
      "end": 1714172189537,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1714172189537,
      "end": 1714172189537,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1714172189538,
      "end": 1714172189538,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1714172189538,
      "end": 1714172189538,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1714172189538,
      "end": 1714172189538,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714172189538,
      "end": 1714172189538,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1714172189538,
      "end": 1714172189538,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714172189538,
      "end": 1714172189538,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1714172189538,
      "end": 1714172189538,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1714172189538,
      "end": 1714172189538,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1714172189538,
      "end": 1714172189538,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1714172189538,
      "end": 1714172189538,
      "order": "normal"
    },
    {
      "name": "nuxt:fonts:font-family-injection",
      "start": 1714172189538,
      "end": 1714172189538,
      "order": "normal"
    },
    {
      "name": "nuxt:fonts:font-family-injection",
      "start": 1714172189538,
      "end": 1714172189538,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1714172189538,
      "end": 1714172189538,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1714172189538,
      "end": 1714172189538,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1714172189538,
      "end": 1714172189538,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "export default function imageFetch(url) {\n  return fetch(cleanDoubleSlashes(url));\n}\nexport function getInt(x) {\n  if (typeof x === \"number\") {\n    return x;\n  }\n  if (typeof x === \"string\") {\n    return parseInt(x, 10);\n  }\n  return void 0;\n}\nexport function getFileExtension(url = \"\") {\n  const extension = url.split(/[?#]/).shift().split(\"/\").pop().split(\".\").pop();\n  return extension;\n}\nexport function cleanDoubleSlashes(path = \"\") {\n  return path.replace(/(https?:\\/\\/)|(\\/)+/g, \"$1$2\");\n}\nexport function createMapper(map) {\n  return (key) => {\n    return key ? map[key] || key : map.missingValue;\n  };\n}\nexport function createOperationsGenerator({ formatter, keyMap, joinWith = \"/\", valueMap } = {}) {\n  if (!formatter) {\n    formatter = (key, value) => `${key}=${value}`;\n  }\n  if (keyMap && typeof keyMap !== \"function\") {\n    keyMap = createMapper(keyMap);\n  }\n  const map = valueMap || {};\n  Object.keys(map).forEach((valueKey) => {\n    if (typeof map[valueKey] !== \"function\") {\n      map[valueKey] = createMapper(map[valueKey]);\n    }\n  });\n  return (modifiers = {}) => {\n    const operations = Object.entries(modifiers).filter(([_, value]) => typeof value !== \"undefined\").map(([key, value]) => {\n      const mapper = map[key];\n      if (typeof mapper === \"function\") {\n        value = mapper(modifiers[key]);\n      }\n      key = typeof keyMap === \"function\" ? keyMap(key) : key;\n      return formatter(key, value);\n    });\n    return operations.join(joinWith);\n  };\n}\nexport function renderAttributesToString(attributes = {}) {\n  return Object.entries(attributes).map(([key, value]) => value ? `${key}=\"${value}\"` : \"\").filter(Boolean).join(\" \");\n}\nexport function renderTag(tag, attrs, contents) {\n  const html = `<${tag} ${renderAttributesToString(attrs)}>`;\n  if (!contents) {\n    return html;\n  }\n  return html + contents + `</${tag}>`;\n}\nexport function generateAlt(src = \"\") {\n  return src.split(/[?#]/).shift().split(\"/\").pop().split(\".\").shift();\n}\nexport function parseSize(input = \"\") {\n  if (typeof input === \"number\") {\n    return input;\n  }\n  if (typeof input === \"string\") {\n    if (input.replace(\"px\", \"\").match(/^\\d+$/g)) {\n      return parseInt(input, 10);\n    }\n  }\n}\nexport function parseDensities(input = \"\") {\n  if (input === void 0 || !input.length) {\n    return [];\n  }\n  const densities = /* @__PURE__ */ new Set();\n  for (const density of input.split(\" \")) {\n    const d = parseInt(density.replace(\"x\", \"\"));\n    if (d) {\n      densities.add(d);\n    }\n  }\n  return Array.from(densities);\n}\nexport function checkDensities(densities) {\n  if (densities.length === 0) {\n    throw new Error(\"`densities` must not be empty, configure to `1` to render regular size only (DPR 1.0)\");\n  }\n  if (false) {\n    console.warn(\"[nuxt] [image] Density values above `2` are not recommended. See https://observablehq.com/@eeeps/visual-acuity-and-device-pixel-ratio.\");\n  }\n}\nexport function parseSizes(input) {\n  const sizes = {};\n  if (typeof input === \"string\") {\n    for (const entry of input.split(/[\\s,]+/).filter((e) => e)) {\n      const s = entry.split(\":\");\n      if (s.length !== 2) {\n        sizes[\"1px\"] = s[0].trim();\n      } else {\n        sizes[s[0].trim()] = s[1].trim();\n      }\n    }\n  } else {\n    Object.assign(sizes, input);\n  }\n  return sizes;\n}\n",
      "start": 1714172189538,
      "end": 1714172189774,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"/Users/rezajafar/peakofeloquence-app/node_modules/@nuxt/image/dist/runtime/utils/index.mjs\"],\n  \"sourcesContent\": [\"export default function imageFetch(url) {\\n  return fetch(cleanDoubleSlashes(url));\\n}\\nexport function getInt(x) {\\n  if (typeof x === \\\"number\\\") {\\n    return x;\\n  }\\n  if (typeof x === \\\"string\\\") {\\n    return parseInt(x, 10);\\n  }\\n  return void 0;\\n}\\nexport function getFileExtension(url = \\\"\\\") {\\n  const extension = url.split(/[?#]/).shift().split(\\\"/\\\").pop().split(\\\".\\\").pop();\\n  return extension;\\n}\\nexport function cleanDoubleSlashes(path = \\\"\\\") {\\n  return path.replace(/(https?:\\\\/\\\\/)|(\\\\/)+/g, \\\"$1$2\\\");\\n}\\nexport function createMapper(map) {\\n  return (key) => {\\n    return key ? map[key] || key : map.missingValue;\\n  };\\n}\\nexport function createOperationsGenerator({ formatter, keyMap, joinWith = \\\"/\\\", valueMap } = {}) {\\n  if (!formatter) {\\n    formatter = (key, value) => `${key}=${value}`;\\n  }\\n  if (keyMap && typeof keyMap !== \\\"function\\\") {\\n    keyMap = createMapper(keyMap);\\n  }\\n  const map = valueMap || {};\\n  Object.keys(map).forEach((valueKey) => {\\n    if (typeof map[valueKey] !== \\\"function\\\") {\\n      map[valueKey] = createMapper(map[valueKey]);\\n    }\\n  });\\n  return (modifiers = {}) => {\\n    const operations = Object.entries(modifiers).filter(([_, value]) => typeof value !== \\\"undefined\\\").map(([key, value]) => {\\n      const mapper = map[key];\\n      if (typeof mapper === \\\"function\\\") {\\n        value = mapper(modifiers[key]);\\n      }\\n      key = typeof keyMap === \\\"function\\\" ? keyMap(key) : key;\\n      return formatter(key, value);\\n    });\\n    return operations.join(joinWith);\\n  };\\n}\\nexport function renderAttributesToString(attributes = {}) {\\n  return Object.entries(attributes).map(([key, value]) => value ? `${key}=\\\"${value}\\\"` : \\\"\\\").filter(Boolean).join(\\\" \\\");\\n}\\nexport function renderTag(tag, attrs, contents) {\\n  const html = `<${tag} ${renderAttributesToString(attrs)}>`;\\n  if (!contents) {\\n    return html;\\n  }\\n  return html + contents + `</${tag}>`;\\n}\\nexport function generateAlt(src = \\\"\\\") {\\n  return src.split(/[?#]/).shift().split(\\\"/\\\").pop().split(\\\".\\\").shift();\\n}\\nexport function parseSize(input = \\\"\\\") {\\n  if (typeof input === \\\"number\\\") {\\n    return input;\\n  }\\n  if (typeof input === \\\"string\\\") {\\n    if (input.replace(\\\"px\\\", \\\"\\\").match(/^\\\\d+$/g)) {\\n      return parseInt(input, 10);\\n    }\\n  }\\n}\\nexport function parseDensities(input = \\\"\\\") {\\n  if (input === void 0 || !input.length) {\\n    return [];\\n  }\\n  const densities = /* @__PURE__ */ new Set();\\n  for (const density of input.split(\\\" \\\")) {\\n    const d = parseInt(density.replace(\\\"x\\\", \\\"\\\"));\\n    if (d) {\\n      densities.add(d);\\n    }\\n  }\\n  return Array.from(densities);\\n}\\nexport function checkDensities(densities) {\\n  if (densities.length === 0) {\\n    throw new Error(\\\"`densities` must not be empty, configure to `1` to render regular size only (DPR 1.0)\\\");\\n  }\\n  if (process.dev && Array.from(densities).some((d) => d > 2)) {\\n    console.warn(\\\"[nuxt] [image] Density values above `2` are not recommended. See https://observablehq.com/@eeeps/visual-acuity-and-device-pixel-ratio.\\\");\\n  }\\n}\\nexport function parseSizes(input) {\\n  const sizes = {};\\n  if (typeof input === \\\"string\\\") {\\n    for (const entry of input.split(/[\\\\s,]+/).filter((e) => e)) {\\n      const s = entry.split(\\\":\\\");\\n      if (s.length !== 2) {\\n        sizes[\\\"1px\\\"] = s[0].trim();\\n      } else {\\n        sizes[s[0].trim()] = s[1].trim();\\n      }\\n    }\\n  } else {\\n    Object.assign(sizes, input);\\n  }\\n  return sizes;\\n}\\n\"],\n  \"mappings\": \"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\",\n  \"names\": []\n}\n"
    },
    {
      "name": "vite:css-post",
      "start": 1714172189774,
      "end": 1714172189774,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714172189774,
      "end": 1714172189774,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714172189774,
      "end": 1714172189774,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714172189774,
      "end": 1714172189774,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714172189774,
      "end": 1714172189774,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714172189774,
      "end": 1714172189774,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714172189774,
      "end": 1714172189774,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1714172189774,
      "end": 1714172189774,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1714172189774,
      "end": 1714172189774,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1714172189774,
      "end": 1714172189774,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1714172189774,
      "end": 1714172189774,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1714172189774,
      "end": 1714172189774,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1714172189774,
      "end": 1714172189774,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1714172189774,
      "end": 1714172189774,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1714172189774,
      "end": 1714172189774,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1714172189774,
      "end": 1714172189774,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1714172189774,
      "end": 1714172189774,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1714172189774,
      "end": 1714172189774,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714172189774,
      "end": 1714172189774,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714172189774,
      "end": 1714172189774,
      "order": "normal"
    }
  ]
}
