{
  "resolvedId": "/Users/rezajafar/peakofeloquence-app/node_modules/@nuxt/ui/dist/runtime/composables/useToast.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { useState } from \"#imports\";\nexport function useToast() {\n  const notifications = useState(\"notifications\", () => []);\n  function add(notification) {\n    const body = {\n      id: (/* @__PURE__ */ new Date()).getTime().toString(),\n      ...notification\n    };\n    const index = notifications.value.findIndex((n) => n.id === body.id);\n    if (index === -1) {\n      notifications.value.push(body);\n    }\n    return body;\n  }\n  function remove(id) {\n    notifications.value = notifications.value.filter((n) => n.id !== id);\n  }\n  return {\n    add,\n    remove\n  };\n}\n",
      "start": 1714173364912,
      "end": 1714173365008,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1714173365008,
      "end": 1714173365008,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1714173365008,
      "end": 1714173365008,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1714173365008,
      "end": 1714173365008,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1714173365008,
      "end": 1714173365008,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1714173365008,
      "end": 1714173365008,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1714173365008,
      "end": 1714173365008,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1714173365008,
      "end": 1714173365008,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1714173365008,
      "end": 1714173365008,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1714173365008,
      "end": 1714173365008,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1714173365008,
      "end": 1714173365008,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1714173365008,
      "end": 1714173365008,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714173365008,
      "end": 1714173365008,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1714173365008,
      "end": 1714173365008,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714173365008,
      "end": 1714173365008,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1714173365008,
      "end": 1714173365008,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1714173365008,
      "end": 1714173365008,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1714173365008,
      "end": 1714173365008,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1714173365008,
      "end": 1714173365008,
      "order": "normal"
    },
    {
      "name": "nuxt:fonts:font-family-injection",
      "start": 1714173365008,
      "end": 1714173365008,
      "order": "normal"
    },
    {
      "name": "nuxt:fonts:font-family-injection",
      "start": 1714173365008,
      "end": 1714173365008,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1714173365008,
      "end": 1714173365008,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1714173365008,
      "end": 1714173365008,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1714173365008,
      "end": 1714173365008,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1714173365008,
      "end": 1714173365008,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1714173365008,
      "end": 1714173365008,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714173365008,
      "end": 1714173365008,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714173365008,
      "end": 1714173365008,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714173365008,
      "end": 1714173365008,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714173365008,
      "end": 1714173365008,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714173365008,
      "end": 1714173365008,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714173365008,
      "end": 1714173365008,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1714173365008,
      "end": 1714173365009,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1714173365008,
      "end": 1714173365009,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { useState } from '#app/composables/state';\nexport function useToast() {\n  const notifications = useState(\"notifications\", () => []);\n  function add(notification) {\n    const body = {\n      id: (/* @__PURE__ */ new Date()).getTime().toString(),\n      ...notification\n    };\n    const index = notifications.value.findIndex((n) => n.id === body.id);\n    if (index === -1) {\n      notifications.value.push(body);\n    }\n    return body;\n  }\n  function remove(id) {\n    notifications.value = notifications.value.filter((n) => n.id !== id);\n  }\n  return {\n    add,\n    remove\n  };\n}\n",
      "start": 1714173365009,
      "end": 1714173365009,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzE,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC;"
      }
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { useState } from '#app/composables/state';\nexport function useToast() {\n  const notifications = useState(\"notifications\", () => []);\n  function add(notification) {\n    const body = {\n      id: (/* @__PURE__ */ new Date()).getTime().toString(),\n      ...notification\n    };\n    const index = notifications.value.findIndex((n) => n.id === body.id);\n    if (index === -1) {\n      notifications.value.push(body);\n    }\n    return body;\n  }\n  function remove(id) {\n    notifications.value = notifications.value.filter((n) => n.id !== id);\n  }\n  return {\n    add,\n    remove\n  };\n}\n",
      "start": 1714173365009,
      "end": 1714173365009,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzE,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1714173365009,
      "end": 1714173365009,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1714173365009,
      "end": 1714173365009,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1714173365009,
      "end": 1714173365009,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1714173365009,
      "end": 1714173365009,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1714173365009,
      "end": 1714173365009,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1714173365009,
      "end": 1714173365009,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1714173365009,
      "end": 1714173365009,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714173365009,
      "end": 1714173365009,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714173365009,
      "end": 1714173365009,
      "order": "normal"
    }
  ]
}
