{
  "resolvedId": "/Users/rezajafar/peakofeloquence-site/node_modules/micromark-core-commonmark/lib/label-start-image.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isnâ€™t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n",
      "start": 1712268127579,
      "end": 1712268127619,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1712268127619,
      "end": 1712268127619,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1712268127619,
      "end": 1712268127619,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1712268127619,
      "end": 1712268127619,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1712268127619,
      "end": 1712268127619,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1712268127619,
      "end": 1712268127619,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1712268127619,
      "end": 1712268127619,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1712268127619,
      "end": 1712268127619,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1712268127619,
      "end": 1712268127619,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1712268127619,
      "end": 1712268127619,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1712268127619,
      "end": 1712268127619,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712268127619,
      "end": 1712268127619,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1712268127619,
      "end": 1712268127619,
      "order": "normal"
    },
    {
      "name": "nuxt:fonts:font-family-injection",
      "start": 1712268127619,
      "end": 1712268127619,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1712268127619,
      "end": 1712268127619,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1712268127619,
      "end": 1712268127619,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712268127619,
      "end": 1712268127619,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1712268127619,
      "end": 1712268127619,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1712268127619,
      "end": 1712268127619,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1712268127619,
      "end": 1712268127619,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1712268127619,
      "end": 1712268127619,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1712268127619,
      "end": 1712268127619,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1712268127619,
      "end": 1712268127619,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1712268127619,
      "end": 1712268127619,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1712268127619,
      "end": 1712268127619,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1712268127619,
      "end": 1712268127619,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1712268127619,
      "end": 1712268127619,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1712268127619,
      "end": 1712268127619,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1712268127619,
      "end": 1712268127619,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1712268127619,
      "end": 1712268127619,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1712268127619,
      "end": 1712268127619,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1712268127619,
      "end": 1712268127619,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1712268127619,
      "end": 1712268127619,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1712268127619,
      "end": 1712268127619,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1712268127619,
      "end": 1712268127619,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1712268127619,
      "end": 1712268127619,
      "order": "normal"
    }
  ]
}
