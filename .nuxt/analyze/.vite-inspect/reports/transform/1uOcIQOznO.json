{
  "resolvedId": "/Users/rezajafar/peakofeloquence-site/node_modules/mdast-util-to-string/lib/index.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the nodeâ€™s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n",
      "start": 1712268127811,
      "end": 1712268127820,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1712268127820,
      "end": 1712268127820,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1712268127820,
      "end": 1712268127820,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1712268127820,
      "end": 1712268127820,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1712268127820,
      "end": 1712268127820,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1712268127820,
      "end": 1712268127820,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1712268127820,
      "end": 1712268127820,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1712268127820,
      "end": 1712268127820,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1712268127820,
      "end": 1712268127820,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1712268127820,
      "end": 1712268127820,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1712268127820,
      "end": 1712268127820,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712268127820,
      "end": 1712268127820,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1712268127820,
      "end": 1712268127820,
      "order": "normal"
    },
    {
      "name": "nuxt:fonts:font-family-injection",
      "start": 1712268127820,
      "end": 1712268127820,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1712268127820,
      "end": 1712268127820,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1712268127820,
      "end": 1712268127820,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712268127820,
      "end": 1712268127820,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1712268127820,
      "end": 1712268127820,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1712268127820,
      "end": 1712268127820,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1712268127820,
      "end": 1712268127820,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1712268127820,
      "end": 1712268127820,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1712268127820,
      "end": 1712268127820,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1712268127820,
      "end": 1712268127820,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1712268127820,
      "end": 1712268127820,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1712268127820,
      "end": 1712268127820,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1712268127820,
      "end": 1712268127820,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1712268127820,
      "end": 1712268127820,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1712268127820,
      "end": 1712268127820,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1712268127820,
      "end": 1712268127820,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1712268127820,
      "end": 1712268127820,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1712268127820,
      "end": 1712268127820,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1712268127820,
      "end": 1712268127820,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1712268127820,
      "end": 1712268127820,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1712268127820,
      "end": 1712268127820,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1712268127820,
      "end": 1712268127820,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1712268127820,
      "end": 1712268127820,
      "order": "normal"
    }
  ]
}
