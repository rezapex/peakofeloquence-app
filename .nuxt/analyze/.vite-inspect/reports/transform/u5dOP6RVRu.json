{
  "resolvedId": "/Users/rezajafar/peakofeloquence-app/node_modules/@nuxt/ui-pro/components/navigation/NavigationLinks.vue?vue&type=script&setup=true&lang.ts",
  "transforms": [
    {
      "name": "vite:vue",
      "result": "import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderSlot as _renderSlot, mergeProps as _mergeProps, withCtx as _withCtx } from \"vue\"\n\nimport type { PropType } from 'vue'\nimport { twMerge } from 'tailwind-merge'\nimport { getULinkProps } from '#ui/utils'\nimport type { NavigationLink } from '#ui-pro/types'\n\n\nexport default /*#__PURE__*/_defineComponent({\n  ...{\n  inheritAttrs: false\n},\n  __name: 'NavigationLinks',\n  props: {\n  level: {\n    type: Number,\n    default: 0\n  },\n  links: {\n    type: Array as PropType<NavigationLink[]>,\n    default: () => []\n  },\n  class: {\n    type: [String, Object, Array] as PropType<any>,\n    default: undefined\n  },\n  ui: {\n    type: Object as PropType<Partial<typeof config>>,\n    default: () => ({})\n  }\n},\n  setup(__props) {\n\nconst config = {\n  wrapper: 'space-y-3',\n  wrapperLevel: 'space-y-1.5',\n  base: 'flex items-center gap-1.5 group',\n  active: 'text-primary font-medium border-current',\n  inactive: 'text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200 border-transparent hover:border-gray-500 dark:hover:border-gray-400',\n  level: 'border-l -ml-px pl-4',\n  icon: {\n    base: 'w-5 h-5 flex-shrink-0'\n  },\n  badge: {\n    base: 'rounded-full'\n  },\n  label: 'text-sm/6 truncate'\n}\n\n\n\nconst props = __props\n\nconst { ui, attrs } = useUI('navigation.links', toRef(props, 'ui'), config, toRef(props, 'class'), true)\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_UIcon = _resolveComponent(\"UIcon\")!\n  const _component_UBadge = _resolveComponent(\"UBadge\")!\n  const _component_ULink = _resolveComponent(\"ULink\")!\n\n  return (__props.links?.length)\n    ? (_openBlock(), _createElementBlock(\"div\", _mergeProps({\n        key: 0,\n        class: __props.level > 0 ? _unref(ui).wrapperLevel : _unref(ui).wrapper\n      }, _unref(attrs)), [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(__props.links, (link, index) => {\n          return (_openBlock(), _createBlock(_component_ULink, _mergeProps({ key: index }, _unref(getULinkProps)(link), {\n            class: [_unref(ui).base, __props.level > 0 && _unref(ui).level],\n            \"active-class\": _unref(ui).active,\n            \"inactive-class\": _unref(ui).inactive,\n            onClick: link.click\n          }), {\n            default: _withCtx(() => [\n              (link.icon)\n                ? (_openBlock(), _createBlock(_component_UIcon, {\n                    key: 0,\n                    name: link.icon,\n                    class: _normalizeClass(_unref(twMerge)(_unref(ui).icon.base, link.iconClass))\n                  }, null, 8, [\"name\", \"class\"]))\n                : _createCommentVNode(\"\", true),\n              _createElementVNode(\"span\", {\n                class: _normalizeClass(_unref(ui).label)\n              }, _toDisplayString(link.label), 3),\n              _renderSlot(_ctx.$slots, \"badge\", { link: link }, () => [\n                (link.badge)\n                  ? (_openBlock(), _createBlock(_component_UBadge, _mergeProps({ key: 0 }, typeof link.badge === 'string' ? { size: 'xs', variant: 'subtle', label: link.badge } : { size: 'xs', variant: 'subtle', ...link.badge }, {\n                      class: _unref(ui).badge.base\n                    }), null, 16, [\"class\"]))\n                  : _createCommentVNode(\"\", true)\n              ])\n            ]),\n            _: 2\n          }, 1040, [\"class\", \"active-class\", \"inactive-class\", \"onClick\"]))\n        }), 128))\n      ], 16))\n    : _createCommentVNode(\"\", true)\n}\n}\n\n})",
      "start": 1714175003229,
      "end": 1714175003229
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1714175003229,
      "end": 1714175003229,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1714175003229,
      "end": 1714175003229,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1714175003229,
      "end": 1714175003229,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1714175003229,
      "end": 1714175003229,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1714175003229,
      "end": 1714175003229,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderSlot as _renderSlot, mergeProps as _mergeProps, withCtx as _withCtx } from \"vue\";\nimport { twMerge } from \"tailwind-merge\";\nimport { getULinkProps } from \"#ui/utils\";\nexport default /* @__PURE__ */ _defineComponent({\n  ...{\n    inheritAttrs: false\n  },\n  __name: \"NavigationLinks\",\n  props: {\n    level: {\n      type: Number,\n      default: 0\n    },\n    links: {\n      type: Array,\n      default: () => []\n    },\n    class: {\n      type: [String, Object, Array],\n      default: void 0\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(__props) {\n    const config = {\n      wrapper: \"space-y-3\",\n      wrapperLevel: \"space-y-1.5\",\n      base: \"flex items-center gap-1.5 group\",\n      active: \"text-primary font-medium border-current\",\n      inactive: \"text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200 border-transparent hover:border-gray-500 dark:hover:border-gray-400\",\n      level: \"border-l -ml-px pl-4\",\n      icon: {\n        base: \"w-5 h-5 flex-shrink-0\"\n      },\n      badge: {\n        base: \"rounded-full\"\n      },\n      label: \"text-sm/6 truncate\"\n    };\n    const props = __props;\n    const { ui, attrs } = useUI(\"navigation.links\", toRef(props, \"ui\"), config, toRef(props, \"class\"), true);\n    return (_ctx, _cache) => {\n      const _component_UIcon = _resolveComponent(\"UIcon\");\n      const _component_UBadge = _resolveComponent(\"UBadge\");\n      const _component_ULink = _resolveComponent(\"ULink\");\n      return __props.links?.length ? (_openBlock(), _createElementBlock(\"div\", _mergeProps({\n        key: 0,\n        class: __props.level > 0 ? _unref(ui).wrapperLevel : _unref(ui).wrapper\n      }, _unref(attrs)), [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(__props.links, (link, index) => {\n          return _openBlock(), _createBlock(_component_ULink, _mergeProps({ key: index }, _unref(getULinkProps)(link), {\n            class: [_unref(ui).base, __props.level > 0 && _unref(ui).level],\n            \"active-class\": _unref(ui).active,\n            \"inactive-class\": _unref(ui).inactive,\n            onClick: link.click\n          }), {\n            default: _withCtx(() => [\n              link.icon ? (_openBlock(), _createBlock(_component_UIcon, {\n                key: 0,\n                name: link.icon,\n                class: _normalizeClass(_unref(twMerge)(_unref(ui).icon.base, link.iconClass))\n              }, null, 8, [\"name\", \"class\"])) : _createCommentVNode(\"\", true),\n              _createElementVNode(\"span\", {\n                class: _normalizeClass(_unref(ui).label)\n              }, _toDisplayString(link.label), 3),\n              _renderSlot(_ctx.$slots, \"badge\", { link }, () => [\n                link.badge ? (_openBlock(), _createBlock(_component_UBadge, _mergeProps({ key: 0 }, typeof link.badge === \"string\" ? { size: \"xs\", variant: \"subtle\", label: link.badge } : { size: \"xs\", variant: \"subtle\", ...link.badge }, {\n                  class: _unref(ui).badge.base\n                }), null, 16, [\"class\"])) : _createCommentVNode(\"\", true)\n              ])\n            ]),\n            _: 2\n          }, 1040, [\"class\", \"active-class\", \"inactive-class\", \"onClick\"]);\n        }), 128))\n      ], 16)) : _createCommentVNode(\"\", true);\n    };\n  }\n});\n",
      "start": 1714175003229,
      "end": 1714175003255,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/rezajafar/peakofeloquence-app/node_modules/@nuxt/ui-pro/components/navigation/NavigationLinks.vue?vue&type=script&setup=true&lang.ts"
        ],
        "sourcesContent": [
          "import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderSlot as _renderSlot, mergeProps as _mergeProps, withCtx as _withCtx } from \"vue\"\n\nimport type { PropType } from 'vue'\nimport { twMerge } from 'tailwind-merge'\nimport { getULinkProps } from '#ui/utils'\nimport type { NavigationLink } from '#ui-pro/types'\n\n\nexport default /*#__PURE__*/_defineComponent({\n  ...{\n  inheritAttrs: false\n},\n  __name: 'NavigationLinks',\n  props: {\n  level: {\n    type: Number,\n    default: 0\n  },\n  links: {\n    type: Array as PropType<NavigationLink[]>,\n    default: () => []\n  },\n  class: {\n    type: [String, Object, Array] as PropType<any>,\n    default: undefined\n  },\n  ui: {\n    type: Object as PropType<Partial<typeof config>>,\n    default: () => ({})\n  }\n},\n  setup(__props) {\n\nconst config = {\n  wrapper: 'space-y-3',\n  wrapperLevel: 'space-y-1.5',\n  base: 'flex items-center gap-1.5 group',\n  active: 'text-primary font-medium border-current',\n  inactive: 'text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200 border-transparent hover:border-gray-500 dark:hover:border-gray-400',\n  level: 'border-l -ml-px pl-4',\n  icon: {\n    base: 'w-5 h-5 flex-shrink-0'\n  },\n  badge: {\n    base: 'rounded-full'\n  },\n  label: 'text-sm/6 truncate'\n}\n\n\n\nconst props = __props\n\nconst { ui, attrs } = useUI('navigation.links', toRef(props, 'ui'), config, toRef(props, 'class'), true)\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_UIcon = _resolveComponent(\"UIcon\")!\n  const _component_UBadge = _resolveComponent(\"UBadge\")!\n  const _component_ULink = _resolveComponent(\"ULink\")!\n\n  return (__props.links?.length)\n    ? (_openBlock(), _createElementBlock(\"div\", _mergeProps({\n        key: 0,\n        class: __props.level > 0 ? _unref(ui).wrapperLevel : _unref(ui).wrapper\n      }, _unref(attrs)), [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(__props.links, (link, index) => {\n          return (_openBlock(), _createBlock(_component_ULink, _mergeProps({ key: index }, _unref(getULinkProps)(link), {\n            class: [_unref(ui).base, __props.level > 0 && _unref(ui).level],\n            \"active-class\": _unref(ui).active,\n            \"inactive-class\": _unref(ui).inactive,\n            onClick: link.click\n          }), {\n            default: _withCtx(() => [\n              (link.icon)\n                ? (_openBlock(), _createBlock(_component_UIcon, {\n                    key: 0,\n                    name: link.icon,\n                    class: _normalizeClass(_unref(twMerge)(_unref(ui).icon.base, link.iconClass))\n                  }, null, 8, [\"name\", \"class\"]))\n                : _createCommentVNode(\"\", true),\n              _createElementVNode(\"span\", {\n                class: _normalizeClass(_unref(ui).label)\n              }, _toDisplayString(link.label), 3),\n              _renderSlot(_ctx.$slots, \"badge\", { link: link }, () => [\n                (link.badge)\n                  ? (_openBlock(), _createBlock(_component_UBadge, _mergeProps({ key: 0 }, typeof link.badge === 'string' ? { size: 'xs', variant: 'subtle', label: link.badge } : { size: 'xs', variant: 'subtle', ...link.badge }, {\n                      class: _unref(ui).badge.base\n                    }), null, 16, [\"class\"]))\n                  : _createCommentVNode(\"\", true)\n              ])\n            ]),\n            _: 2\n          }, 1040, [\"class\", \"active-class\", \"inactive-class\", \"onClick\"]))\n        }), 128))\n      ], 16))\n    : _createCommentVNode(\"\", true)\n}\n}\n\n})"
        ],
        "mappings": "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",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1714175003255,
      "end": 1714175003255,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714175003255,
      "end": 1714175003255,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1714175003255,
      "end": 1714175003255,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714175003255,
      "end": 1714175003255,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1714175003255,
      "end": 1714175003255,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1714175003255,
      "end": 1714175003255,
      "order": "normal"
    },
    {
      "name": "nuxt:fonts:font-family-injection",
      "start": 1714175003255,
      "end": 1714175003255,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1714175003255,
      "end": 1714175003255,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1714175003255,
      "end": 1714175003255,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1714175003255,
      "end": 1714175003255,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1714175003255,
      "end": 1714175003255,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1714175003255,
      "end": 1714175003255,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1714175003255,
      "end": 1714175003255,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714175003255,
      "end": 1714175003255,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714175003255,
      "end": 1714175003255,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714175003255,
      "end": 1714175003255,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714175003255,
      "end": 1714175003255,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714175003255,
      "end": 1714175003255,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714175003255,
      "end": 1714175003255,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1714175003255,
      "end": 1714175003255,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { useUI } from '/Users/rezajafar/peakofeloquence-app/node_modules/@nuxt/ui/dist/runtime/composables/useUI.mjs';\nimport { toRef } from 'vue';\nimport { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderSlot as _renderSlot, mergeProps as _mergeProps, withCtx as _withCtx } from \"vue\";\nimport { twMerge } from \"tailwind-merge\";\nimport { getULinkProps } from \"#ui/utils\";\nexport default /* @__PURE__ */ _defineComponent({\n  ...{\n    inheritAttrs: false\n  },\n  __name: \"NavigationLinks\",\n  props: {\n    level: {\n      type: Number,\n      default: 0\n    },\n    links: {\n      type: Array,\n      default: () => []\n    },\n    class: {\n      type: [String, Object, Array],\n      default: void 0\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(__props) {\n    const config = {\n      wrapper: \"space-y-3\",\n      wrapperLevel: \"space-y-1.5\",\n      base: \"flex items-center gap-1.5 group\",\n      active: \"text-primary font-medium border-current\",\n      inactive: \"text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200 border-transparent hover:border-gray-500 dark:hover:border-gray-400\",\n      level: \"border-l -ml-px pl-4\",\n      icon: {\n        base: \"w-5 h-5 flex-shrink-0\"\n      },\n      badge: {\n        base: \"rounded-full\"\n      },\n      label: \"text-sm/6 truncate\"\n    };\n    const props = __props;\n    const { ui, attrs } = useUI(\"navigation.links\", toRef(props, \"ui\"), config, toRef(props, \"class\"), true);\n    return (_ctx, _cache) => {\n      const _component_UIcon = _resolveComponent(\"UIcon\");\n      const _component_UBadge = _resolveComponent(\"UBadge\");\n      const _component_ULink = _resolveComponent(\"ULink\");\n      return __props.links?.length ? (_openBlock(), _createElementBlock(\"div\", _mergeProps({\n        key: 0,\n        class: __props.level > 0 ? _unref(ui).wrapperLevel : _unref(ui).wrapper\n      }, _unref(attrs)), [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(__props.links, (link, index) => {\n          return _openBlock(), _createBlock(_component_ULink, _mergeProps({ key: index }, _unref(getULinkProps)(link), {\n            class: [_unref(ui).base, __props.level > 0 && _unref(ui).level],\n            \"active-class\": _unref(ui).active,\n            \"inactive-class\": _unref(ui).inactive,\n            onClick: link.click\n          }), {\n            default: _withCtx(() => [\n              link.icon ? (_openBlock(), _createBlock(_component_UIcon, {\n                key: 0,\n                name: link.icon,\n                class: _normalizeClass(_unref(twMerge)(_unref(ui).icon.base, link.iconClass))\n              }, null, 8, [\"name\", \"class\"])) : _createCommentVNode(\"\", true),\n              _createElementVNode(\"span\", {\n                class: _normalizeClass(_unref(ui).label)\n              }, _toDisplayString(link.label), 3),\n              _renderSlot(_ctx.$slots, \"badge\", { link }, () => [\n                link.badge ? (_openBlock(), _createBlock(_component_UBadge, _mergeProps({ key: 0 }, typeof link.badge === \"string\" ? { size: \"xs\", variant: \"subtle\", label: link.badge } : { size: \"xs\", variant: \"subtle\", ...link.badge }, {\n                  class: _unref(ui).badge.base\n                }), null, 16, [\"class\"])) : _createCommentVNode(\"\", true)\n              ])\n            ]),\n            _: 2\n          }, 1040, [\"class\", \"active-class\", \"inactive-class\", \"onClick\"]);\n        }), 128))\n      ], 16)) : _createCommentVNode(\"\", true);\n    };\n  }\n});\n",
      "start": 1714175003255,
      "end": 1714175003256,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "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C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7G,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5F,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACfxlD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjzE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1714175003256,
      "end": 1714175003256,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1714175003256,
      "end": 1714175003256,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1714175003256,
      "end": 1714175003256,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1714175003256,
      "end": 1714175003256,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "result": "import { default as __nuxt_component_0 } from \"/Users/rezajafar/peakofeloquence-app/node_modules/@nuxt/ui/dist/runtime/components/elements/Icon.vue\";\nimport { default as __nuxt_component_1 } from \"/Users/rezajafar/peakofeloquence-app/node_modules/@nuxt/ui/dist/runtime/components/elements/Badge.vue\";\nimport { default as __nuxt_component_2 } from \"/Users/rezajafar/peakofeloquence-app/node_modules/@nuxt/ui/dist/runtime/components/elements/Link.vue\";\nimport { useUI } from '/Users/rezajafar/peakofeloquence-app/node_modules/@nuxt/ui/dist/runtime/composables/useUI.mjs';\nimport { toRef } from 'vue';\nimport { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderSlot as _renderSlot, mergeProps as _mergeProps, withCtx as _withCtx } from \"vue\";\nimport { twMerge } from \"tailwind-merge\";\nimport { getULinkProps } from \"#ui/utils\";\nexport default /* @__PURE__ */ _defineComponent({\n  ...{\n    inheritAttrs: false\n  },\n  __name: \"NavigationLinks\",\n  props: {\n    level: {\n      type: Number,\n      default: 0\n    },\n    links: {\n      type: Array,\n      default: () => []\n    },\n    class: {\n      type: [String, Object, Array],\n      default: void 0\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(__props) {\n    const config = {\n      wrapper: \"space-y-3\",\n      wrapperLevel: \"space-y-1.5\",\n      base: \"flex items-center gap-1.5 group\",\n      active: \"text-primary font-medium border-current\",\n      inactive: \"text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200 border-transparent hover:border-gray-500 dark:hover:border-gray-400\",\n      level: \"border-l -ml-px pl-4\",\n      icon: {\n        base: \"w-5 h-5 flex-shrink-0\"\n      },\n      badge: {\n        base: \"rounded-full\"\n      },\n      label: \"text-sm/6 truncate\"\n    };\n    const props = __props;\n    const { ui, attrs } = useUI(\"navigation.links\", toRef(props, \"ui\"), config, toRef(props, \"class\"), true);\n    return (_ctx, _cache) => {\n      const _component_UIcon = __nuxt_component_0;\n      const _component_UBadge = __nuxt_component_1;\n      const _component_ULink = __nuxt_component_2;\n      return __props.links?.length ? (_openBlock(), _createElementBlock(\"div\", _mergeProps({\n        key: 0,\n        class: __props.level > 0 ? _unref(ui).wrapperLevel : _unref(ui).wrapper\n      }, _unref(attrs)), [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(__props.links, (link, index) => {\n          return _openBlock(), _createBlock(_component_ULink, _mergeProps({ key: index }, _unref(getULinkProps)(link), {\n            class: [_unref(ui).base, __props.level > 0 && _unref(ui).level],\n            \"active-class\": _unref(ui).active,\n            \"inactive-class\": _unref(ui).inactive,\n            onClick: link.click\n          }), {\n            default: _withCtx(() => [\n              link.icon ? (_openBlock(), _createBlock(_component_UIcon, {\n                key: 0,\n                name: link.icon,\n                class: _normalizeClass(_unref(twMerge)(_unref(ui).icon.base, link.iconClass))\n              }, null, 8, [\"name\", \"class\"])) : _createCommentVNode(\"\", true),\n              _createElementVNode(\"span\", {\n                class: _normalizeClass(_unref(ui).label)\n              }, _toDisplayString(link.label), 3),\n              _renderSlot(_ctx.$slots, \"badge\", { link }, () => [\n                link.badge ? (_openBlock(), _createBlock(_component_UBadge, _mergeProps({ key: 0 }, typeof link.badge === \"string\" ? { size: \"xs\", variant: \"subtle\", label: link.badge } : { size: \"xs\", variant: \"subtle\", ...link.badge }, {\n                  class: _unref(ui).badge.base\n                }), null, 16, [\"class\"])) : _createCommentVNode(\"\", true)\n              ])\n            ]),\n            _: 2\n          }, 1040, [\"class\", \"active-class\", \"inactive-class\", \"onClick\"]);\n        }), 128))\n      ], 16)) : _createCommentVNode(\"\", true);\n    };\n  }\n});\n",
      "start": 1714175003256,
      "end": 1714175003256,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1714175003256,
      "end": 1714175003256,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714175003256,
      "end": 1714175003256,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714175003256,
      "end": 1714175003256,
      "order": "normal"
    }
  ]
}
