{
  "resolvedId": "/Users/rezajafar/peakofeloquence-site/node_modules/@vueuse/math/index.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { computed, isReadonly, ref } from 'vue-demi';\nimport { toValue, clamp, reactify } from '@vueuse/shared';\n\nfunction createGenericProjection(fromDomain, toDomain, projector) {\n  return (input) => {\n    return computed(() => projector(toValue(input), toValue(fromDomain), toValue(toDomain)));\n  };\n}\n\nfunction defaultNumericProjector(input, from, to) {\n  return (input - from[0]) / (from[1] - from[0]) * (to[1] - to[0]) + to[0];\n}\nfunction createProjection(fromDomain, toDomain, projector = defaultNumericProjector) {\n  return createGenericProjection(fromDomain, toDomain, projector);\n}\n\nfunction logicAnd(...args) {\n  return computed(() => args.every((i) => toValue(i)));\n}\n\nfunction logicNot(v) {\n  return computed(() => !toValue(v));\n}\n\nfunction logicOr(...args) {\n  return computed(() => args.some((i) => toValue(i)));\n}\n\nfunction useAbs(value) {\n  return computed(() => Math.abs(toValue(value)));\n}\n\nfunction toValueArgsFlat(args) {\n  return args.flatMap((i) => {\n    const v = toValue(i);\n    if (Array.isArray(v))\n      return v.map((i2) => toValue(i2));\n    return [v];\n  });\n}\n\nfunction useAverage(...args) {\n  return computed(() => {\n    const array = toValueArgsFlat(args);\n    return array.reduce((sum, v) => sum += v, 0) / array.length;\n  });\n}\n\nfunction useCeil(value) {\n  return computed(() => Math.ceil(toValue(value)));\n}\n\nfunction useClamp(value, min, max) {\n  if (typeof value === \"function\" || isReadonly(value))\n    return computed(() => clamp(toValue(value), toValue(min), toValue(max)));\n  const _value = ref(value);\n  return computed({\n    get() {\n      return _value.value = clamp(_value.value, toValue(min), toValue(max));\n    },\n    set(value2) {\n      _value.value = clamp(value2, toValue(min), toValue(max));\n    }\n  });\n}\n\nfunction useFloor(value) {\n  return computed(() => Math.floor(toValue(value)));\n}\n\nfunction useMath(key, ...args) {\n  return reactify(Math[key])(...args);\n}\n\nfunction useMax(...args) {\n  return computed(() => {\n    const array = toValueArgsFlat(args);\n    return Math.max(...array);\n  });\n}\n\nfunction useMin(...args) {\n  return computed(() => {\n    const array = toValueArgsFlat(args);\n    return Math.min(...array);\n  });\n}\n\nfunction accurateMultiply(value, power) {\n  const valueStr = value.toString();\n  if (value > 0 && valueStr.includes(\".\")) {\n    const decimalPlaces = valueStr.split(\".\")[1].length;\n    const multiplier = 10 ** decimalPlaces;\n    return value * multiplier * power / multiplier;\n  } else {\n    return value * power;\n  }\n}\nfunction usePrecision(value, digits, options) {\n  return computed(() => {\n    var _a;\n    const _value = toValue(value);\n    const _digits = toValue(digits);\n    const power = 10 ** _digits;\n    return Math[((_a = toValue(options)) == null ? void 0 : _a.math) || \"round\"](accurateMultiply(_value, power)) / power;\n  });\n}\n\nfunction useProjection(input, fromDomain, toDomain, projector) {\n  return createProjection(fromDomain, toDomain, projector)(input);\n}\n\nfunction useRound(value) {\n  return computed(() => Math.round(toValue(value)));\n}\n\nfunction useSum(...args) {\n  return computed(() => toValueArgsFlat(args).reduce((sum, v) => sum += v, 0));\n}\n\nfunction useTrunc(value) {\n  return computed(() => Math.trunc(toValue(value)));\n}\n\nexport { logicAnd as and, createGenericProjection, createProjection, logicAnd, logicNot, logicOr, logicNot as not, logicOr as or, useAbs, useAverage, useCeil, useClamp, useFloor, useMath, useMax, useMin, usePrecision, useProjection, useRound, useSum, useTrunc };\n",
      "start": 1712268127367,
      "end": 1712268127374,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1712268127374,
      "end": 1712268127374,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1712268127374,
      "end": 1712268127374,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1712268127374,
      "end": 1712268127374,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1712268127374,
      "end": 1712268127374,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1712268127374,
      "end": 1712268127374,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1712268127374,
      "end": 1712268127374,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1712268127374,
      "end": 1712268127374,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1712268127374,
      "end": 1712268127374,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1712268127374,
      "end": 1712268127374,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1712268127374,
      "end": 1712268127374,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712268127374,
      "end": 1712268127374,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1712268127374,
      "end": 1712268127374,
      "order": "normal"
    },
    {
      "name": "nuxt:fonts:font-family-injection",
      "start": 1712268127374,
      "end": 1712268127374,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1712268127374,
      "end": 1712268127374,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1712268127374,
      "end": 1712268127374,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712268127374,
      "end": 1712268127374,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1712268127374,
      "end": 1712268127374,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1712268127374,
      "end": 1712268127374,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1712268127374,
      "end": 1712268127374,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1712268127374,
      "end": 1712268127374,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1712268127374,
      "end": 1712268127374,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1712268127374,
      "end": 1712268127374,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1712268127374,
      "end": 1712268127374,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1712268127374,
      "end": 1712268127374,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1712268127374,
      "end": 1712268127374,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1712268127374,
      "end": 1712268127374,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1712268127374,
      "end": 1712268127374,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1712268127374,
      "end": 1712268127374,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1712268127374,
      "end": 1712268127374,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1712268127374,
      "end": 1712268127374,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1712268127374,
      "end": 1712268127374,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1712268127374,
      "end": 1712268127374,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1712268127374,
      "end": 1712268127374,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1712268127374,
      "end": 1712268127374,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1712268127374,
      "end": 1712268127374,
      "order": "normal"
    }
  ]
}
