{
  "resolvedId": "/Users/rezajafar/peakofeloquence-app/node_modules/@nuxt/ui/dist/runtime/composables/useUI.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { computed, toValue, useAttrs } from \"vue\";\nimport { useAppConfig } from \"#imports\";\nimport { mergeConfig, omit, get } from \"../utils/index.mjs\";\nexport const useUI = (key, $ui, $config, $wrapperClass, withAppConfig = false) => {\n  const $attrs = useAttrs();\n  const appConfig = useAppConfig();\n  const ui = computed(() => {\n    const _ui = toValue($ui);\n    const _config = toValue($config);\n    const _wrapperClass = toValue($wrapperClass);\n    return mergeConfig(\n      _ui?.strategy || appConfig.ui?.strategy,\n      _wrapperClass ? { wrapper: _wrapperClass } : {},\n      _ui || {},\n      process.dev || withAppConfig ? get(appConfig.ui, key, {}) : {},\n      _config || {}\n    );\n  });\n  const attrs = computed(() => omit($attrs, [\"class\"]));\n  return {\n    ui,\n    attrs\n  };\n};\n",
      "start": 1714172178859,
      "end": 1714172178915,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1714172178915,
      "end": 1714172178915,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1714172178915,
      "end": 1714172178915,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1714172178915,
      "end": 1714172178915,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1714172178915,
      "end": 1714172178915,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1714172178915,
      "end": 1714172178915,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1714172178915,
      "end": 1714172178915,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1714172178915,
      "end": 1714172178915,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714172178915,
      "end": 1714172178915,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1714172178915,
      "end": 1714172178915,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714172178915,
      "end": 1714172178915,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1714172178915,
      "end": 1714172178915,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1714172178915,
      "end": 1714172178915,
      "order": "normal"
    },
    {
      "name": "nuxt:fonts:font-family-injection",
      "start": 1714172178915,
      "end": 1714172178915,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1714172178915,
      "end": 1714172178915,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1714172178915,
      "end": 1714172178915,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1714172178915,
      "end": 1714172178915,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1714172178915,
      "end": 1714172178915,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { computed, toValue, useAttrs } from \"vue\";\nimport { useAppConfig } from \"#imports\";\nimport { mergeConfig, omit, get } from \"../utils/index.mjs\";\nexport const useUI = (key, $ui, $config, $wrapperClass, withAppConfig = false) => {\n  const $attrs = useAttrs();\n  const appConfig = useAppConfig();\n  const ui = computed(() => {\n    const _ui = toValue($ui);\n    const _config = toValue($config);\n    const _wrapperClass = toValue($wrapperClass);\n    return mergeConfig(\n      _ui?.strategy || appConfig.ui?.strategy,\n      _wrapperClass ? { wrapper: _wrapperClass } : {},\n      _ui || {},\n      withAppConfig ? get(appConfig.ui, key, {}) : {},\n      _config || {}\n    );\n  });\n  const attrs = computed(() => omit($attrs, [\"class\"]));\n  return {\n    ui,\n    attrs\n  };\n};\n",
      "start": 1714172178915,
      "end": 1714172179356,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:css-post",
      "start": 1714172179356,
      "end": 1714172179356,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714172179356,
      "end": 1714172179356,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714172179356,
      "end": 1714172179356,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714172179356,
      "end": 1714172179356,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714172179356,
      "end": 1714172179356,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714172179356,
      "end": 1714172179356,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714172179356,
      "end": 1714172179356,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1714172179356,
      "end": 1714172179356,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { useAppConfig } from '#app/config';\nimport { computed, toValue, useAttrs } from \"vue\";\nimport { mergeConfig, omit, get } from \"../utils/index.mjs\";\nexport const useUI = (key, $ui, $config, $wrapperClass, withAppConfig = false) => {\n  const $attrs = useAttrs();\n  const appConfig = useAppConfig();\n  const ui = computed(() => {\n    const _ui = toValue($ui);\n    const _config = toValue($config);\n    const _wrapperClass = toValue($wrapperClass);\n    return mergeConfig(\n      _ui?.strategy || appConfig.ui?.strategy,\n      _wrapperClass ? { wrapper: _wrapperClass } : {},\n      _ui || {},\n      withAppConfig ? get(appConfig.ui, key, {}) : {},\n      _config || {}\n    );\n  });\n  const attrs = computed(() => omit($attrs, [\"class\"]));\n  return {\n    ui,\n    attrs\n  };\n};\n",
      "start": 1714172179356,
      "end": 1714172179358,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAElnF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1714172179358,
      "end": 1714172179358,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1714172179358,
      "end": 1714172179358,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1714172179358,
      "end": 1714172179358,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1714172179358,
      "end": 1714172179358,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1714172179358,
      "end": 1714172179358,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1714172179358,
      "end": 1714172179358,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714172179358,
      "end": 1714172179358,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714172179358,
      "end": 1714172179358,
      "order": "normal"
    }
  ]
}
