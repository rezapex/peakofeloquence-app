{
  "resolvedId": "/Users/rezajafar/peakofeloquence-site/node_modules/remark-parse/lib/index.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n",
      "start": 1712268127423,
      "end": 1712268127442,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1712268127442,
      "end": 1712268127442,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1712268127442,
      "end": 1712268127442,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1712268127442,
      "end": 1712268127442,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1712268127442,
      "end": 1712268127442,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1712268127442,
      "end": 1712268127442,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1712268127442,
      "end": 1712268127442,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1712268127442,
      "end": 1712268127442,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1712268127442,
      "end": 1712268127442,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1712268127442,
      "end": 1712268127442,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1712268127442,
      "end": 1712268127442,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712268127442,
      "end": 1712268127442,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1712268127442,
      "end": 1712268127442,
      "order": "normal"
    },
    {
      "name": "nuxt:fonts:font-family-injection",
      "start": 1712268127442,
      "end": 1712268127442,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1712268127442,
      "end": 1712268127442,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1712268127442,
      "end": 1712268127442,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712268127442,
      "end": 1712268127442,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1712268127442,
      "end": 1712268127442,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1712268127442,
      "end": 1712268127442,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1712268127442,
      "end": 1712268127442,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1712268127442,
      "end": 1712268127442,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1712268127442,
      "end": 1712268127442,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1712268127442,
      "end": 1712268127442,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1712268127442,
      "end": 1712268127442,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1712268127442,
      "end": 1712268127442,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1712268127442,
      "end": 1712268127442,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1712268127442,
      "end": 1712268127442,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1712268127442,
      "end": 1712268127442,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1712268127442,
      "end": 1712268127442,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1712268127442,
      "end": 1712268127442,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1712268127442,
      "end": 1712268127442,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1712268127442,
      "end": 1712268127442,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1712268127442,
      "end": 1712268127442,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1712268127442,
      "end": 1712268127442,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1712268127442,
      "end": 1712268127442,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1712268127442,
      "end": 1712268127442,
      "order": "normal"
    }
  ]
}
