{
  "resolvedId": "/Users/rezajafar/peakofeloquence-app/node_modules/@nuxt/ui-pro/components/color-mode/ColorModeButton.vue?vue&type=script&setup=true&lang.ts",
  "transforms": [
    {
      "name": "vite:vue",
      "result": "import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, resolveComponent as _resolveComponent, mergeProps as _mergeProps, createVNode as _createVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"w-8 h-8\" }, null, -1)\n\n\nexport default /*#__PURE__*/_defineComponent({\n  ...{\n  inheritAttrs: false\n},\n  __name: 'ColorModeButton',\n  setup(__props) {\n\n\n\nconst colorMode = useColorMode()\nconst appConfig = useAppConfig()\n\n// Computed\n\nconst isDark = computed({\n  get () {\n    return colorMode.value === 'dark'\n  },\n  set () {\n    colorMode.preference = colorMode.value === 'dark' ? 'light' : 'dark'\n  }\n})\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_UButton = _resolveComponent(\"UButton\")!\n  const _component_ClientOnly = _resolveComponent(\"ClientOnly\")!\n\n  return (!_unref(colorMode)?.forced)\n    ? (_openBlock(), _createBlock(_component_ClientOnly, { key: 0 }, {\n        fallback: _withCtx(() => [\n          _hoisted_1\n        ]),\n        default: _withCtx(() => [\n          _createVNode(_component_UButton, _mergeProps({\n            icon: _unref(isDark) ? _unref(appConfig).ui.icons.dark : _unref(appConfig).ui.icons.light\n          }, {\n        ...(_ctx.$ui?.button?.secondary as any),\n        ..._ctx.$attrs\n      }, {\n            \"aria-label\": `Switch to ${_unref(isDark) ? 'light' : 'dark'} mode`,\n            onClick: _cache[0] || (_cache[0] = ($event: any) => (isDark.value = !_unref(isDark)))\n          }), null, 16, [\"icon\", \"aria-label\"])\n        ]),\n        _: 1\n      }))\n    : _createCommentVNode(\"\", true)\n}\n}\n\n})",
      "start": 1714175003219,
      "end": 1714175003219
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1714175003219,
      "end": 1714175003219,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1714175003219,
      "end": 1714175003219,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1714175003219,
      "end": 1714175003219,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1714175003219,
      "end": 1714175003219,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1714175003219,
      "end": 1714175003219,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, resolveComponent as _resolveComponent, mergeProps as _mergeProps, createVNode as _createVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = /* @__PURE__ */ _createElementVNode(\"div\", { class: \"w-8 h-8\" }, null, -1);\nexport default /* @__PURE__ */ _defineComponent({\n  ...{\n    inheritAttrs: false\n  },\n  __name: \"ColorModeButton\",\n  setup(__props) {\n    const colorMode = useColorMode();\n    const appConfig = useAppConfig();\n    const isDark = computed({\n      get() {\n        return colorMode.value === \"dark\";\n      },\n      set() {\n        colorMode.preference = colorMode.value === \"dark\" ? \"light\" : \"dark\";\n      }\n    });\n    return (_ctx, _cache) => {\n      const _component_UButton = _resolveComponent(\"UButton\");\n      const _component_ClientOnly = _resolveComponent(\"ClientOnly\");\n      return !_unref(colorMode)?.forced ? (_openBlock(), _createBlock(_component_ClientOnly, { key: 0 }, {\n        fallback: _withCtx(() => [\n          _hoisted_1\n        ]),\n        default: _withCtx(() => [\n          _createVNode(_component_UButton, _mergeProps({\n            icon: _unref(isDark) ? _unref(appConfig).ui.icons.dark : _unref(appConfig).ui.icons.light\n          }, {\n            ..._ctx.$ui?.button?.secondary,\n            ..._ctx.$attrs\n          }, {\n            \"aria-label\": `Switch to ${_unref(isDark) ? \"light\" : \"dark\"} mode`,\n            onClick: _cache[0] || (_cache[0] = ($event) => isDark.value = !_unref(isDark))\n          }), null, 16, [\"icon\", \"aria-label\"])\n        ]),\n        _: 1\n      })) : _createCommentVNode(\"\", true);\n    };\n  }\n});\n",
      "start": 1714175003219,
      "end": 1714175003230,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/rezajafar/peakofeloquence-app/node_modules/@nuxt/ui-pro/components/color-mode/ColorModeButton.vue?vue&type=script&setup=true&lang.ts"
        ],
        "sourcesContent": [
          "import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, resolveComponent as _resolveComponent, mergeProps as _mergeProps, createVNode as _createVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"w-8 h-8\" }, null, -1)\n\n\nexport default /*#__PURE__*/_defineComponent({\n  ...{\n  inheritAttrs: false\n},\n  __name: 'ColorModeButton',\n  setup(__props) {\n\n\n\nconst colorMode = useColorMode()\nconst appConfig = useAppConfig()\n\n// Computed\n\nconst isDark = computed({\n  get () {\n    return colorMode.value === 'dark'\n  },\n  set () {\n    colorMode.preference = colorMode.value === 'dark' ? 'light' : 'dark'\n  }\n})\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_UButton = _resolveComponent(\"UButton\")!\n  const _component_ClientOnly = _resolveComponent(\"ClientOnly\")!\n\n  return (!_unref(colorMode)?.forced)\n    ? (_openBlock(), _createBlock(_component_ClientOnly, { key: 0 }, {\n        fallback: _withCtx(() => [\n          _hoisted_1\n        ]),\n        default: _withCtx(() => [\n          _createVNode(_component_UButton, _mergeProps({\n            icon: _unref(isDark) ? _unref(appConfig).ui.icons.dark : _unref(appConfig).ui.icons.light\n          }, {\n        ...(_ctx.$ui?.button?.secondary as any),\n        ..._ctx.$attrs\n      }, {\n            \"aria-label\": `Switch to ${_unref(isDark) ? 'light' : 'dark'} mode`,\n            onClick: _cache[0] || (_cache[0] = ($event: any) => (isDark.value = !_unref(isDark)))\n          }), null, 16, [\"icon\", \"aria-label\"])\n        ]),\n        _: 1\n      }))\n    : _createCommentVNode(\"\", true)\n}\n}\n\n})"
        ],
        "mappings": "AAAA,SAAS,mBAAmB,wBAAwB;AACpD,SAAS,SAAS,QAAQ,oBAAoB,mBAAmB,cAAc,aAAa,eAAe,cAAc,sBAAsB,qBAAqB,WAAW,UAAU,aAAa,YAAY,eAAe,cAAc,sBAAsB,2BAA2B;AAEhS,MAAM,aAA0B,oCAAoB,OAAO,EAAE,OAAO,UAAU,GAAG,MAAM,EAAE;AAGzF,eAA4B,iCAAiB;AAAA,EAC3C,GAAG;AAAA,IACH,cAAc;AAAA,EAChB;AAAA,EACE,QAAQ;AAAA,EACR,MAAM,SAAS;AAIjB,UAAM,YAAY,aAAa;AAC/B,UAAM,YAAY,aAAa;AAI/B,UAAM,SAAS,SAAS;AAAA,MACtB,MAAO;AACL,eAAO,UAAU,UAAU;AAAA,MAC7B;AAAA,MACA,MAAO;AACL,kBAAU,aAAa,UAAU,UAAU,SAAS,UAAU;AAAA,MAChE;AAAA,IACF,CAAC;AAED,WAAO,CAAC,MAAU,WAAgB;AAChC,YAAM,qBAAqB,kBAAkB,SAAS;AACtD,YAAM,wBAAwB,kBAAkB,YAAY;AAE5D,aAAQ,CAAC,OAAO,SAAS,GAAG,UACvB,WAAW,GAAG,aAAa,uBAAuB,EAAE,KAAK,EAAE,GAAG;AAAA,QAC7D,UAAU,SAAS,MAAM;AAAA,UACvB;AAAA,QACF,CAAC;AAAA,QACD,SAAS,SAAS,MAAM;AAAA,UACtB,aAAa,oBAAoB,YAAY;AAAA,YAC3C,MAAM,OAAO,MAAM,IAAI,OAAO,SAAS,EAAE,GAAG,MAAM,OAAO,OAAO,SAAS,EAAE,GAAG,MAAM;AAAA,UACtF,GAAG;AAAA,YACL,GAAI,KAAK,KAAK,QAAQ;AAAA,YACtB,GAAG,KAAK;AAAA,UACV,GAAG;AAAA,YACG,cAAc,aAAa,OAAO,MAAM,IAAI,UAAU,MAAM;AAAA,YAC5D,SAAS,OAAO,CAAC,MAAM,OAAO,CAAC,IAAI,CAAC,WAAiB,OAAO,QAAQ,CAAC,OAAO,MAAM;AAAA,UACpF,CAAC,GAAG,MAAM,IAAI,CAAC,QAAQ,YAAY,CAAC;AAAA,QACtC,CAAC;AAAA,QACD,GAAG;AAAA,MACL,CAAC,KACD,oBAAoB,IAAI,IAAI;AAAA,IAClC;AAAA,EACA;AAEA,CAAC;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1714175003230,
      "end": 1714175003230,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714175003230,
      "end": 1714175003230,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1714175003230,
      "end": 1714175003230,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714175003230,
      "end": 1714175003230,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1714175003230,
      "end": 1714175003230,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1714175003230,
      "end": 1714175003230,
      "order": "normal"
    },
    {
      "name": "nuxt:fonts:font-family-injection",
      "start": 1714175003230,
      "end": 1714175003230,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1714175003230,
      "end": 1714175003230,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1714175003230,
      "end": 1714175003230,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1714175003230,
      "end": 1714175003230,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1714175003230,
      "end": 1714175003230,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1714175003230,
      "end": 1714175003230,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1714175003230,
      "end": 1714175003230,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714175003230,
      "end": 1714175003230,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714175003230,
      "end": 1714175003230,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714175003230,
      "end": 1714175003230,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714175003230,
      "end": 1714175003230,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714175003230,
      "end": 1714175003230,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714175003230,
      "end": 1714175003230,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1714175003230,
      "end": 1714175003230,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { useColorMode } from '/Users/rezajafar/peakofeloquence-app/node_modules/@nuxtjs/color-mode/dist/runtime/composables';\nimport { useAppConfig } from '#app/config';\nimport { computed } from 'vue';\nimport { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, resolveComponent as _resolveComponent, mergeProps as _mergeProps, createVNode as _createVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = /* @__PURE__ */ _createElementVNode(\"div\", { class: \"w-8 h-8\" }, null, -1);\nexport default /* @__PURE__ */ _defineComponent({\n  ...{\n    inheritAttrs: false\n  },\n  __name: \"ColorModeButton\",\n  setup(__props) {\n    const colorMode = useColorMode();\n    const appConfig = useAppConfig();\n    const isDark = computed({\n      get() {\n        return colorMode.value === \"dark\";\n      },\n      set() {\n        colorMode.preference = colorMode.value === \"dark\" ? \"light\" : \"dark\";\n      }\n    });\n    return (_ctx, _cache) => {\n      const _component_UButton = _resolveComponent(\"UButton\");\n      const _component_ClientOnly = _resolveComponent(\"ClientOnly\");\n      return !_unref(colorMode)?.forced ? (_openBlock(), _createBlock(_component_ClientOnly, { key: 0 }, {\n        fallback: _withCtx(() => [\n          _hoisted_1\n        ]),\n        default: _withCtx(() => [\n          _createVNode(_component_UButton, _mergeProps({\n            icon: _unref(isDark) ? _unref(appConfig).ui.icons.dark : _unref(appConfig).ui.icons.light\n          }, {\n            ..._ctx.$ui?.button?.secondary,\n            ..._ctx.$attrs\n          }, {\n            \"aria-label\": `Switch to ${_unref(isDark) ? \"light\" : \"dark\"} mode`,\n            onClick: _cache[0] || (_cache[0] = ($event) => isDark.value = !_unref(isDark))\n          }), null, 16, [\"icon\", \"aria-label\"])\n        ]),\n        _: 1\n      })) : _createCommentVNode(\"\", true);\n    };\n  }\n});\n",
      "start": 1714175003230,
      "end": 1714175003231,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappingstjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACbplC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxrG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACh
      }
    },
    {
      "name": "unctx:transform",
      "start": 1714175003231,
      "end": 1714175003231,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1714175003231,
      "end": 1714175003231,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1714175003231,
      "end": 1714175003231,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1714175003231,
      "end": 1714175003231,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "result": "import { default as __nuxt_component_0 } from \"/Users/rezajafar/peakofeloquence-app/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue\";\nimport { default as __nuxt_component_1 } from \"/Users/rezajafar/peakofeloquence-app/node_modules/nuxt/dist/app/components/client-only\";\nimport { useColorMode } from '/Users/rezajafar/peakofeloquence-app/node_modules/@nuxtjs/color-mode/dist/runtime/composables';\nimport { useAppConfig } from '#app/config';\nimport { computed } from 'vue';\nimport { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, resolveComponent as _resolveComponent, mergeProps as _mergeProps, createVNode as _createVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = /* @__PURE__ */ _createElementVNode(\"div\", { class: \"w-8 h-8\" }, null, -1);\nexport default /* @__PURE__ */ _defineComponent({\n  ...{\n    inheritAttrs: false\n  },\n  __name: \"ColorModeButton\",\n  setup(__props) {\n    const colorMode = useColorMode();\n    const appConfig = useAppConfig();\n    const isDark = computed({\n      get() {\n        return colorMode.value === \"dark\";\n      },\n      set() {\n        colorMode.preference = colorMode.value === \"dark\" ? \"light\" : \"dark\";\n      }\n    });\n    return (_ctx, _cache) => {\n      const _component_UButton = __nuxt_component_0;\n      const _component_ClientOnly = __nuxt_component_1;\n      return !_unref(colorMode)?.forced ? (_openBlock(), _createBlock(_component_ClientOnly, { key: 0 }, {\n        fallback: _withCtx(() => [\n          _hoisted_1\n        ]),\n        default: _withCtx(() => [\n          _createVNode(_component_UButton, _mergeProps({\n            icon: _unref(isDark) ? _unref(appConfig).ui.icons.dark : _unref(appConfig).ui.icons.light\n          }, {\n            ..._ctx.$ui?.button?.secondary,\n            ..._ctx.$attrs\n          }, {\n            \"aria-label\": `Switch to ${_unref(isDark) ? \"light\" : \"dark\"} mode`,\n            onClick: _cache[0] || (_cache[0] = ($event) => isDark.value = !_unref(isDark))\n          }), null, 16, [\"icon\", \"aria-label\"])\n        ]),\n        _: 1\n      })) : _createCommentVNode(\"\", true);\n    };\n  }\n});\n",
      "start": 1714175003231,
      "end": 1714175003231,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1714175003231,
      "end": 1714175003231,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714175003231,
      "end": 1714175003231,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714175003231,
      "end": 1714175003231,
      "order": "normal"
    }
  ]
}
