{
  "resolvedId": "/Users/rezajafar/peakofeloquence-site/node_modules/nuxt/dist/pages/runtime/composables.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { getCurrentInstance } from \"vue\";\nimport { useRoute } from \"vue-router\";\nconst warnRuntimeUsage = (method) => {\n  console.warn(\n    `${method}() is a compiler-hint helper that is only usable inside the script block of a single file component which is also a page. Its arguments should be compiled away and passing it at runtime has no effect.`\n  );\n};\nexport const definePageMeta = (meta) => {\n  if (import.meta.dev) {\n    const component = getCurrentInstance()?.type;\n    try {\n      const isRouteComponent = component && useRoute().matched.some((p) => Object.values(p.components || {}).includes(component));\n      if (isRouteComponent) {\n        return;\n      }\n    } catch {\n    }\n    warnRuntimeUsage(\"definePageMeta\");\n  }\n};\nexport const defineRouteRules = /* @__NO_SIDE_EFFECTS__ */ (rules) => {\n};\n",
      "start": 1712268127178,
      "end": 1712268127195,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1712268127195,
      "end": 1712268127195,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1712268127195,
      "end": 1712268127195,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1712268127195,
      "end": 1712268127195,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1712268127195,
      "end": 1712268127195,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1712268127195,
      "end": 1712268127195,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1712268127195,
      "end": 1712268127195,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1712268127195,
      "end": 1712268127195,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1712268127195,
      "end": 1712268127195,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1712268127195,
      "end": 1712268127195,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1712268127195,
      "end": 1712268127195,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712268127195,
      "end": 1712268127195,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1712268127195,
      "end": 1712268127195,
      "order": "normal"
    },
    {
      "name": "nuxt:fonts:font-family-injection",
      "start": 1712268127195,
      "end": 1712268127195,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1712268127195,
      "end": 1712268127195,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1712268127195,
      "end": 1712268127195,
      "order": "normal"
    },
    {
      "name": "replace",
      "result": "import { getCurrentInstance } from \"vue\";\nimport { useRoute } from \"vue-router\";\nconst warnRuntimeUsage = (method) => {\n  console.warn(\n    `${method}() is a compiler-hint helper that is only usable inside the script block of a single file component which is also a page. Its arguments should be compiled away and passing it at runtime has no effect.`\n  );\n};\nexport const definePageMeta = (meta) => {\n  if (false) {\n    const component = getCurrentInstance()?.type;\n    try {\n      const isRouteComponent = component && useRoute().matched.some((p) => Object.values(p.components || {}).includes(component));\n      if (isRouteComponent) {\n        return;\n      }\n    } catch {\n    }\n    warnRuntimeUsage(\"definePageMeta\");\n  }\n};\nexport const defineRouteRules = /* @__NO_SIDE_EFFECTS__ */ (rules) => {\n};\n",
      "start": 1712268127195,
      "end": 1712268127195,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACfvN,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAe,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjlI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC;AACH,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvE,CAAC,CAAC;"
      }
    },
    {
      "name": "ssr-styles",
      "start": 1712268127195,
      "end": 1712268127195,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1712268127195,
      "end": 1712268127195,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1712268127195,
      "end": 1712268127195,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1712268127195,
      "end": 1712268127195,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1712268127195,
      "end": 1712268127195,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1712268127195,
      "end": 1712268127195,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1712268127195,
      "end": 1712268127195,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1712268127195,
      "end": 1712268127195,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1712268127195,
      "end": 1712268127195,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1712268127195,
      "end": 1712268127195,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1712268127195,
      "end": 1712268127195,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1712268127195,
      "end": 1712268127195,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1712268127195,
      "end": 1712268127195,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1712268127195,
      "end": 1712268127195,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1712268127195,
      "end": 1712268127195,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1712268127195,
      "end": 1712268127195,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1712268127195,
      "end": 1712268127195,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1712268127195,
      "end": 1712268127195,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1712268127195,
      "end": 1712268127195,
      "order": "normal"
    }
  ]
}
