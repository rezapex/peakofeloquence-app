{
  "resolvedId": "/Users/rezajafar/peakofeloquence-site/node_modules/micromark-factory-title/index.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      marker = code === 40 ? 41 : code\n      return begin\n    }\n    return nok(code)\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    return atBreak(code)\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return begin(marker)\n    }\n    if (code === null) {\n      return nok(code)\n    }\n\n    // Note: blank lines canâ€™t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atBreak, 'linePrefix')\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return inside(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? escape : inside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return inside\n    }\n    return inside(code)\n  }\n}\n",
      "start": 1712268127706,
      "end": 1712268127715,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1712268127716,
      "end": 1712268127716,
      "order": "normal"
    },
    {
      "name": "nuxt:fonts:font-family-injection",
      "start": 1712268127716,
      "end": 1712268127716,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1712268127716,
      "end": 1712268127716,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1712268127716,
      "end": 1712268127716,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712268127716,
      "end": 1712268127716,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1712268127716,
      "end": 1712268127716,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1712268127716,
      "end": 1712268127716,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1712268127716,
      "end": 1712268127716,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1712268127716,
      "end": 1712268127716,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1712268127716,
      "end": 1712268127716,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1712268127716,
      "end": 1712268127716,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1712268127716,
      "end": 1712268127716,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1712268127716,
      "end": 1712268127716,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1712268127716,
      "end": 1712268127716,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1712268127716,
      "end": 1712268127716,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1712268127716,
      "end": 1712268127716,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1712268127716,
      "end": 1712268127716,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1712268127716,
      "end": 1712268127716,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1712268127716,
      "end": 1712268127716,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1712268127716,
      "end": 1712268127716,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1712268127716,
      "end": 1712268127716,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1712268127716,
      "end": 1712268127716,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1712268127716,
      "end": 1712268127716,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1712268127716,
      "end": 1712268127716,
      "order": "normal"
    }
  ]
}
