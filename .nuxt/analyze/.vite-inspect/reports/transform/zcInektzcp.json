{
  "resolvedId": "/Users/rezajafar/peakofeloquence-site/node_modules/unist-util-stringify-position/lib/index.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n",
      "start": 1712268127816,
      "end": 1712268127827,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1712268127827,
      "end": 1712268127827,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1712268127827,
      "end": 1712268127827,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1712268127827,
      "end": 1712268127827,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1712268127827,
      "end": 1712268127827,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1712268127827,
      "end": 1712268127827,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1712268127827,
      "end": 1712268127827,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1712268127827,
      "end": 1712268127827,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1712268127827,
      "end": 1712268127827,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1712268127827,
      "end": 1712268127827,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1712268127827,
      "end": 1712268127827,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712268127827,
      "end": 1712268127827,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1712268127827,
      "end": 1712268127827,
      "order": "normal"
    },
    {
      "name": "nuxt:fonts:font-family-injection",
      "start": 1712268127827,
      "end": 1712268127827,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1712268127827,
      "end": 1712268127827,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1712268127827,
      "end": 1712268127827,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712268127827,
      "end": 1712268127827,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1712268127827,
      "end": 1712268127827,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1712268127827,
      "end": 1712268127827,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1712268127827,
      "end": 1712268127827,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1712268127827,
      "end": 1712268127827,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1712268127827,
      "end": 1712268127827,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1712268127827,
      "end": 1712268127827,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1712268127827,
      "end": 1712268127827,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1712268127827,
      "end": 1712268127827,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1712268127827,
      "end": 1712268127827,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1712268127827,
      "end": 1712268127827,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1712268127827,
      "end": 1712268127827,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1712268127827,
      "end": 1712268127827,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1712268127827,
      "end": 1712268127827,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1712268127827,
      "end": 1712268127827,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1712268127827,
      "end": 1712268127827,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1712268127827,
      "end": 1712268127827,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1712268127827,
      "end": 1712268127827,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1712268127827,
      "end": 1712268127827,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1712268127827,
      "end": 1712268127827,
      "order": "normal"
    }
  ]
}
