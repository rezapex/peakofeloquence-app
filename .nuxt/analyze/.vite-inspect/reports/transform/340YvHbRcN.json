{
  "resolvedId": "/Users/rezajafar/peakofeloquence-app/node_modules/@nuxt/ui-pro/components/navigation/NavigationTree.vue?vue&type=script&setup=true&lang.ts",
  "transforms": [
    {
      "name": "vite:vue",
      "result": "import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode, mergeProps as _mergeProps } from \"vue\"\n\nimport type { PropType } from 'vue'\nimport type { NavigationGroup, NavigationTree } from '#ui-pro/types'\n\n\nexport default /*#__PURE__*/_defineComponent({\n  ...{\n  inheritAttrs: false\n},\n  __name: 'NavigationTree',\n  props: {\n  level: {\n    type: Number,\n    default: 0\n  },\n  links: {\n    type: Array as PropType<NavigationTree[]>,\n    default: () => []\n  },\n  multiple: {\n    type: Boolean,\n    default: true\n  },\n  defaultOpen: {\n    type: [Boolean, Number],\n    default: undefined\n  },\n  class: {\n    type: [String, Object, Array] as PropType<any>,\n    default: undefined\n  },\n  ui: {\n    type: Object as PropType<Partial<typeof config>>,\n    default: () => ({})\n  }\n},\n  setup(__props) {\n\nconst config = {\n  wrapper: 'space-y-3'\n}\n\n\n\nconst props = __props\n\nconst { ui, attrs } = useUI('navigation.tree', toRef(props, 'ui'), config, toRef(props, 'class'), true)\n\nconst groups = computed<NavigationGroup[]>(() => {\n  const groups: NavigationGroup[] = []\n\n  let group: NavigationGroup = { type: undefined, children: [] }\n\n  for (const link of props.links) {\n    const type = link.children?.length ? 'accordion' : 'link'\n    if (!group.type) {\n      group.type = type\n    }\n\n    if (group.type === type) {\n      group.children.push(link)\n    } else {\n      groups.push(group)\n      group = { type, children: [link] }\n    }\n  }\n\n  if (group.children.length) {\n    groups.push(group)\n  }\n\n  return groups\n})\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_UNavigationAccordion = _resolveComponent(\"UNavigationAccordion\")!\n  const _component_UNavigationLinks = _resolveComponent(\"UNavigationLinks\")!\n\n  return (_unref(groups)?.length)\n    ? (_openBlock(), _createElementBlock(\"nav\", _mergeProps({\n        key: 0,\n        class: _unref(ui).wrapper\n      }, _unref(attrs)), [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(groups), (group, index) => {\n          return (_openBlock(), _createElementBlock(_Fragment, { key: index }, [\n            (group.type === 'accordion')\n              ? (_openBlock(), _createBlock(_component_UNavigationAccordion, {\n                  key: 0,\n                  links: group.children,\n                  level: __props.level,\n                  multiple: __props.multiple,\n                  \"default-open\": __props.defaultOpen\n                }, null, 8, [\"links\", \"level\", \"multiple\", \"default-open\"]))\n              : (_openBlock(), _createBlock(_component_UNavigationLinks, {\n                  key: 1,\n                  links: group.children,\n                  level: __props.level\n                }, null, 8, [\"links\", \"level\"]))\n          ], 64))\n        }), 128))\n      ], 16))\n    : _createCommentVNode(\"\", true)\n}\n}\n\n})",
      "start": 1714172179774,
      "end": 1714172179774
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1714172179774,
      "end": 1714172179774,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1714172179774,
      "end": 1714172179774,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1714172179774,
      "end": 1714172179774,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1714172179774,
      "end": 1714172179774,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1714172179774,
      "end": 1714172179774,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode, mergeProps as _mergeProps } from \"vue\";\nexport default /* @__PURE__ */ _defineComponent({\n  ...{\n    inheritAttrs: false\n  },\n  __name: \"NavigationTree\",\n  props: {\n    level: {\n      type: Number,\n      default: 0\n    },\n    links: {\n      type: Array,\n      default: () => []\n    },\n    multiple: {\n      type: Boolean,\n      default: true\n    },\n    defaultOpen: {\n      type: [Boolean, Number],\n      default: void 0\n    },\n    class: {\n      type: [String, Object, Array],\n      default: void 0\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(__props) {\n    const config = {\n      wrapper: \"space-y-3\"\n    };\n    const props = __props;\n    const { ui, attrs } = useUI(\"navigation.tree\", toRef(props, \"ui\"), config, toRef(props, \"class\"), true);\n    const groups = computed(() => {\n      const groups2 = [];\n      let group = { type: void 0, children: [] };\n      for (const link of props.links) {\n        const type = link.children?.length ? \"accordion\" : \"link\";\n        if (!group.type) {\n          group.type = type;\n        }\n        if (group.type === type) {\n          group.children.push(link);\n        } else {\n          groups2.push(group);\n          group = { type, children: [link] };\n        }\n      }\n      if (group.children.length) {\n        groups2.push(group);\n      }\n      return groups2;\n    });\n    return (_ctx, _cache) => {\n      const _component_UNavigationAccordion = _resolveComponent(\"UNavigationAccordion\");\n      const _component_UNavigationLinks = _resolveComponent(\"UNavigationLinks\");\n      return _unref(groups)?.length ? (_openBlock(), _createElementBlock(\"nav\", _mergeProps({\n        key: 0,\n        class: _unref(ui).wrapper\n      }, _unref(attrs)), [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(groups), (group, index) => {\n          return _openBlock(), _createElementBlock(_Fragment, { key: index }, [\n            group.type === \"accordion\" ? (_openBlock(), _createBlock(_component_UNavigationAccordion, {\n              key: 0,\n              links: group.children,\n              level: __props.level,\n              multiple: __props.multiple,\n              \"default-open\": __props.defaultOpen\n            }, null, 8, [\"links\", \"level\", \"multiple\", \"default-open\"])) : (_openBlock(), _createBlock(_component_UNavigationLinks, {\n              key: 1,\n              links: group.children,\n              level: __props.level\n            }, null, 8, [\"links\", \"level\"]))\n          ], 64);\n        }), 128))\n      ], 16)) : _createCommentVNode(\"\", true);\n    };\n  }\n});\n",
      "start": 1714172179774,
      "end": 1714172179970,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/rezajafar/peakofeloquence-app/node_modules/@nuxt/ui-pro/components/navigation/NavigationTree.vue?vue&type=script&setup=true&lang.ts"
        ],
        "sourcesContent": [
          "import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode, mergeProps as _mergeProps } from \"vue\"\n\nimport type { PropType } from 'vue'\nimport type { NavigationGroup, NavigationTree } from '#ui-pro/types'\n\n\nexport default /*#__PURE__*/_defineComponent({\n  ...{\n  inheritAttrs: false\n},\n  __name: 'NavigationTree',\n  props: {\n  level: {\n    type: Number,\n    default: 0\n  },\n  links: {\n    type: Array as PropType<NavigationTree[]>,\n    default: () => []\n  },\n  multiple: {\n    type: Boolean,\n    default: true\n  },\n  defaultOpen: {\n    type: [Boolean, Number],\n    default: undefined\n  },\n  class: {\n    type: [String, Object, Array] as PropType<any>,\n    default: undefined\n  },\n  ui: {\n    type: Object as PropType<Partial<typeof config>>,\n    default: () => ({})\n  }\n},\n  setup(__props) {\n\nconst config = {\n  wrapper: 'space-y-3'\n}\n\n\n\nconst props = __props\n\nconst { ui, attrs } = useUI('navigation.tree', toRef(props, 'ui'), config, toRef(props, 'class'), true)\n\nconst groups = computed<NavigationGroup[]>(() => {\n  const groups: NavigationGroup[] = []\n\n  let group: NavigationGroup = { type: undefined, children: [] }\n\n  for (const link of props.links) {\n    const type = link.children?.length ? 'accordion' : 'link'\n    if (!group.type) {\n      group.type = type\n    }\n\n    if (group.type === type) {\n      group.children.push(link)\n    } else {\n      groups.push(group)\n      group = { type, children: [link] }\n    }\n  }\n\n  if (group.children.length) {\n    groups.push(group)\n  }\n\n  return groups\n})\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_UNavigationAccordion = _resolveComponent(\"UNavigationAccordion\")!\n  const _component_UNavigationLinks = _resolveComponent(\"UNavigationLinks\")!\n\n  return (_unref(groups)?.length)\n    ? (_openBlock(), _createElementBlock(\"nav\", _mergeProps({\n        key: 0,\n        class: _unref(ui).wrapper\n      }, _unref(attrs)), [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(groups), (group, index) => {\n          return (_openBlock(), _createElementBlock(_Fragment, { key: index }, [\n            (group.type === 'accordion')\n              ? (_openBlock(), _createBlock(_component_UNavigationAccordion, {\n                  key: 0,\n                  links: group.children,\n                  level: __props.level,\n                  multiple: __props.multiple,\n                  \"default-open\": __props.defaultOpen\n                }, null, 8, [\"links\", \"level\", \"multiple\", \"default-open\"]))\n              : (_openBlock(), _createBlock(_component_UNavigationLinks, {\n                  key: 1,\n                  links: group.children,\n                  level: __props.level\n                }, null, 8, [\"links\", \"level\"]))\n          ], 64))\n        }), 128))\n      ], 16))\n    : _createCommentVNode(\"\", true)\n}\n}\n\n})"
        ],
        "mappings": "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",
        "names": [
          "groups"
        ]
      }
    },
    {
      "name": "vite:json",
      "start": 1714172179970,
      "end": 1714172179970,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714172179971,
      "end": 1714172179971,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1714172179971,
      "end": 1714172179971,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714172179971,
      "end": 1714172179971,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1714172179971,
      "end": 1714172179971,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1714172179971,
      "end": 1714172179971,
      "order": "normal"
    },
    {
      "name": "nuxt:fonts:font-family-injection",
      "start": 1714172179971,
      "end": 1714172179971,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1714172179971,
      "end": 1714172179971,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1714172179971,
      "end": 1714172179971,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1714172179971,
      "end": 1714172179971,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1714172179971,
      "end": 1714172179971,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1714172179971,
      "end": 1714172179971,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1714172179971,
      "end": 1714172179971,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714172179971,
      "end": 1714172179971,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714172179971,
      "end": 1714172179971,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714172179971,
      "end": 1714172179971,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714172179971,
      "end": 1714172179971,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714172179971,
      "end": 1714172179971,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714172179971,
      "end": 1714172179971,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1714172179971,
      "end": 1714172179971,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { useUI } from '/Users/rezajafar/peakofeloquence-app/node_modules/@nuxt/ui/dist/runtime/composables/useUI.mjs';\nimport { toRef, computed } from 'vue';\nimport { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode, mergeProps as _mergeProps } from \"vue\";\nexport default /* @__PURE__ */ _defineComponent({\n  ...{\n    inheritAttrs: false\n  },\n  __name: \"NavigationTree\",\n  props: {\n    level: {\n      type: Number,\n      default: 0\n    },\n    links: {\n      type: Array,\n      default: () => []\n    },\n    multiple: {\n      type: Boolean,\n      default: true\n    },\n    defaultOpen: {\n      type: [Boolean, Number],\n      default: void 0\n    },\n    class: {\n      type: [String, Object, Array],\n      default: void 0\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(__props) {\n    const config = {\n      wrapper: \"space-y-3\"\n    };\n    const props = __props;\n    const { ui, attrs } = useUI(\"navigation.tree\", toRef(props, \"ui\"), config, toRef(props, \"class\"), true);\n    const groups = computed(() => {\n      const groups2 = [];\n      let group = { type: void 0, children: [] };\n      for (const link of props.links) {\n        const type = link.children?.length ? \"accordion\" : \"link\";\n        if (!group.type) {\n          group.type = type;\n        }\n        if (group.type === type) {\n          group.children.push(link);\n        } else {\n          groups2.push(group);\n          group = { type, children: [link] };\n        }\n      }\n      if (group.children.length) {\n        groups2.push(group);\n      }\n      return groups2;\n    });\n    return (_ctx, _cache) => {\n      const _component_UNavigationAccordion = _resolveComponent(\"UNavigationAccordion\");\n      const _component_UNavigationLinks = _resolveComponent(\"UNavigationLinks\");\n      return _unref(groups)?.length ? (_openBlock(), _createElementBlock(\"nav\", _mergeProps({\n        key: 0,\n        class: _unref(ui).wrapper\n      }, _unref(attrs)), [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(groups), (group, index) => {\n          return _openBlock(), _createElementBlock(_Fragment, { key: index }, [\n            group.type === \"accordion\" ? (_openBlock(), _createBlock(_component_UNavigationAccordion, {\n              key: 0,\n              links: group.children,\n              level: __props.level,\n              multiple: __props.multiple,\n              \"default-open\": __props.defaultOpen\n            }, null, 8, [\"links\", \"level\", \"multiple\", \"default-open\"])) : (_openBlock(), _createBlock(_component_UNavigationLinks, {\n              key: 1,\n              links: group.children,\n              level: __props.level\n            }, null, 8, [\"links\", \"level\"]))\n          ], 64);\n        }), 128))\n      ], 16)) : _createCommentVNode(\"\", true);\n    };\n  }\n});\n",
      "start": 1714172179971,
      "end": 1714172179972,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "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AC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACllC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrxF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjvG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjrI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1714172179972,
      "end": 1714172179972,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1714172179972,
      "end": 1714172179972,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1714172179972,
      "end": 1714172179972,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1714172179972,
      "end": 1714172179973,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "result": "import { default as __nuxt_component_0 } from \"/Users/rezajafar/peakofeloquence-app/node_modules/@nuxt/ui-pro/components/navigation/NavigationAccordion.vue\";\nimport { default as __nuxt_component_1 } from \"/Users/rezajafar/peakofeloquence-app/node_modules/@nuxt/ui-pro/components/navigation/NavigationLinks.vue\";\nimport { useUI } from '/Users/rezajafar/peakofeloquence-app/node_modules/@nuxt/ui/dist/runtime/composables/useUI.mjs';\nimport { toRef, computed } from 'vue';\nimport { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode, mergeProps as _mergeProps } from \"vue\";\nexport default /* @__PURE__ */ _defineComponent({\n  ...{\n    inheritAttrs: false\n  },\n  __name: \"NavigationTree\",\n  props: {\n    level: {\n      type: Number,\n      default: 0\n    },\n    links: {\n      type: Array,\n      default: () => []\n    },\n    multiple: {\n      type: Boolean,\n      default: true\n    },\n    defaultOpen: {\n      type: [Boolean, Number],\n      default: void 0\n    },\n    class: {\n      type: [String, Object, Array],\n      default: void 0\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(__props) {\n    const config = {\n      wrapper: \"space-y-3\"\n    };\n    const props = __props;\n    const { ui, attrs } = useUI(\"navigation.tree\", toRef(props, \"ui\"), config, toRef(props, \"class\"), true);\n    const groups = computed(() => {\n      const groups2 = [];\n      let group = { type: void 0, children: [] };\n      for (const link of props.links) {\n        const type = link.children?.length ? \"accordion\" : \"link\";\n        if (!group.type) {\n          group.type = type;\n        }\n        if (group.type === type) {\n          group.children.push(link);\n        } else {\n          groups2.push(group);\n          group = { type, children: [link] };\n        }\n      }\n      if (group.children.length) {\n        groups2.push(group);\n      }\n      return groups2;\n    });\n    return (_ctx, _cache) => {\n      const _component_UNavigationAccordion = __nuxt_component_0;\n      const _component_UNavigationLinks = __nuxt_component_1;\n      return _unref(groups)?.length ? (_openBlock(), _createElementBlock(\"nav\", _mergeProps({\n        key: 0,\n        class: _unref(ui).wrapper\n      }, _unref(attrs)), [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(groups), (group, index) => {\n          return _openBlock(), _createElementBlock(_Fragment, { key: index }, [\n            group.type === \"accordion\" ? (_openBlock(), _createBlock(_component_UNavigationAccordion, {\n              key: 0,\n              links: group.children,\n              level: __props.level,\n              multiple: __props.multiple,\n              \"default-open\": __props.defaultOpen\n            }, null, 8, [\"links\", \"level\", \"multiple\", \"default-open\"])) : (_openBlock(), _createBlock(_component_UNavigationLinks, {\n              key: 1,\n              links: group.children,\n              level: __props.level\n            }, null, 8, [\"links\", \"level\"]))\n          ], 64);\n        }), 128))\n      ], 16)) : _createCommentVNode(\"\", true);\n    };\n  }\n});\n",
      "start": 1714172179973,
      "end": 1714172179973,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1714172179973,
      "end": 1714172179973,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714172179973,
      "end": 1714172179973,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714172179973,
      "end": 1714172179973,
      "order": "normal"
    }
  ]
}
