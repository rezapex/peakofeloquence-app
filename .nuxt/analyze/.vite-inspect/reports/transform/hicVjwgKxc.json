{
  "resolvedId": "/Users/rezajafar/peakofeloquence-site/node_modules/@nuxtjs/mdc/dist/runtime/highlighter/rehype-nuxt.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { rehypeHighlight as rehypeHighlightUniversal } from \"./rehype.mjs\";\nconst defaults = {\n  theme: {},\n  async highlighter(code, lang, theme, options) {\n    try {\n      if (process.browser && window.sessionStorage.getItem(\"mdc-shiki-highlighter\") === \"browser\") {\n        return import(\"#mdc-highlighter\").then((h) => h.default(code, lang, theme, options)).catch(() => ({}));\n      }\n      return await $fetch(\"/api/_mdc/highlight\", {\n        params: {\n          code,\n          lang,\n          theme: JSON.stringify(theme),\n          options: JSON.stringify(options)\n        }\n      });\n    } catch (e) {\n      if (process.browser && e?.response?.status === 404) {\n        window.sessionStorage.setItem(\"mdc-shiki-highlighter\", \"browser\");\n        return this.highlighter?.(code, lang, theme, options);\n      }\n    }\n    return Promise.resolve({ tree: [{ type: \"text\", value: code }], className: \"\", style: \"\" });\n  }\n};\nexport default rehypeHighlight;\nexport function rehypeHighlight(opts = {}) {\n  const options = { ...defaults, ...opts };\n  if (typeof options.highlighter !== \"function\") {\n    options.highlighter = defaults.highlighter;\n  }\n  return rehypeHighlightUniversal(options);\n}\n",
      "start": 1712268127427,
      "end": 1712268127447,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1712268127447,
      "end": 1712268127447,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1712268127447,
      "end": 1712268127447,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1712268127447,
      "end": 1712268127447,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1712268127447,
      "end": 1712268127447,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1712268127447,
      "end": 1712268127447,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1712268127447,
      "end": 1712268127447,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1712268127447,
      "end": 1712268127447,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1712268127447,
      "end": 1712268127447,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1712268127447,
      "end": 1712268127447,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1712268127447,
      "end": 1712268127447,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712268127447,
      "end": 1712268127447,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1712268127447,
      "end": 1712268127447,
      "order": "normal"
    },
    {
      "name": "nuxt:fonts:font-family-injection",
      "start": 1712268127447,
      "end": 1712268127447,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1712268127447,
      "end": 1712268127447,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1712268127447,
      "end": 1712268127447,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712268127447,
      "end": 1712268127447,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1712268127447,
      "end": 1712268127447,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { rehypeHighlight as rehypeHighlightUniversal } from \"./rehype.mjs\";\nconst defaults = {\n  theme: {},\n  async highlighter(code, lang, theme, options) {\n    try {\n      if (window.sessionStorage.getItem(\"mdc-shiki-highlighter\") === \"browser\") {\n        return import(\"#mdc-highlighter\").then((h) => h.default(code, lang, theme, options)).catch(() => ({}));\n      }\n      return await $fetch(\"/api/_mdc/highlight\", {\n        params: {\n          code,\n          lang,\n          theme: JSON.stringify(theme),\n          options: JSON.stringify(options)\n        }\n      });\n    } catch (e) {\n      if (e?.response?.status === 404) {\n        window.sessionStorage.setItem(\"mdc-shiki-highlighter\", \"browser\");\n        return this.highlighter?.(code, lang, theme, options);\n      }\n    }\n    return Promise.resolve({ tree: [{ type: \"text\", value: code }], className: \"\", style: \"\" });\n  }\n};\nexport default rehypeHighlight;\nexport function rehypeHighlight(opts = {}) {\n  const options = { ...defaults, ...opts };\n  if (typeof options.highlighter !== \"function\") {\n    options.highlighter = defaults.highlighter;\n  }\n  return rehypeHighlightUniversal(options);\n}\n",
      "start": 1712268127447,
      "end": 1712268127485,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:css-post",
      "start": 1712268127519,
      "end": 1712268127519,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1712268127519,
      "end": 1712268127519,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1712268127519,
      "end": 1712268127519,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1712268127520,
      "end": 1712268127520,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1712268127520,
      "end": 1712268127520,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1712268127520,
      "end": 1712268127520,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1712268127520,
      "end": 1712268127520,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1712268127520,
      "end": 1712268127520,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1712268127520,
      "end": 1712268127520,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1712268127520,
      "end": 1712268127520,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1712268127520,
      "end": 1712268127520,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1712268127520,
      "end": 1712268127520,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1712268127520,
      "end": 1712268127520,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1712268127520,
      "end": 1712268127520,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1712268127520,
      "end": 1712268127520,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "result": "import { __vitePreload } from \"\u0000vite/preload-helper.js\";import { rehypeHighlight as rehypeHighlightUniversal } from \"./rehype.mjs\";\nconst defaults = {\n  theme: {},\n  async highlighter(code, lang, theme, options) {\n    try {\n      if (window.sessionStorage.getItem(\"mdc-shiki-highlighter\") === \"browser\") {\n        return __vitePreload(() => import(\"#mdc-highlighter\"),__VITE_IS_MODERN__?\"__VITE_PRELOAD__\":void 0,import.meta.url).then((h) => h.default(code, lang, theme, options)).catch(() => ({}));\n      }\n      return await $fetch(\"/api/_mdc/highlight\", {\n        params: {\n          code,\n          lang,\n          theme: JSON.stringify(theme),\n          options: JSON.stringify(options)\n        }\n      });\n    } catch (e) {\n      if (e?.response?.status === 404) {\n        window.sessionStorage.setItem(\"mdc-shiki-highlighter\", \"browser\");\n        return this.highlighter?.(code, lang, theme, options);\n      }\n    }\n    return Promise.resolve({ tree: [{ type: \"text\", value: code }], className: \"\", style: \"\" });\n  }\n};\nexport default rehypeHighlight;\nexport function rehypeHighlight(opts = {}) {\n  const options = { ...defaults, ...opts };\n  if (typeof options.highlighter !== \"function\") {\n    options.highlighter = defaults.highlighter;\n  }\n  return rehypeHighlightUniversal(options);\n}\n",
      "start": 1712268127520,
      "end": 1712268127520,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:reporter",
      "start": 1712268127520,
      "end": 1712268127520,
      "order": "normal"
    }
  ]
}
