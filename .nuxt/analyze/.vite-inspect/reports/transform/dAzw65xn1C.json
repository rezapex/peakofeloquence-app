{
  "resolvedId": "/Users/rezajafar/peakofeloquence-site/node_modules/micromark-factory-label/index.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse labels.\n *\n * > ðŸ‘‰ **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (\n      size > 999 ||\n      code === null ||\n      code === 91 ||\n      (code === 93 && !seen) ||\n      // To do: remove in the future once weâ€™ve switched from\n      // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n      // which doesnâ€™t need this.\n      // Hidden footnotes hook.\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return labelInside(code)\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    if (!seen) seen = !markdownSpace(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n}\n",
      "start": 1712268127705,
      "end": 1712268127715,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "normal"
    },
    {
      "name": "nuxt:fonts:font-family-injection",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1712268127715,
      "end": 1712268127715,
      "order": "normal"
    }
  ]
}
