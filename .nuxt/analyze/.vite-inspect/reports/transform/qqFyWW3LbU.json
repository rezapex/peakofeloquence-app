{
  "resolvedId": "/Users/rezajafar/peakofeloquence-site/node_modules/micromark-factory-space/index.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n    effects.exit(type)\n    return ok(code)\n  }\n}\n",
      "start": 1712268127444,
      "end": 1712268127461,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1712268127461,
      "end": 1712268127461,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1712268127461,
      "end": 1712268127461,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1712268127461,
      "end": 1712268127461,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1712268127461,
      "end": 1712268127461,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1712268127461,
      "end": 1712268127461,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1712268127461,
      "end": 1712268127461,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1712268127461,
      "end": 1712268127461,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1712268127461,
      "end": 1712268127461,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1712268127461,
      "end": 1712268127461,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1712268127461,
      "end": 1712268127461,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712268127461,
      "end": 1712268127461,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1712268127461,
      "end": 1712268127461,
      "order": "normal"
    },
    {
      "name": "nuxt:fonts:font-family-injection",
      "start": 1712268127461,
      "end": 1712268127461,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1712268127461,
      "end": 1712268127461,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1712268127461,
      "end": 1712268127461,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712268127461,
      "end": 1712268127461,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1712268127461,
      "end": 1712268127461,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1712268127461,
      "end": 1712268127461,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1712268127461,
      "end": 1712268127461,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1712268127461,
      "end": 1712268127461,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1712268127461,
      "end": 1712268127461,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1712268127461,
      "end": 1712268127461,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1712268127461,
      "end": 1712268127462,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1712268127462,
      "end": 1712268127462,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1712268127462,
      "end": 1712268127462,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1712268127462,
      "end": 1712268127462,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1712268127462,
      "end": 1712268127462,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1712268127462,
      "end": 1712268127462,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1712268127462,
      "end": 1712268127462,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1712268127462,
      "end": 1712268127462,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1712268127462,
      "end": 1712268127462,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1712268127462,
      "end": 1712268127462,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1712268127462,
      "end": 1712268127462,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1712268127462,
      "end": 1712268127462,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1712268127462,
      "end": 1712268127462,
      "order": "normal"
    }
  ]
}
