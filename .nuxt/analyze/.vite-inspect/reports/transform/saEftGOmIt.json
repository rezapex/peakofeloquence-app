{
  "resolvedId": "/Users/rezajafar/peakofeloquence-app/node_modules/nuxt-site-config/dist/runtime/composables/useSiteConfig.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import {\n  toValue,\n  useNuxtApp,\n  useRequestEvent\n} from \"#imports\";\nexport function useSiteConfig(options) {\n  let stack;\n  if (process.server)\n    stack = useRequestEvent().context.siteConfig.get(options);\n  else\n    stack = useNuxtApp().$nuxtSiteConfig.get(options);\n  Object.entries(stack).forEach(([k, v]) => {\n    stack[k] = toValue(v);\n  });\n  return stack;\n}\n",
      "start": 1714175002626,
      "end": 1714175002643,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1714175002643,
      "end": 1714175002643,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1714175002643,
      "end": 1714175002643,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1714175002643,
      "end": 1714175002643,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1714175002643,
      "end": 1714175002643,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1714175002643,
      "end": 1714175002643,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1714175002643,
      "end": 1714175002643,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1714175002643,
      "end": 1714175002643,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714175002643,
      "end": 1714175002643,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1714175002643,
      "end": 1714175002643,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714175002643,
      "end": 1714175002643,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1714175002643,
      "end": 1714175002643,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1714175002643,
      "end": 1714175002643,
      "order": "normal"
    },
    {
      "name": "nuxt:fonts:font-family-injection",
      "start": 1714175002643,
      "end": 1714175002643,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1714175002643,
      "end": 1714175002643,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1714175002643,
      "end": 1714175002643,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1714175002643,
      "end": 1714175002643,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1714175002643,
      "end": 1714175002643,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import {\n  toValue,\n  useNuxtApp,\n  useRequestEvent\n} from \"#imports\";\nexport function useSiteConfig(options) {\n  let stack;\n  if (false)\n    stack = useRequestEvent().context.siteConfig.get(options);\n  else\n    stack = useNuxtApp().$nuxtSiteConfig.get(options);\n  Object.entries(stack).forEach(([k, v]) => {\n    stack[k] = toValue(v);\n  });\n  return stack;\n}\n",
      "start": 1714175002643,
      "end": 1714175002859,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:css-post",
      "start": 1714175002859,
      "end": 1714175002859,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714175002859,
      "end": 1714175002859,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714175002859,
      "end": 1714175002860,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714175002860,
      "end": 1714175002860,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714175002860,
      "end": 1714175002860,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714175002860,
      "end": 1714175002860,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714175002860,
      "end": 1714175002860,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1714175002860,
      "end": 1714175002860,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { toValue } from 'vue';\nimport { useNuxtApp } from '#app/nuxt';\nimport { useRequestEvent } from '#app/composables/ssr';\nexport function useSiteConfig(options) {\n  let stack;\n  if (false)\n    stack = useRequestEvent().context.siteConfig.get(options);\n  else\n    stack = useNuxtApp().$nuxtSiteConfig.get(options);\n  Object.entries(stack).forEach(([k, v]) => {\n    stack[k] = toValue(v);\n  });\n  return stack;\n}\n",
      "start": 1714175002860,
      "end": 1714175002860,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;AAKA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1714175002860,
      "end": 1714175002860,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1714175002860,
      "end": 1714175002860,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1714175002860,
      "end": 1714175002860,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1714175002860,
      "end": 1714175002860,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1714175002860,
      "end": 1714175002860,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1714175002860,
      "end": 1714175002860,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714175002860,
      "end": 1714175002860,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714175002861,
      "end": 1714175002861,
      "order": "normal"
    }
  ]
}
