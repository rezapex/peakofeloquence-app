{
  "resolvedId": "/Users/rezajafar/peakofeloquence-site/node_modules/micromark-core-commonmark/lib/character-reference.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n  let max\n  /** @type {(code: Code) => boolean} */\n  let test\n  return start\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit('characterReferenceValue')\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n    return nok(code)\n  }\n}\n",
      "start": 1712268127561,
      "end": 1712268127587,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1712268127587,
      "end": 1712268127587,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1712268127587,
      "end": 1712268127587,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1712268127587,
      "end": 1712268127587,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1712268127587,
      "end": 1712268127587,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1712268127587,
      "end": 1712268127587,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1712268127587,
      "end": 1712268127587,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1712268127587,
      "end": 1712268127587,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1712268127587,
      "end": 1712268127587,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1712268127587,
      "end": 1712268127587,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1712268127587,
      "end": 1712268127587,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712268127587,
      "end": 1712268127587,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1712268127587,
      "end": 1712268127587,
      "order": "normal"
    },
    {
      "name": "nuxt:fonts:font-family-injection",
      "start": 1712268127587,
      "end": 1712268127587,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1712268127587,
      "end": 1712268127587,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1712268127587,
      "end": 1712268127587,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712268127587,
      "end": 1712268127587,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1712268127587,
      "end": 1712268127587,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1712268127587,
      "end": 1712268127587,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1712268127587,
      "end": 1712268127587,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1712268127587,
      "end": 1712268127587,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1712268127587,
      "end": 1712268127587,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1712268127587,
      "end": 1712268127587,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1712268127587,
      "end": 1712268127587,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1712268127587,
      "end": 1712268127587,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1712268127587,
      "end": 1712268127587,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1712268127587,
      "end": 1712268127587,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1712268127587,
      "end": 1712268127587,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1712268127587,
      "end": 1712268127587,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1712268127587,
      "end": 1712268127587,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1712268127587,
      "end": 1712268127587,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1712268127587,
      "end": 1712268127587,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1712268127587,
      "end": 1712268127587,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1712268127587,
      "end": 1712268127587,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1712268127587,
      "end": 1712268127587,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1712268127587,
      "end": 1712268127587,
      "order": "normal"
    }
  ]
}
