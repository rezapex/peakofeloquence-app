{
  "resolvedId": "/Users/rezajafar/peakofeloquence-site/node_modules/mdast-util-to-hast/lib/handlers/table-row.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  // To do: option to use `style`?\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(cell, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n",
      "start": 1712268127670,
      "end": 1712268127677,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1712268127677,
      "end": 1712268127677,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1712268127677,
      "end": 1712268127677,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1712268127677,
      "end": 1712268127677,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1712268127677,
      "end": 1712268127677,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1712268127677,
      "end": 1712268127677,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1712268127677,
      "end": 1712268127677,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1712268127677,
      "end": 1712268127677,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1712268127677,
      "end": 1712268127677,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1712268127677,
      "end": 1712268127677,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1712268127677,
      "end": 1712268127677,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712268127677,
      "end": 1712268127677,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1712268127677,
      "end": 1712268127677,
      "order": "normal"
    },
    {
      "name": "nuxt:fonts:font-family-injection",
      "start": 1712268127677,
      "end": 1712268127677,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1712268127677,
      "end": 1712268127677,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1712268127677,
      "end": 1712268127677,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712268127677,
      "end": 1712268127677,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1712268127677,
      "end": 1712268127677,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1712268127677,
      "end": 1712268127677,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1712268127677,
      "end": 1712268127677,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1712268127677,
      "end": 1712268127677,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1712268127677,
      "end": 1712268127677,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1712268127677,
      "end": 1712268127677,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1712268127677,
      "end": 1712268127677,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1712268127677,
      "end": 1712268127677,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1712268127677,
      "end": 1712268127677,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1712268127677,
      "end": 1712268127677,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1712268127677,
      "end": 1712268127677,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1712268127677,
      "end": 1712268127677,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1712268127677,
      "end": 1712268127677,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1712268127677,
      "end": 1712268127677,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1712268127677,
      "end": 1712268127677,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1712268127677,
      "end": 1712268127677,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1712268127677,
      "end": 1712268127677,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1712268127677,
      "end": 1712268127677,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1712268127677,
      "end": 1712268127677,
      "order": "normal"
    }
  ]
}
