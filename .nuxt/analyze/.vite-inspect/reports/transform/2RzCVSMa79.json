{
  "resolvedId": "/Users/rezajafar/peakofeloquence-site/node_modules/mdast-util-to-hast/lib/handlers/list-item.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === null || spread === undefined\n    ? node.children.length > 1\n    : spread\n}\n",
      "start": 1712268127648,
      "end": 1712268127674,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1712268127674,
      "end": 1712268127674,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1712268127674,
      "end": 1712268127674,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1712268127674,
      "end": 1712268127674,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1712268127674,
      "end": 1712268127674,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1712268127674,
      "end": 1712268127674,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1712268127674,
      "end": 1712268127674,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1712268127674,
      "end": 1712268127674,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1712268127674,
      "end": 1712268127674,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1712268127674,
      "end": 1712268127674,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1712268127674,
      "end": 1712268127674,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712268127674,
      "end": 1712268127674,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1712268127674,
      "end": 1712268127674,
      "order": "normal"
    },
    {
      "name": "nuxt:fonts:font-family-injection",
      "start": 1712268127674,
      "end": 1712268127674,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1712268127674,
      "end": 1712268127674,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1712268127674,
      "end": 1712268127674,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712268127674,
      "end": 1712268127674,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1712268127674,
      "end": 1712268127674,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1712268127674,
      "end": 1712268127674,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1712268127674,
      "end": 1712268127674,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1712268127674,
      "end": 1712268127674,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1712268127674,
      "end": 1712268127674,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1712268127674,
      "end": 1712268127674,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1712268127674,
      "end": 1712268127674,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1712268127674,
      "end": 1712268127674,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1712268127674,
      "end": 1712268127674,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1712268127674,
      "end": 1712268127674,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1712268127674,
      "end": 1712268127674,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1712268127674,
      "end": 1712268127674,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1712268127674,
      "end": 1712268127674,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1712268127674,
      "end": 1712268127674,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1712268127674,
      "end": 1712268127674,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1712268127674,
      "end": 1712268127674,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1712268127674,
      "end": 1712268127674,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1712268127674,
      "end": 1712268127674,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1712268127674,
      "end": 1712268127674,
      "order": "normal"
    }
  ]
}
