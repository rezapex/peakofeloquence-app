{
  "resolvedId": "/Users/rezajafar/peakofeloquence-app/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Card.vue?nuxt_component=async&nuxt_component_name=Card&nuxt_component_export=default",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n  <UCard :class=\"[ui.wrapper, to && ui.to]\" v-bind=\"attrs\" :ui=\"ui\" :style=\"{ '--color-light': colorLight, '--color-dark': colorDark }\">\n    <NuxtLink v-if=\"to\" :to=\"to\" :target=\"target\" class=\"focus:outline-none\" tabindex=\"-1\">\n      <span class=\"absolute inset-0\" aria-hidden=\"true\" />\n    </NuxtLink>\n\n    <UIcon v-if=\"icon\" :name=\"icon\" :class=\"ui.icon.base\" />\n\n    <UIcon v-if=\"!!to && target === '_blank'\" :name=\"ui.externalIcon.name\" :class=\"ui.externalIcon.base\" />\n\n    <p :class=\"ui.title\">\n      {{ title }}\n    </p>\n\n    <p v-if=\"$slots.default\" :class=\"ui.description\">\n      <ContentSlot unwrap=\"p\" :use=\"$slots.default\" />\n    </p>\n  </UCard>\n</template>\n\n<script setup lang=\"ts\">\nimport type { PropType } from 'vue'\nimport colors from '#tailwind-config/theme/colors'\nimport uiColors from '#ui-colors'\n\nconst appConfig = useAppConfig()\n\nconst config = computed(() => ({\n  wrapper: 'relative group overflow-hidden flex items-center rounded-lg',\n  to: 'hover:ring-1 hover:ring-[--color-light] dark:hover:ring-[--color-dark] hover:bg-gray-100/50 dark:hover:bg-gray-800/50',\n  icon: {\n    base: 'w-6 h-6 mb-4 inline-flex items-center text-[--color-light] dark:text-[--color-dark] pointer-events-none'\n  },\n  body: {\n    base: 'flex-1'\n  },\n  externalIcon: {\n    name: appConfig.ui.icons.external,\n    base: 'w-4 h-4 absolute right-2 top-2 text-gray-400 dark:text-gray-500 group-hover:text-[--color-light] dark:group-hover:text-[--color-dark]'\n  },\n  title: 'text-gray-900 dark:text-white font-semibold text-base my-0',\n  description: 'text-[15px] text-gray-500 dark:text-gray-400 mt-1 mb-0'\n}))\n\ndefineOptions({\n  inheritAttrs: false\n})\n\nconst props = defineProps({\n  icon: {\n    type: String,\n    default: undefined\n  },\n  color: {\n    type: String as PropType<typeof uiColors[number]>,\n    default: 'primary'\n  },\n  to: {\n    type: String,\n    default: undefined\n  },\n  target: {\n    type: String,\n    default: undefined\n  },\n  title: {\n    type: String,\n    default: undefined\n  },\n  class: {\n    type: [String, Object, Array] as PropType<any>,\n    default: undefined\n  },\n  ui: {\n    type: Object as PropType<Partial<typeof config.value>>,\n    default: () => ({})\n  }\n})\n\nconst { ui, attrs } = useUI('content.card', toRef(props, 'ui'), config, toRef(props, 'class'), true)\n\nconst colorLight = computed(() => {\n  if (props.color === 'primary') {\n    return 'rgb(var(--color-primary-DEFAULT))'\n  }\n  // @ts-ignore\n  return colors[props.color]?.['500'] || colors[props.color] || props.color\n})\nconst colorDark = computed(() => {\n  if (props.color === 'primary') {\n    return 'rgb(var(--color-primary-DEFAULT))'\n  }\n  // @ts-ignore\n  return colors[props.color]?.['400'] || colors[props.color] || props.color\n})\n\nconst target = computed(() => props.target || (props.to && props.to.startsWith('http') ? '_blank' : undefined))\n</script>\n",
      "start": 1714172173181,
      "end": 1714172176319,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1714172176319,
      "end": 1714172176319,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1714172176319,
      "end": 1714172176319,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "result": "<template>\n  <UCard :class=\"[ui.wrapper, to && ui.to]\" v-bind=\"attrs\" :ui=\"ui\" :style=\"{ '--color-light': colorLight, '--color-dark': colorDark }\">\n    <NuxtLink v-if=\"to\" :to=\"to\" :target=\"target\" class=\"focus:outline-none\" tabindex=\"-1\">\n      <span class=\"absolute inset-0\" aria-hidden=\"true\" />\n    </NuxtLink>\n\n    <UIcon v-if=\"icon\" :name=\"icon\" :class=\"ui.icon.base\" />\n\n    <UIcon v-if=\"!!to && target === '_blank'\" :name=\"ui.externalIcon.name\" :class=\"ui.externalIcon.base\" />\n\n    <p :class=\"ui.title\">\n      {{ title }}\n    </p>\n\n    <p v-if=\"$slots.default\" :class=\"ui.description\">\n      <MDCSlot unwrap=\"p\" name=\"default\" />\n    </p>\n  </UCard>\n</template>\n\n<script setup lang=\"ts\">\nimport type { PropType } from 'vue'\nimport colors from '#tailwind-config/theme/colors'\nimport uiColors from '#ui-colors'\n\nconst appConfig = useAppConfig()\n\nconst config = computed(() => ({\n  wrapper: 'relative group overflow-hidden flex items-center rounded-lg',\n  to: 'hover:ring-1 hover:ring-[--color-light] dark:hover:ring-[--color-dark] hover:bg-gray-100/50 dark:hover:bg-gray-800/50',\n  icon: {\n    base: 'w-6 h-6 mb-4 inline-flex items-center text-[--color-light] dark:text-[--color-dark] pointer-events-none'\n  },\n  body: {\n    base: 'flex-1'\n  },\n  externalIcon: {\n    name: appConfig.ui.icons.external,\n    base: 'w-4 h-4 absolute right-2 top-2 text-gray-400 dark:text-gray-500 group-hover:text-[--color-light] dark:group-hover:text-[--color-dark]'\n  },\n  title: 'text-gray-900 dark:text-white font-semibold text-base my-0',\n  description: 'text-[15px] text-gray-500 dark:text-gray-400 mt-1 mb-0'\n}))\n\ndefineOptions({\n  inheritAttrs: false\n})\n\nconst props = defineProps({\n  icon: {\n    type: String,\n    default: undefined\n  },\n  color: {\n    type: String as PropType<typeof uiColors[number]>,\n    default: 'primary'\n  },\n  to: {\n    type: String,\n    default: undefined\n  },\n  target: {\n    type: String,\n    default: undefined\n  },\n  title: {\n    type: String,\n    default: undefined\n  },\n  class: {\n    type: [String, Object, Array] as PropType<any>,\n    default: undefined\n  },\n  ui: {\n    type: Object as PropType<Partial<typeof config.value>>,\n    default: () => ({})\n  }\n})\n\nconst { ui, attrs } = useUI('content.card', toRef(props, 'ui'), config, toRef(props, 'class'), true)\n\nconst colorLight = computed(() => {\n  if (props.color === 'primary') {\n    return 'rgb(var(--color-primary-DEFAULT))'\n  }\n  // @ts-ignore\n  return colors[props.color]?.['500'] || colors[props.color] || props.color\n})\nconst colorDark = computed(() => {\n  if (props.color === 'primary') {\n    return 'rgb(var(--color-primary-DEFAULT))'\n  }\n  // @ts-ignore\n  return colors[props.color]?.['400'] || colors[props.color] || props.color\n})\n\nconst target = computed(() => props.target || (props.to && props.to.startsWith('http') ? '_blank' : undefined))\n</script>\n",
      "start": 1714172176319,
      "end": 1714172176319,
      "order": "pre",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1714172176319,
      "end": 1714172176320,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1714172176320,
      "end": 1714172176320,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1714172176320,
      "end": 1714172176320,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1714172176320,
      "end": 1714172176320,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714172176320,
      "end": 1714172176320,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import _sfc_main from \"/Users/rezajafar/peakofeloquence-app/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Card.vue?vue&type=script&setup=true&lang.ts\";\nexport * from \"/Users/rezajafar/peakofeloquence-app/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Card.vue?vue&type=script&setup=true&lang.ts\";\nexport default _sfc_main;\n",
      "start": 1714172176320,
      "end": 1714172176350,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714172176351,
      "end": 1714172176351,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1714172176351,
      "end": 1714172176351,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1714172176351,
      "end": 1714172176351,
      "order": "normal"
    },
    {
      "name": "nuxt:fonts:font-family-injection",
      "start": 1714172176351,
      "end": 1714172176351,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1714172176351,
      "end": 1714172176351,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "result": "import { defineAsyncComponent } from \"vue\"\nexport default defineAsyncComponent(() => import(\"/Users/rezajafar/peakofeloquence-app/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Card.vue\").then(r => r[\"default\"] || r.default || r))",
      "start": 1714172176351,
      "end": 1714172176352,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "replace",
      "start": 1714172176352,
      "end": 1714172176352,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1714172176352,
      "end": 1714172176352,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1714172176352,
      "end": 1714172176352,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1714172176352,
      "end": 1714172176352,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714172176352,
      "end": 1714172176352,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714172176352,
      "end": 1714172176352,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714172176352,
      "end": 1714172176352,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714172176352,
      "end": 1714172176352,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714172176352,
      "end": 1714172176352,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714172176352,
      "end": 1714172176352,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1714172176352,
      "end": 1714172176352,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1714172176353,
      "end": 1714172176353,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1714172176353,
      "end": 1714172176353,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1714172176353,
      "end": 1714172176354,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1714172176354,
      "end": 1714172176354,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1714172176354,
      "end": 1714172176354,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1714172176354,
      "end": 1714172176354,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1714172176354,
      "end": 1714172176354,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "result": "import { __vitePreload } from \"\u0000vite/preload-helper.js\";import { defineAsyncComponent } from \"vue\"\nexport default defineAsyncComponent(() => __vitePreload(() => import(\"/Users/rezajafar/peakofeloquence-app/node_modules/@nuxt/ui-pro/modules/pro/runtime/components/global/Card.vue\"),__VITE_IS_MODERN__?\"__VITE_PRELOAD__\":void 0,import.meta.url).then(r => r[\"default\"] || r.default || r))",
      "start": 1714172176354,
      "end": 1714172176355,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:reporter",
      "start": 1714172176355,
      "end": 1714172176355,
      "order": "normal"
    }
  ]
}
