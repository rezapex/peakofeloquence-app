{
  "resolvedId": "/Users/rezajafar/peakofeloquence-app/node_modules/site-config-stack/dist/index.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { hasProtocol, withHttps, parseURL, withLeadingSlash, withBase, withTrailingSlash, withoutTrailingSlash } from 'ufo';\n\nfunction createSiteConfigStack(options) {\n  const debug = options?.debug || false;\n  const stack = [];\n  function push(input) {\n    if (!input || typeof input !== \"object\" || Object.keys(input).length === 0)\n      return;\n    if (!input._context && debug) {\n      let lastFunctionName = new Error(\"tmp\").stack?.split(\"\\n\")[2].split(\" \")[5];\n      if (lastFunctionName?.includes(\"/\"))\n        lastFunctionName = \"anonymous\";\n      input._context = lastFunctionName;\n    }\n    const entry = {};\n    for (const k in input) {\n      const val = input[k];\n      if (typeof val !== \"undefined\" && val !== \"\")\n        entry[k] = val;\n    }\n    if (Object.keys(entry).filter((k) => !k.startsWith(\"_\")).length > 0)\n      stack.push(entry);\n  }\n  function get(options2) {\n    const siteConfig = {};\n    if (options2?.debug)\n      siteConfig._context = {};\n    for (const o in stack.sort((a, b) => (a._priority || 0) - (b._priority || 0))) {\n      for (const k in stack[o]) {\n        const key = k;\n        const val = stack[o][k];\n        if (!k.startsWith(\"_\")) {\n          siteConfig[k] = val;\n          if (options2?.debug)\n            siteConfig._context[key] = stack[o]._context?.[key] || stack[o]._context || \"anonymous\";\n        }\n      }\n    }\n    return normalizeSiteConfig(siteConfig);\n  }\n  return {\n    stack,\n    push,\n    get\n  };\n}\n\nfunction normalizeSiteConfig(config) {\n  if (typeof config.indexable !== \"undefined\")\n    config.indexable = String(config.indexable) !== \"false\";\n  if (typeof config.trailingSlash !== \"undefined\")\n    config.trailingSlash = String(config.trailingSlash) !== \"false\";\n  if (config.url && !hasProtocol(config.url, { acceptRelative: true, strict: false }))\n    config.url = withHttps(config.url);\n  const keys = Object.keys(config).sort((a, b) => a.localeCompare(b));\n  const newConfig = {};\n  for (const k of keys)\n    newConfig[k] = config[k];\n  return newConfig;\n}\nfunction resolveSitePath(pathOrUrl, options) {\n  let path = pathOrUrl;\n  if (hasProtocol(pathOrUrl, { strict: false, acceptRelative: true })) {\n    const parsed = parseURL(pathOrUrl);\n    path = parsed.pathname;\n  }\n  const base = withLeadingSlash(options.base || \"/\");\n  if (base !== \"/\" && path.startsWith(base)) {\n    path = path.slice(base.length);\n  }\n  const origin = options.absolute ? options.siteUrl : \"\";\n  const baseWithOrigin = options.withBase ? withBase(base, origin || \"/\") : origin;\n  const resolvedUrl = withBase(path, baseWithOrigin);\n  return path === \"/\" && !options.withBase ? withTrailingSlash(resolvedUrl) : fixSlashes(options.trailingSlash, resolvedUrl);\n}\nfunction fixSlashes(trailingSlash, pathOrUrl) {\n  const $url = parseURL(pathOrUrl);\n  const isFileUrl = $url.pathname.includes(\".\");\n  if (isFileUrl)\n    return pathOrUrl;\n  const fixedPath = trailingSlash ? withTrailingSlash($url.pathname) : withoutTrailingSlash($url.pathname);\n  return `${$url.protocol ? `${$url.protocol}//` : \"\"}${$url.host || \"\"}${fixedPath}${$url.search || \"\"}${$url.hash || \"\"}`;\n}\n\nexport { createSiteConfigStack, fixSlashes, normalizeSiteConfig, resolveSitePath };\n",
      "start": 1714172178556,
      "end": 1714172178606,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1714172178606,
      "end": 1714172178606,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1714172178606,
      "end": 1714172178606,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1714172178606,
      "end": 1714172178606,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1714172178606,
      "end": 1714172178606,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1714172178606,
      "end": 1714172178606,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1714172178606,
      "end": 1714172178606,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1714172178606,
      "end": 1714172178606,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714172178606,
      "end": 1714172178606,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1714172178606,
      "end": 1714172178606,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714172178606,
      "end": 1714172178606,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1714172178606,
      "end": 1714172178606,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1714172178606,
      "end": 1714172178606,
      "order": "normal"
    },
    {
      "name": "nuxt:fonts:font-family-injection",
      "start": 1714172178606,
      "end": 1714172178606,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1714172178606,
      "end": 1714172178606,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1714172178606,
      "end": 1714172178606,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1714172178606,
      "end": 1714172178606,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1714172178606,
      "end": 1714172178606,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1714172178606,
      "end": 1714172178606,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1714172178606,
      "end": 1714172178606,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714172178606,
      "end": 1714172178606,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714172178606,
      "end": 1714172178606,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714172178606,
      "end": 1714172178606,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714172178606,
      "end": 1714172178606,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714172178606,
      "end": 1714172178606,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714172178606,
      "end": 1714172178606,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1714172178606,
      "end": 1714172178606,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1714172178606,
      "end": 1714172178606,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1714172178606,
      "end": 1714172178606,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1714172178606,
      "end": 1714172178606,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1714172178606,
      "end": 1714172178606,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1714172178606,
      "end": 1714172178606,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1714172178606,
      "end": 1714172178606,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1714172178606,
      "end": 1714172178606,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714172178606,
      "end": 1714172178606,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714172178606,
      "end": 1714172178606,
      "order": "normal"
    }
  ]
}
