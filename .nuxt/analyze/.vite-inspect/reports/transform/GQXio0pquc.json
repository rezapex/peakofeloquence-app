{
  "resolvedId": "/Users/rezajafar/peakofeloquence-app/node_modules/@nuxt/ui-pro/components/blog/BlogPost.vue?vue&type=script&setup=true&lang.ts",
  "transforms": [
    {
      "name": "vite:vue",
      "result": "import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, renderSlot as _renderSlot, resolveComponent as _resolveComponent, mergeProps as _mergeProps, createVNode as _createVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, createBlock as _createBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"absolute inset-0\",\n  \"aria-hidden\": \"true\"\n}, null, -1)\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"absolute inset-0\",\n  \"aria-hidden\": \"true\"\n}, null, -1)\nconst _hoisted_3 = [\"datetime\"]\n\nimport type { PropType } from 'vue'\nimport { twJoin } from 'tailwind-merge'\nimport { nuxtLinkProps, getNuxtLinkProps } from '#ui/utils'\nimport { getSlotChildrenText } from '../../lib/slots'\nimport type { Avatar, Badge } from '#ui/types'\nimport type { NuxtLinkProps } from '#app'\n\n\nexport default /*#__PURE__*/_defineComponent({\n  ...{\n  inheritAttrs: false\n},\n  __name: 'BlogPost',\n  props: {\n  ...nuxtLinkProps,\n  title: {\n    type: String,\n    default: undefined\n  },\n  description: {\n    type: String,\n    default: undefined\n  },\n  date: {\n    type: [String, Date],\n    default: undefined\n  },\n  image: {\n    type: [String, Object] as PropType<Partial<HTMLImageElement> | string>,\n    default: undefined\n  },\n  badge: {\n    type: Object as PropType<Badge>,\n    default: undefined\n  },\n  authors: {\n    type: Array as PropType<({\n      name: string\n      avatar: Avatar\n    } & NuxtLinkProps)[]>,\n    default: undefined\n  },\n  orientation: {\n    type: String as PropType<'vertical' | 'horizontal'>,\n    default: 'vertical'\n  },\n  class: {\n    type: [String, Object, Array] as PropType<any>,\n    default: undefined\n  },\n  ui: {\n    type: Object as PropType<Partial<typeof config.value>>,\n    default: () => ({})\n  }\n},\n  setup(__props) {\n\n\n\nconst slots = useSlots()\n\nconst props = __props\n\nconst config = computed(() => {\n  const wrapper = twJoin(\n    'relative group flex flex-col w-full gap-y-6',\n    props.orientation === 'horizontal' && (!!props.image || !!slots.image) ? 'lg:grid lg:grid-cols-2 lg:gap-x-8 lg:items-center' : undefined\n  )\n\n  return {\n    wrapper,\n    image: {\n      wrapper: 'ring-1 ring-gray-200 dark:ring-gray-800 relative overflow-hidden aspect-[16/9] w-full rounded-lg pointer-events-none',\n      base: 'object-cover object-top w-full h-full transform transition-transform duration-200 group-hover:scale-105'\n    },\n    container: 'flex flex-col justify-between flex-1',\n    inner: 'flex-1',\n    badge: {\n      wrapper: 'mb-3',\n      base: ''\n    },\n    title: 'text-gray-900 dark:text-white text-xl font-semibold truncate group-hover:text-gray-600 dark:group-hover:text-gray-300 transition-colors duration-200',\n    description: 'text-base text-gray-500 dark:text-gray-400 mt-1',\n    date: 'text-sm text-gray-500 dark:text-gray-400 font-medium pointer-events-none',\n    authors: {\n      wrapper: 'relative flex items-center gap-x-3 mt-4',\n      avatar: {\n        base: 'relative ring-1 lg:hover:scale-105 lg:hover:ring-primary-500 dark:lg:hover:ring-primary-400 transition-transform',\n        size: 'xs' as const\n      }\n    }\n  }\n})\n\nconst { ui, attrs } = useUI('blog.post', toRef(props, 'ui'), config, toRef(props, 'class'), true)\n\nconst nuxtLinkBind = computed(() => getNuxtLinkProps(props))\nconst ariaLabel = computed(() => (props.title || (slots.title && getSlotChildrenText(slots.title())) || 'Post link').trim())\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_NuxtImg = _resolveComponent(\"NuxtImg\")!\n  const _component_NuxtLink = _resolveComponent(\"NuxtLink\")!\n  const _component_UBadge = _resolveComponent(\"UBadge\")!\n  const _component_UAvatar = _resolveComponent(\"UAvatar\")!\n  const _component_UAvatarGroup = _resolveComponent(\"UAvatarGroup\")!\n\n  return (_openBlock(), _createElementBlock(\"article\", _mergeProps({\n    class: _unref(ui).wrapper\n  }, _unref(attrs)), [\n    (__props.image || _ctx.$slots.image)\n      ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 0,\n          class: _normalizeClass(_unref(ui).image.wrapper)\n        }, [\n          _renderSlot(_ctx.$slots, \"image\", {}, () => [\n            _createVNode(_component_NuxtImg, _mergeProps(typeof __props.image === 'string' ? { src: __props.image, alt: __props.title } : { alt: __props.title, ...__props.image }, {\n              class: _unref(ui).image.base\n            }), null, 16, [\"class\"])\n          ])\n        ], 2))\n      : _createCommentVNode(\"\", true),\n    _createElementVNode(\"div\", {\n      class: _normalizeClass(_unref(ui).container)\n    }, [\n      _createElementVNode(\"div\", {\n        class: _normalizeClass(_unref(ui).inner)\n      }, [\n        (_ctx.to)\n          ? (_openBlock(), _createBlock(_component_NuxtLink, _mergeProps({\n              key: 0,\n              \"aria-label\": _unref(ariaLabel)\n            }, _unref(nuxtLinkBind), {\n              class: \"focus:outline-none\",\n              tabindex: \"-1\"\n            }), {\n              default: _withCtx(() => [\n                _hoisted_1\n              ]),\n              _: 1\n            }, 16, [\"aria-label\"]))\n          : _createCommentVNode(\"\", true),\n        (__props.badge || _ctx.$slots.badge)\n          ? (_openBlock(), _createElementBlock(\"div\", {\n              key: 1,\n              class: _normalizeClass(_unref(ui).badge.wrapper)\n            }, [\n              _renderSlot(_ctx.$slots, \"badge\", {}, () => [\n                (__props.badge)\n                  ? (_openBlock(), _createBlock(_component_UBadge, _mergeProps({ key: 0 }, { variant: 'subtle', ...__props.badge }, {\n                      class: _unref(ui).badge.base\n                    }), null, 16, [\"class\"]))\n                  : _createCommentVNode(\"\", true)\n              ])\n            ], 2))\n          : _createCommentVNode(\"\", true),\n        (__props.title || _ctx.$slots.title)\n          ? (_openBlock(), _createElementBlock(\"h2\", {\n              key: 2,\n              class: _normalizeClass(_unref(ui).title)\n            }, [\n              _renderSlot(_ctx.$slots, \"title\", {}, () => [\n                _createTextVNode(_toDisplayString(__props.title), 1)\n              ])\n            ], 2))\n          : _createCommentVNode(\"\", true),\n        (__props.description || _ctx.$slots.description)\n          ? (_openBlock(), _createElementBlock(\"p\", {\n              key: 3,\n              class: _normalizeClass(_unref(ui).description)\n            }, [\n              _renderSlot(_ctx.$slots, \"description\", {}, () => [\n                _createTextVNode(_toDisplayString(__props.description), 1)\n              ])\n            ], 2))\n          : _createCommentVNode(\"\", true),\n        _renderSlot(_ctx.$slots, \"default\")\n      ], 2),\n      (__props.authors?.length || __props.date)\n        ? (_openBlock(), _createElementBlock(\"div\", {\n            key: 0,\n            class: _normalizeClass(_unref(ui).authors.wrapper)\n          }, [\n            _renderSlot(_ctx.$slots, \"authors\", {}, () => [\n              (__props.authors?.length)\n                ? (_openBlock(), _createBlock(_component_UAvatarGroup, { key: 0 }, {\n                    default: _withCtx(() => [\n                      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(__props.authors, (author, index) => {\n                        return (_openBlock(), _createBlock(_component_UAvatar, _mergeProps({\n                          key: index,\n                          alt: author.name,\n                          class: _unref(ui).authors.avatar.base\n                        }, { size: _unref(ui).authors.avatar.size, ...author.avatar }), {\n                          default: _withCtx(() => [\n                            (author.to)\n                              ? (_openBlock(), _createBlock(_component_NuxtLink, _mergeProps({ key: 0 }, { target: '_blank', ..._unref(getNuxtLinkProps)(author) }, {\n                                  class: \"focus:outline-none\",\n                                  tabindex: \"-1\"\n                                }), {\n                                  default: _withCtx(() => [\n                                    _hoisted_2\n                                  ]),\n                                  _: 2\n                                }, 1040))\n                              : _createCommentVNode(\"\", true)\n                          ]),\n                          _: 2\n                        }, 1040, [\"alt\", \"class\"]))\n                      }), 128))\n                    ]),\n                    _: 1\n                  }))\n                : _createCommentVNode(\"\", true)\n            ]),\n            _renderSlot(_ctx.$slots, \"date\", {}, () => [\n              (__props.date)\n                ? (_openBlock(), _createElementBlock(\"time\", {\n                    key: 0,\n                    datetime: new Date(__props.date).toISOString(),\n                    class: _normalizeClass(_unref(ui).date)\n                  }, _toDisplayString(__props.date), 11, _hoisted_3))\n                : _createCommentVNode(\"\", true)\n            ])\n          ], 2))\n        : _createCommentVNode(\"\", true)\n    ], 2)\n  ], 16))\n}\n}\n\n})",
      "start": 1714172179775,
      "end": 1714172179775
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1714172179775,
      "end": 1714172179775,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1714172179775,
      "end": 1714172179775,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1714172179775,
      "end": 1714172179775,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1714172179775,
      "end": 1714172179775,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1714172179775,
      "end": 1714172179775,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, renderSlot as _renderSlot, resolveComponent as _resolveComponent, mergeProps as _mergeProps, createVNode as _createVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, createBlock as _createBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = /* @__PURE__ */ _createElementVNode(\"span\", {\n  class: \"absolute inset-0\",\n  \"aria-hidden\": \"true\"\n}, null, -1);\nconst _hoisted_2 = /* @__PURE__ */ _createElementVNode(\"span\", {\n  class: \"absolute inset-0\",\n  \"aria-hidden\": \"true\"\n}, null, -1);\nconst _hoisted_3 = [\"datetime\"];\nimport { twJoin } from \"tailwind-merge\";\nimport { nuxtLinkProps, getNuxtLinkProps } from \"#ui/utils\";\nimport { getSlotChildrenText } from \"../../lib/slots\";\nexport default /* @__PURE__ */ _defineComponent({\n  ...{\n    inheritAttrs: false\n  },\n  __name: \"BlogPost\",\n  props: {\n    ...nuxtLinkProps,\n    title: {\n      type: String,\n      default: void 0\n    },\n    description: {\n      type: String,\n      default: void 0\n    },\n    date: {\n      type: [String, Date],\n      default: void 0\n    },\n    image: {\n      type: [String, Object],\n      default: void 0\n    },\n    badge: {\n      type: Object,\n      default: void 0\n    },\n    authors: {\n      type: Array,\n      default: void 0\n    },\n    orientation: {\n      type: String,\n      default: \"vertical\"\n    },\n    class: {\n      type: [String, Object, Array],\n      default: void 0\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(__props) {\n    const slots = useSlots();\n    const props = __props;\n    const config = computed(() => {\n      const wrapper = twJoin(\n        \"relative group flex flex-col w-full gap-y-6\",\n        props.orientation === \"horizontal\" && (!!props.image || !!slots.image) ? \"lg:grid lg:grid-cols-2 lg:gap-x-8 lg:items-center\" : void 0\n      );\n      return {\n        wrapper,\n        image: {\n          wrapper: \"ring-1 ring-gray-200 dark:ring-gray-800 relative overflow-hidden aspect-[16/9] w-full rounded-lg pointer-events-none\",\n          base: \"object-cover object-top w-full h-full transform transition-transform duration-200 group-hover:scale-105\"\n        },\n        container: \"flex flex-col justify-between flex-1\",\n        inner: \"flex-1\",\n        badge: {\n          wrapper: \"mb-3\",\n          base: \"\"\n        },\n        title: \"text-gray-900 dark:text-white text-xl font-semibold truncate group-hover:text-gray-600 dark:group-hover:text-gray-300 transition-colors duration-200\",\n        description: \"text-base text-gray-500 dark:text-gray-400 mt-1\",\n        date: \"text-sm text-gray-500 dark:text-gray-400 font-medium pointer-events-none\",\n        authors: {\n          wrapper: \"relative flex items-center gap-x-3 mt-4\",\n          avatar: {\n            base: \"relative ring-1 lg:hover:scale-105 lg:hover:ring-primary-500 dark:lg:hover:ring-primary-400 transition-transform\",\n            size: \"xs\"\n          }\n        }\n      };\n    });\n    const { ui, attrs } = useUI(\"blog.post\", toRef(props, \"ui\"), config, toRef(props, \"class\"), true);\n    const nuxtLinkBind = computed(() => getNuxtLinkProps(props));\n    const ariaLabel = computed(() => (props.title || slots.title && getSlotChildrenText(slots.title()) || \"Post link\").trim());\n    return (_ctx, _cache) => {\n      const _component_NuxtImg = _resolveComponent(\"NuxtImg\");\n      const _component_NuxtLink = _resolveComponent(\"NuxtLink\");\n      const _component_UBadge = _resolveComponent(\"UBadge\");\n      const _component_UAvatar = _resolveComponent(\"UAvatar\");\n      const _component_UAvatarGroup = _resolveComponent(\"UAvatarGroup\");\n      return _openBlock(), _createElementBlock(\"article\", _mergeProps({\n        class: _unref(ui).wrapper\n      }, _unref(attrs)), [\n        __props.image || _ctx.$slots.image ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 0,\n          class: _normalizeClass(_unref(ui).image.wrapper)\n        }, [\n          _renderSlot(_ctx.$slots, \"image\", {}, () => [\n            _createVNode(_component_NuxtImg, _mergeProps(typeof __props.image === \"string\" ? { src: __props.image, alt: __props.title } : { alt: __props.title, ...__props.image }, {\n              class: _unref(ui).image.base\n            }), null, 16, [\"class\"])\n          ])\n        ], 2)) : _createCommentVNode(\"\", true),\n        _createElementVNode(\"div\", {\n          class: _normalizeClass(_unref(ui).container)\n        }, [\n          _createElementVNode(\"div\", {\n            class: _normalizeClass(_unref(ui).inner)\n          }, [\n            _ctx.to ? (_openBlock(), _createBlock(_component_NuxtLink, _mergeProps({\n              key: 0,\n              \"aria-label\": _unref(ariaLabel)\n            }, _unref(nuxtLinkBind), {\n              class: \"focus:outline-none\",\n              tabindex: \"-1\"\n            }), {\n              default: _withCtx(() => [\n                _hoisted_1\n              ]),\n              _: 1\n            }, 16, [\"aria-label\"])) : _createCommentVNode(\"\", true),\n            __props.badge || _ctx.$slots.badge ? (_openBlock(), _createElementBlock(\"div\", {\n              key: 1,\n              class: _normalizeClass(_unref(ui).badge.wrapper)\n            }, [\n              _renderSlot(_ctx.$slots, \"badge\", {}, () => [\n                __props.badge ? (_openBlock(), _createBlock(_component_UBadge, _mergeProps({ key: 0 }, { variant: \"subtle\", ...__props.badge }, {\n                  class: _unref(ui).badge.base\n                }), null, 16, [\"class\"])) : _createCommentVNode(\"\", true)\n              ])\n            ], 2)) : _createCommentVNode(\"\", true),\n            __props.title || _ctx.$slots.title ? (_openBlock(), _createElementBlock(\"h2\", {\n              key: 2,\n              class: _normalizeClass(_unref(ui).title)\n            }, [\n              _renderSlot(_ctx.$slots, \"title\", {}, () => [\n                _createTextVNode(_toDisplayString(__props.title), 1)\n              ])\n            ], 2)) : _createCommentVNode(\"\", true),\n            __props.description || _ctx.$slots.description ? (_openBlock(), _createElementBlock(\"p\", {\n              key: 3,\n              class: _normalizeClass(_unref(ui).description)\n            }, [\n              _renderSlot(_ctx.$slots, \"description\", {}, () => [\n                _createTextVNode(_toDisplayString(__props.description), 1)\n              ])\n            ], 2)) : _createCommentVNode(\"\", true),\n            _renderSlot(_ctx.$slots, \"default\")\n          ], 2),\n          __props.authors?.length || __props.date ? (_openBlock(), _createElementBlock(\"div\", {\n            key: 0,\n            class: _normalizeClass(_unref(ui).authors.wrapper)\n          }, [\n            _renderSlot(_ctx.$slots, \"authors\", {}, () => [\n              __props.authors?.length ? (_openBlock(), _createBlock(_component_UAvatarGroup, { key: 0 }, {\n                default: _withCtx(() => [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(__props.authors, (author, index) => {\n                    return _openBlock(), _createBlock(_component_UAvatar, _mergeProps({\n                      key: index,\n                      alt: author.name,\n                      class: _unref(ui).authors.avatar.base\n                    }, { size: _unref(ui).authors.avatar.size, ...author.avatar }), {\n                      default: _withCtx(() => [\n                        author.to ? (_openBlock(), _createBlock(_component_NuxtLink, _mergeProps({ key: 0 }, { target: \"_blank\", ..._unref(getNuxtLinkProps)(author) }, {\n                          class: \"focus:outline-none\",\n                          tabindex: \"-1\"\n                        }), {\n                          default: _withCtx(() => [\n                            _hoisted_2\n                          ]),\n                          _: 2\n                        }, 1040)) : _createCommentVNode(\"\", true)\n                      ]),\n                      _: 2\n                    }, 1040, [\"alt\", \"class\"]);\n                  }), 128))\n                ]),\n                _: 1\n              })) : _createCommentVNode(\"\", true)\n            ]),\n            _renderSlot(_ctx.$slots, \"date\", {}, () => [\n              __props.date ? (_openBlock(), _createElementBlock(\"time\", {\n                key: 0,\n                datetime: new Date(__props.date).toISOString(),\n                class: _normalizeClass(_unref(ui).date)\n              }, _toDisplayString(__props.date), 11, _hoisted_3)) : _createCommentVNode(\"\", true)\n            ])\n          ], 2)) : _createCommentVNode(\"\", true)\n        ], 2)\n      ], 16);\n    };\n  }\n});\n",
      "start": 1714172179775,
      "end": 1714172179979,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/rezajafar/peakofeloquence-app/node_modules/@nuxt/ui-pro/components/blog/BlogPost.vue?vue&type=script&setup=true&lang.ts"
        ],
        "sourcesContent": [
          "import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, renderSlot as _renderSlot, resolveComponent as _resolveComponent, mergeProps as _mergeProps, createVNode as _createVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, createBlock as _createBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"absolute inset-0\",\n  \"aria-hidden\": \"true\"\n}, null, -1)\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"absolute inset-0\",\n  \"aria-hidden\": \"true\"\n}, null, -1)\nconst _hoisted_3 = [\"datetime\"]\n\nimport type { PropType } from 'vue'\nimport { twJoin } from 'tailwind-merge'\nimport { nuxtLinkProps, getNuxtLinkProps } from '#ui/utils'\nimport { getSlotChildrenText } from '../../lib/slots'\nimport type { Avatar, Badge } from '#ui/types'\nimport type { NuxtLinkProps } from '#app'\n\n\nexport default /*#__PURE__*/_defineComponent({\n  ...{\n  inheritAttrs: false\n},\n  __name: 'BlogPost',\n  props: {\n  ...nuxtLinkProps,\n  title: {\n    type: String,\n    default: undefined\n  },\n  description: {\n    type: String,\n    default: undefined\n  },\n  date: {\n    type: [String, Date],\n    default: undefined\n  },\n  image: {\n    type: [String, Object] as PropType<Partial<HTMLImageElement> | string>,\n    default: undefined\n  },\n  badge: {\n    type: Object as PropType<Badge>,\n    default: undefined\n  },\n  authors: {\n    type: Array as PropType<({\n      name: string\n      avatar: Avatar\n    } & NuxtLinkProps)[]>,\n    default: undefined\n  },\n  orientation: {\n    type: String as PropType<'vertical' | 'horizontal'>,\n    default: 'vertical'\n  },\n  class: {\n    type: [String, Object, Array] as PropType<any>,\n    default: undefined\n  },\n  ui: {\n    type: Object as PropType<Partial<typeof config.value>>,\n    default: () => ({})\n  }\n},\n  setup(__props) {\n\n\n\nconst slots = useSlots()\n\nconst props = __props\n\nconst config = computed(() => {\n  const wrapper = twJoin(\n    'relative group flex flex-col w-full gap-y-6',\n    props.orientation === 'horizontal' && (!!props.image || !!slots.image) ? 'lg:grid lg:grid-cols-2 lg:gap-x-8 lg:items-center' : undefined\n  )\n\n  return {\n    wrapper,\n    image: {\n      wrapper: 'ring-1 ring-gray-200 dark:ring-gray-800 relative overflow-hidden aspect-[16/9] w-full rounded-lg pointer-events-none',\n      base: 'object-cover object-top w-full h-full transform transition-transform duration-200 group-hover:scale-105'\n    },\n    container: 'flex flex-col justify-between flex-1',\n    inner: 'flex-1',\n    badge: {\n      wrapper: 'mb-3',\n      base: ''\n    },\n    title: 'text-gray-900 dark:text-white text-xl font-semibold truncate group-hover:text-gray-600 dark:group-hover:text-gray-300 transition-colors duration-200',\n    description: 'text-base text-gray-500 dark:text-gray-400 mt-1',\n    date: 'text-sm text-gray-500 dark:text-gray-400 font-medium pointer-events-none',\n    authors: {\n      wrapper: 'relative flex items-center gap-x-3 mt-4',\n      avatar: {\n        base: 'relative ring-1 lg:hover:scale-105 lg:hover:ring-primary-500 dark:lg:hover:ring-primary-400 transition-transform',\n        size: 'xs' as const\n      }\n    }\n  }\n})\n\nconst { ui, attrs } = useUI('blog.post', toRef(props, 'ui'), config, toRef(props, 'class'), true)\n\nconst nuxtLinkBind = computed(() => getNuxtLinkProps(props))\nconst ariaLabel = computed(() => (props.title || (slots.title && getSlotChildrenText(slots.title())) || 'Post link').trim())\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_NuxtImg = _resolveComponent(\"NuxtImg\")!\n  const _component_NuxtLink = _resolveComponent(\"NuxtLink\")!\n  const _component_UBadge = _resolveComponent(\"UBadge\")!\n  const _component_UAvatar = _resolveComponent(\"UAvatar\")!\n  const _component_UAvatarGroup = _resolveComponent(\"UAvatarGroup\")!\n\n  return (_openBlock(), _createElementBlock(\"article\", _mergeProps({\n    class: _unref(ui).wrapper\n  }, _unref(attrs)), [\n    (__props.image || _ctx.$slots.image)\n      ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 0,\n          class: _normalizeClass(_unref(ui).image.wrapper)\n        }, [\n          _renderSlot(_ctx.$slots, \"image\", {}, () => [\n            _createVNode(_component_NuxtImg, _mergeProps(typeof __props.image === 'string' ? { src: __props.image, alt: __props.title } : { alt: __props.title, ...__props.image }, {\n              class: _unref(ui).image.base\n            }), null, 16, [\"class\"])\n          ])\n        ], 2))\n      : _createCommentVNode(\"\", true),\n    _createElementVNode(\"div\", {\n      class: _normalizeClass(_unref(ui).container)\n    }, [\n      _createElementVNode(\"div\", {\n        class: _normalizeClass(_unref(ui).inner)\n      }, [\n        (_ctx.to)\n          ? (_openBlock(), _createBlock(_component_NuxtLink, _mergeProps({\n              key: 0,\n              \"aria-label\": _unref(ariaLabel)\n            }, _unref(nuxtLinkBind), {\n              class: \"focus:outline-none\",\n              tabindex: \"-1\"\n            }), {\n              default: _withCtx(() => [\n                _hoisted_1\n              ]),\n              _: 1\n            }, 16, [\"aria-label\"]))\n          : _createCommentVNode(\"\", true),\n        (__props.badge || _ctx.$slots.badge)\n          ? (_openBlock(), _createElementBlock(\"div\", {\n              key: 1,\n              class: _normalizeClass(_unref(ui).badge.wrapper)\n            }, [\n              _renderSlot(_ctx.$slots, \"badge\", {}, () => [\n                (__props.badge)\n                  ? (_openBlock(), _createBlock(_component_UBadge, _mergeProps({ key: 0 }, { variant: 'subtle', ...__props.badge }, {\n                      class: _unref(ui).badge.base\n                    }), null, 16, [\"class\"]))\n                  : _createCommentVNode(\"\", true)\n              ])\n            ], 2))\n          : _createCommentVNode(\"\", true),\n        (__props.title || _ctx.$slots.title)\n          ? (_openBlock(), _createElementBlock(\"h2\", {\n              key: 2,\n              class: _normalizeClass(_unref(ui).title)\n            }, [\n              _renderSlot(_ctx.$slots, \"title\", {}, () => [\n                _createTextVNode(_toDisplayString(__props.title), 1)\n              ])\n            ], 2))\n          : _createCommentVNode(\"\", true),\n        (__props.description || _ctx.$slots.description)\n          ? (_openBlock(), _createElementBlock(\"p\", {\n              key: 3,\n              class: _normalizeClass(_unref(ui).description)\n            }, [\n              _renderSlot(_ctx.$slots, \"description\", {}, () => [\n                _createTextVNode(_toDisplayString(__props.description), 1)\n              ])\n            ], 2))\n          : _createCommentVNode(\"\", true),\n        _renderSlot(_ctx.$slots, \"default\")\n      ], 2),\n      (__props.authors?.length || __props.date)\n        ? (_openBlock(), _createElementBlock(\"div\", {\n            key: 0,\n            class: _normalizeClass(_unref(ui).authors.wrapper)\n          }, [\n            _renderSlot(_ctx.$slots, \"authors\", {}, () => [\n              (__props.authors?.length)\n                ? (_openBlock(), _createBlock(_component_UAvatarGroup, { key: 0 }, {\n                    default: _withCtx(() => [\n                      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(__props.authors, (author, index) => {\n                        return (_openBlock(), _createBlock(_component_UAvatar, _mergeProps({\n                          key: index,\n                          alt: author.name,\n                          class: _unref(ui).authors.avatar.base\n                        }, { size: _unref(ui).authors.avatar.size, ...author.avatar }), {\n                          default: _withCtx(() => [\n                            (author.to)\n                              ? (_openBlock(), _createBlock(_component_NuxtLink, _mergeProps({ key: 0 }, { target: '_blank', ..._unref(getNuxtLinkProps)(author) }, {\n                                  class: \"focus:outline-none\",\n                                  tabindex: \"-1\"\n                                }), {\n                                  default: _withCtx(() => [\n                                    _hoisted_2\n                                  ]),\n                                  _: 2\n                                }, 1040))\n                              : _createCommentVNode(\"\", true)\n                          ]),\n                          _: 2\n                        }, 1040, [\"alt\", \"class\"]))\n                      }), 128))\n                    ]),\n                    _: 1\n                  }))\n                : _createCommentVNode(\"\", true)\n            ]),\n            _renderSlot(_ctx.$slots, \"date\", {}, () => [\n              (__props.date)\n                ? (_openBlock(), _createElementBlock(\"time\", {\n                    key: 0,\n                    datetime: new Date(__props.date).toISOString(),\n                    class: _normalizeClass(_unref(ui).date)\n                  }, _toDisplayString(__props.date), 11, _hoisted_3))\n                : _createCommentVNode(\"\", true)\n            ])\n          ], 2))\n        : _createCommentVNode(\"\", true)\n    ], 2)\n  ], 16))\n}\n}\n\n})"
        ],
        "mappings": "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",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1714172179979,
      "end": 1714172179979,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1714172179979,
      "end": 1714172179979,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1714172179979,
      "end": 1714172179979,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1714172179979,
      "end": 1714172179979,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1714172179979,
      "end": 1714172179979,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1714172179979,
      "end": 1714172179979,
      "order": "normal"
    },
    {
      "name": "nuxt:fonts:font-family-injection",
      "start": 1714172179979,
      "end": 1714172179979,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1714172179979,
      "end": 1714172179979,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1714172179979,
      "end": 1714172179979,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1714172179979,
      "end": 1714172179979,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1714172179979,
      "end": 1714172179979,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1714172179979,
      "end": 1714172179979,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1714172179979,
      "end": 1714172179979,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1714172179979,
      "end": 1714172179979,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1714172179979,
      "end": 1714172179979,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1714172179979,
      "end": 1714172179979,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1714172179979,
      "end": 1714172179979,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1714172179979,
      "end": 1714172179979,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1714172179979,
      "end": 1714172179979,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1714172179979,
      "end": 1714172179979,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { useSlots, computed, toRef } from 'vue';\nimport { useUI } from '/Users/rezajafar/peakofeloquence-app/node_modules/@nuxt/ui/dist/runtime/composables/useUI.mjs';\nimport { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, renderSlot as _renderSlot, resolveComponent as _resolveComponent, mergeProps as _mergeProps, createVNode as _createVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, createBlock as _createBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = /* @__PURE__ */ _createElementVNode(\"span\", {\n  class: \"absolute inset-0\",\n  \"aria-hidden\": \"true\"\n}, null, -1);\nconst _hoisted_2 = /* @__PURE__ */ _createElementVNode(\"span\", {\n  class: \"absolute inset-0\",\n  \"aria-hidden\": \"true\"\n}, null, -1);\nconst _hoisted_3 = [\"datetime\"];\nimport { twJoin } from \"tailwind-merge\";\nimport { nuxtLinkProps, getNuxtLinkProps } from \"#ui/utils\";\nimport { getSlotChildrenText } from \"../../lib/slots\";\nexport default /* @__PURE__ */ _defineComponent({\n  ...{\n    inheritAttrs: false\n  },\n  __name: \"BlogPost\",\n  props: {\n    ...nuxtLinkProps,\n    title: {\n      type: String,\n      default: void 0\n    },\n    description: {\n      type: String,\n      default: void 0\n    },\n    date: {\n      type: [String, Date],\n      default: void 0\n    },\n    image: {\n      type: [String, Object],\n      default: void 0\n    },\n    badge: {\n      type: Object,\n      default: void 0\n    },\n    authors: {\n      type: Array,\n      default: void 0\n    },\n    orientation: {\n      type: String,\n      default: \"vertical\"\n    },\n    class: {\n      type: [String, Object, Array],\n      default: void 0\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(__props) {\n    const slots = useSlots();\n    const props = __props;\n    const config = computed(() => {\n      const wrapper = twJoin(\n        \"relative group flex flex-col w-full gap-y-6\",\n        props.orientation === \"horizontal\" && (!!props.image || !!slots.image) ? \"lg:grid lg:grid-cols-2 lg:gap-x-8 lg:items-center\" : void 0\n      );\n      return {\n        wrapper,\n        image: {\n          wrapper: \"ring-1 ring-gray-200 dark:ring-gray-800 relative overflow-hidden aspect-[16/9] w-full rounded-lg pointer-events-none\",\n          base: \"object-cover object-top w-full h-full transform transition-transform duration-200 group-hover:scale-105\"\n        },\n        container: \"flex flex-col justify-between flex-1\",\n        inner: \"flex-1\",\n        badge: {\n          wrapper: \"mb-3\",\n          base: \"\"\n        },\n        title: \"text-gray-900 dark:text-white text-xl font-semibold truncate group-hover:text-gray-600 dark:group-hover:text-gray-300 transition-colors duration-200\",\n        description: \"text-base text-gray-500 dark:text-gray-400 mt-1\",\n        date: \"text-sm text-gray-500 dark:text-gray-400 font-medium pointer-events-none\",\n        authors: {\n          wrapper: \"relative flex items-center gap-x-3 mt-4\",\n          avatar: {\n            base: \"relative ring-1 lg:hover:scale-105 lg:hover:ring-primary-500 dark:lg:hover:ring-primary-400 transition-transform\",\n            size: \"xs\"\n          }\n        }\n      };\n    });\n    const { ui, attrs } = useUI(\"blog.post\", toRef(props, \"ui\"), config, toRef(props, \"class\"), true);\n    const nuxtLinkBind = computed(() => getNuxtLinkProps(props));\n    const ariaLabel = computed(() => (props.title || slots.title && getSlotChildrenText(slots.title()) || \"Post link\").trim());\n    return (_ctx, _cache) => {\n      const _component_NuxtImg = _resolveComponent(\"NuxtImg\");\n      const _component_NuxtLink = _resolveComponent(\"NuxtLink\");\n      const _component_UBadge = _resolveComponent(\"UBadge\");\n      const _component_UAvatar = _resolveComponent(\"UAvatar\");\n      const _component_UAvatarGroup = _resolveComponent(\"UAvatarGroup\");\n      return _openBlock(), _createElementBlock(\"article\", _mergeProps({\n        class: _unref(ui).wrapper\n      }, _unref(attrs)), [\n        __props.image || _ctx.$slots.image ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 0,\n          class: _normalizeClass(_unref(ui).image.wrapper)\n        }, [\n          _renderSlot(_ctx.$slots, \"image\", {}, () => [\n            _createVNode(_component_NuxtImg, _mergeProps(typeof __props.image === \"string\" ? { src: __props.image, alt: __props.title } : { alt: __props.title, ...__props.image }, {\n              class: _unref(ui).image.base\n            }), null, 16, [\"class\"])\n          ])\n        ], 2)) : _createCommentVNode(\"\", true),\n        _createElementVNode(\"div\", {\n          class: _normalizeClass(_unref(ui).container)\n        }, [\n          _createElementVNode(\"div\", {\n            class: _normalizeClass(_unref(ui).inner)\n          }, [\n            _ctx.to ? (_openBlock(), _createBlock(_component_NuxtLink, _mergeProps({\n              key: 0,\n              \"aria-label\": _unref(ariaLabel)\n            }, _unref(nuxtLinkBind), {\n              class: \"focus:outline-none\",\n              tabindex: \"-1\"\n            }), {\n              default: _withCtx(() => [\n                _hoisted_1\n              ]),\n              _: 1\n            }, 16, [\"aria-label\"])) : _createCommentVNode(\"\", true),\n            __props.badge || _ctx.$slots.badge ? (_openBlock(), _createElementBlock(\"div\", {\n              key: 1,\n              class: _normalizeClass(_unref(ui).badge.wrapper)\n            }, [\n              _renderSlot(_ctx.$slots, \"badge\", {}, () => [\n                __props.badge ? (_openBlock(), _createBlock(_component_UBadge, _mergeProps({ key: 0 }, { variant: \"subtle\", ...__props.badge }, {\n                  class: _unref(ui).badge.base\n                }), null, 16, [\"class\"])) : _createCommentVNode(\"\", true)\n              ])\n            ], 2)) : _createCommentVNode(\"\", true),\n            __props.title || _ctx.$slots.title ? (_openBlock(), _createElementBlock(\"h2\", {\n              key: 2,\n              class: _normalizeClass(_unref(ui).title)\n            }, [\n              _renderSlot(_ctx.$slots, \"title\", {}, () => [\n                _createTextVNode(_toDisplayString(__props.title), 1)\n              ])\n            ], 2)) : _createCommentVNode(\"\", true),\n            __props.description || _ctx.$slots.description ? (_openBlock(), _createElementBlock(\"p\", {\n              key: 3,\n              class: _normalizeClass(_unref(ui).description)\n            }, [\n              _renderSlot(_ctx.$slots, \"description\", {}, () => [\n                _createTextVNode(_toDisplayString(__props.description), 1)\n              ])\n            ], 2)) : _createCommentVNode(\"\", true),\n            _renderSlot(_ctx.$slots, \"default\")\n          ], 2),\n          __props.authors?.length || __props.date ? (_openBlock(), _createElementBlock(\"div\", {\n            key: 0,\n            class: _normalizeClass(_unref(ui).authors.wrapper)\n          }, [\n            _renderSlot(_ctx.$slots, \"authors\", {}, () => [\n              __props.authors?.length ? (_openBlock(), _createBlock(_component_UAvatarGroup, { key: 0 }, {\n                default: _withCtx(() => [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(__props.authors, (author, index) => {\n                    return _openBlock(), _createBlock(_component_UAvatar, _mergeProps({\n                      key: index,\n                      alt: author.name,\n                      class: _unref(ui).authors.avatar.base\n                    }, { size: _unref(ui).authors.avatar.size, ...author.avatar }), {\n                      default: _withCtx(() => [\n                        author.to ? (_openBlock(), _createBlock(_component_NuxtLink, _mergeProps({ key: 0 }, { target: \"_blank\", ..._unref(getNuxtLinkProps)(author) }, {\n                          class: \"focus:outline-none\",\n                          tabindex: \"-1\"\n                        }), {\n                          default: _withCtx(() => [\n                            _hoisted_2\n                          ]),\n                          _: 2\n                        }, 1040)) : _createCommentVNode(\"\", true)\n                      ]),\n                      _: 2\n                    }, 1040, [\"alt\", \"class\"]);\n                  }), 128))\n                ]),\n                _: 1\n              })) : _createCommentVNode(\"\", true)\n            ]),\n            _renderSlot(_ctx.$slots, \"date\", {}, () => [\n              __props.date ? (_openBlock(), _createElementBlock(\"time\", {\n                key: 0,\n                datetime: new Date(__props.date).toISOString(),\n                class: _normalizeClass(_unref(ui).date)\n              }, _toDisplayString(__props.date), 11, _hoisted_3)) : _createCommentVNode(\"\", true)\n            ])\n          ], 2)) : _createCommentVNode(\"\", true)\n        ], 2)\n      ], 16);\n    };\n  }\n});\n",
      "start": 1714172179979,
      "end": 1714172179981,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappingsgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChzH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACltK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnrI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjhxE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjxF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjvrL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACprB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChjzE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3F,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChpE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACntG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACdzvF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvrzK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACznB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1714172179981,
      "end": 1714172179981,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1714172179981,
      "end": 1714172179981,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1714172179981,
      "end": 1714172179981,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1714172179981,
      "end": 1714172179981,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "result": "import { default as __nuxt_component_0 } from \"/Users/rezajafar/peakofeloquence-app/node_modules/@nuxt/image/dist/runtime/components/nuxt-img\";\nimport { default as __nuxt_component_1 } from \"/Users/rezajafar/peakofeloquence-app/node_modules/nuxt/dist/app/components/nuxt-link\";\nimport { default as __nuxt_component_2 } from \"/Users/rezajafar/peakofeloquence-app/node_modules/@nuxt/ui/dist/runtime/components/elements/Badge.vue\";\nimport { default as __nuxt_component_3 } from \"/Users/rezajafar/peakofeloquence-app/node_modules/@nuxt/ui/dist/runtime/components/elements/Avatar.vue\";\nimport { default as __nuxt_component_4 } from \"/Users/rezajafar/peakofeloquence-app/node_modules/@nuxt/ui/dist/runtime/components/elements/AvatarGroup.mjs\";\nimport { useSlots, computed, toRef } from 'vue';\nimport { useUI } from '/Users/rezajafar/peakofeloquence-app/node_modules/@nuxt/ui/dist/runtime/composables/useUI.mjs';\nimport { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, renderSlot as _renderSlot, resolveComponent as _resolveComponent, mergeProps as _mergeProps, createVNode as _createVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, createBlock as _createBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = /* @__PURE__ */ _createElementVNode(\"span\", {\n  class: \"absolute inset-0\",\n  \"aria-hidden\": \"true\"\n}, null, -1);\nconst _hoisted_2 = /* @__PURE__ */ _createElementVNode(\"span\", {\n  class: \"absolute inset-0\",\n  \"aria-hidden\": \"true\"\n}, null, -1);\nconst _hoisted_3 = [\"datetime\"];\nimport { twJoin } from \"tailwind-merge\";\nimport { nuxtLinkProps, getNuxtLinkProps } from \"#ui/utils\";\nimport { getSlotChildrenText } from \"../../lib/slots\";\nexport default /* @__PURE__ */ _defineComponent({\n  ...{\n    inheritAttrs: false\n  },\n  __name: \"BlogPost\",\n  props: {\n    ...nuxtLinkProps,\n    title: {\n      type: String,\n      default: void 0\n    },\n    description: {\n      type: String,\n      default: void 0\n    },\n    date: {\n      type: [String, Date],\n      default: void 0\n    },\n    image: {\n      type: [String, Object],\n      default: void 0\n    },\n    badge: {\n      type: Object,\n      default: void 0\n    },\n    authors: {\n      type: Array,\n      default: void 0\n    },\n    orientation: {\n      type: String,\n      default: \"vertical\"\n    },\n    class: {\n      type: [String, Object, Array],\n      default: void 0\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(__props) {\n    const slots = useSlots();\n    const props = __props;\n    const config = computed(() => {\n      const wrapper = twJoin(\n        \"relative group flex flex-col w-full gap-y-6\",\n        props.orientation === \"horizontal\" && (!!props.image || !!slots.image) ? \"lg:grid lg:grid-cols-2 lg:gap-x-8 lg:items-center\" : void 0\n      );\n      return {\n        wrapper,\n        image: {\n          wrapper: \"ring-1 ring-gray-200 dark:ring-gray-800 relative overflow-hidden aspect-[16/9] w-full rounded-lg pointer-events-none\",\n          base: \"object-cover object-top w-full h-full transform transition-transform duration-200 group-hover:scale-105\"\n        },\n        container: \"flex flex-col justify-between flex-1\",\n        inner: \"flex-1\",\n        badge: {\n          wrapper: \"mb-3\",\n          base: \"\"\n        },\n        title: \"text-gray-900 dark:text-white text-xl font-semibold truncate group-hover:text-gray-600 dark:group-hover:text-gray-300 transition-colors duration-200\",\n        description: \"text-base text-gray-500 dark:text-gray-400 mt-1\",\n        date: \"text-sm text-gray-500 dark:text-gray-400 font-medium pointer-events-none\",\n        authors: {\n          wrapper: \"relative flex items-center gap-x-3 mt-4\",\n          avatar: {\n            base: \"relative ring-1 lg:hover:scale-105 lg:hover:ring-primary-500 dark:lg:hover:ring-primary-400 transition-transform\",\n            size: \"xs\"\n          }\n        }\n      };\n    });\n    const { ui, attrs } = useUI(\"blog.post\", toRef(props, \"ui\"), config, toRef(props, \"class\"), true);\n    const nuxtLinkBind = computed(() => getNuxtLinkProps(props));\n    const ariaLabel = computed(() => (props.title || slots.title && getSlotChildrenText(slots.title()) || \"Post link\").trim());\n    return (_ctx, _cache) => {\n      const _component_NuxtImg = __nuxt_component_0;\n      const _component_NuxtLink = __nuxt_component_1;\n      const _component_UBadge = __nuxt_component_2;\n      const _component_UAvatar = __nuxt_component_3;\n      const _component_UAvatarGroup = __nuxt_component_4;\n      return _openBlock(), _createElementBlock(\"article\", _mergeProps({\n        class: _unref(ui).wrapper\n      }, _unref(attrs)), [\n        __props.image || _ctx.$slots.image ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 0,\n          class: _normalizeClass(_unref(ui).image.wrapper)\n        }, [\n          _renderSlot(_ctx.$slots, \"image\", {}, () => [\n            _createVNode(_component_NuxtImg, _mergeProps(typeof __props.image === \"string\" ? { src: __props.image, alt: __props.title } : { alt: __props.title, ...__props.image }, {\n              class: _unref(ui).image.base\n            }), null, 16, [\"class\"])\n          ])\n        ], 2)) : _createCommentVNode(\"\", true),\n        _createElementVNode(\"div\", {\n          class: _normalizeClass(_unref(ui).container)\n        }, [\n          _createElementVNode(\"div\", {\n            class: _normalizeClass(_unref(ui).inner)\n          }, [\n            _ctx.to ? (_openBlock(), _createBlock(_component_NuxtLink, _mergeProps({\n              key: 0,\n              \"aria-label\": _unref(ariaLabel)\n            }, _unref(nuxtLinkBind), {\n              class: \"focus:outline-none\",\n              tabindex: \"-1\"\n            }), {\n              default: _withCtx(() => [\n                _hoisted_1\n              ]),\n              _: 1\n            }, 16, [\"aria-label\"])) : _createCommentVNode(\"\", true),\n            __props.badge || _ctx.$slots.badge ? (_openBlock(), _createElementBlock(\"div\", {\n              key: 1,\n              class: _normalizeClass(_unref(ui).badge.wrapper)\n            }, [\n              _renderSlot(_ctx.$slots, \"badge\", {}, () => [\n                __props.badge ? (_openBlock(), _createBlock(_component_UBadge, _mergeProps({ key: 0 }, { variant: \"subtle\", ...__props.badge }, {\n                  class: _unref(ui).badge.base\n                }), null, 16, [\"class\"])) : _createCommentVNode(\"\", true)\n              ])\n            ], 2)) : _createCommentVNode(\"\", true),\n            __props.title || _ctx.$slots.title ? (_openBlock(), _createElementBlock(\"h2\", {\n              key: 2,\n              class: _normalizeClass(_unref(ui).title)\n            }, [\n              _renderSlot(_ctx.$slots, \"title\", {}, () => [\n                _createTextVNode(_toDisplayString(__props.title), 1)\n              ])\n            ], 2)) : _createCommentVNode(\"\", true),\n            __props.description || _ctx.$slots.description ? (_openBlock(), _createElementBlock(\"p\", {\n              key: 3,\n              class: _normalizeClass(_unref(ui).description)\n            }, [\n              _renderSlot(_ctx.$slots, \"description\", {}, () => [\n                _createTextVNode(_toDisplayString(__props.description), 1)\n              ])\n            ], 2)) : _createCommentVNode(\"\", true),\n            _renderSlot(_ctx.$slots, \"default\")\n          ], 2),\n          __props.authors?.length || __props.date ? (_openBlock(), _createElementBlock(\"div\", {\n            key: 0,\n            class: _normalizeClass(_unref(ui).authors.wrapper)\n          }, [\n            _renderSlot(_ctx.$slots, \"authors\", {}, () => [\n              __props.authors?.length ? (_openBlock(), _createBlock(_component_UAvatarGroup, { key: 0 }, {\n                default: _withCtx(() => [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(__props.authors, (author, index) => {\n                    return _openBlock(), _createBlock(_component_UAvatar, _mergeProps({\n                      key: index,\n                      alt: author.name,\n                      class: _unref(ui).authors.avatar.base\n                    }, { size: _unref(ui).authors.avatar.size, ...author.avatar }), {\n                      default: _withCtx(() => [\n                        author.to ? (_openBlock(), _createBlock(_component_NuxtLink, _mergeProps({ key: 0 }, { target: \"_blank\", ..._unref(getNuxtLinkProps)(author) }, {\n                          class: \"focus:outline-none\",\n                          tabindex: \"-1\"\n                        }), {\n                          default: _withCtx(() => [\n                            _hoisted_2\n                          ]),\n                          _: 2\n                        }, 1040)) : _createCommentVNode(\"\", true)\n                      ]),\n                      _: 2\n                    }, 1040, [\"alt\", \"class\"]);\n                  }), 128))\n                ]),\n                _: 1\n              })) : _createCommentVNode(\"\", true)\n            ]),\n            _renderSlot(_ctx.$slots, \"date\", {}, () => [\n              __props.date ? (_openBlock(), _createElementBlock(\"time\", {\n                key: 0,\n                datetime: new Date(__props.date).toISOString(),\n                class: _normalizeClass(_unref(ui).date)\n              }, _toDisplayString(__props.date), 11, _hoisted_3)) : _createCommentVNode(\"\", true)\n            ])\n          ], 2)) : _createCommentVNode(\"\", true)\n        ], 2)\n      ], 16);\n    };\n  }\n});\n",
      "start": 1714172179981,
      "end": 1714172179981,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1714172179981,
      "end": 1714172179981,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1714172179981,
      "end": 1714172179981,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1714172179981,
      "end": 1714172179981,
      "order": "normal"
    }
  ]
}
