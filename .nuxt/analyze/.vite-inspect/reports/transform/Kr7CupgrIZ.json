{
  "resolvedId": "/Users/rezajafar/peakofeloquence-site/node_modules/@nuxtjs/mdc/dist/runtime/highlighter/rehype.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { visit } from \"unist-util-visit\";\nimport { toString } from \"hast-util-to-string\";\nexport default rehypeHighlight;\nexport function rehypeHighlight(opts) {\n  const options = opts;\n  return async (tree) => {\n    const tasks = [];\n    const styles = [];\n    visit(\n      tree,\n      (node) => [\"pre\", \"code\"].includes(node.tagName) && !!(node.properties?.language || node.properties?.highlights),\n      (node) => {\n        const _node = node;\n        const highlights = typeof _node.properties.highlights === \"string\" ? _node.properties.highlights.split(/[,\\s]+/).map(Number) : Array.isArray(_node.properties.highlights) ? _node.properties.highlights.map(Number) : [];\n        const task = options.highlighter(\n          toString(node),\n          _node.properties.language,\n          options.theme,\n          {\n            highlights: highlights.filter(Boolean),\n            meta: _node.properties.meta\n          }\n        ).then(({ tree: tree2, className, style, inlineStyle }) => {\n          _node.properties.className = ((_node.properties.className || \"\") + \" \" + className).trim();\n          _node.properties.style = ((_node.properties.style || \"\") + \" \" + inlineStyle).trim();\n          if (_node.children[0]?.tagName === \"code\") {\n            _node.children[0].children = tree2;\n          } else {\n            _node.children = tree2[0].children || tree2;\n          }\n          if (style)\n            styles.push(style);\n        });\n        tasks.push(task);\n      }\n    );\n    if (tasks.length) {\n      await Promise.all(tasks);\n      tree.children.push({\n        type: \"element\",\n        tagName: \"style\",\n        children: [{ type: \"text\", value: cleanCSS(styles.join(\"\")) }],\n        properties: {}\n      });\n    }\n  };\n}\nconst cleanCSS = (css) => {\n  const styles = css.split(\"}\").filter((s) => Boolean(s.trim())).map((s) => s.trim() + \"}\");\n  return Array.from(new Set(styles)).join(\"\");\n};\n",
      "start": 1712268127601,
      "end": 1712268127649,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1712268127649,
      "end": 1712268127649,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1712268127649,
      "end": 1712268127649,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1712268127649,
      "end": 1712268127649,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1712268127649,
      "end": 1712268127649,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1712268127649,
      "end": 1712268127649,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1712268127649,
      "end": 1712268127649,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1712268127649,
      "end": 1712268127649,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1712268127649,
      "end": 1712268127649,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1712268127649,
      "end": 1712268127649,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1712268127649,
      "end": 1712268127649,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712268127649,
      "end": 1712268127649,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1712268127649,
      "end": 1712268127649,
      "order": "normal"
    },
    {
      "name": "nuxt:fonts:font-family-injection",
      "start": 1712268127649,
      "end": 1712268127649,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1712268127649,
      "end": 1712268127649,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1712268127649,
      "end": 1712268127649,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712268127649,
      "end": 1712268127649,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1712268127649,
      "end": 1712268127649,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1712268127649,
      "end": 1712268127649,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1712268127649,
      "end": 1712268127649,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1712268127649,
      "end": 1712268127649,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1712268127649,
      "end": 1712268127649,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1712268127649,
      "end": 1712268127649,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1712268127649,
      "end": 1712268127649,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1712268127649,
      "end": 1712268127649,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1712268127649,
      "end": 1712268127649,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1712268127649,
      "end": 1712268127649,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1712268127649,
      "end": 1712268127649,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1712268127649,
      "end": 1712268127649,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1712268127649,
      "end": 1712268127649,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1712268127649,
      "end": 1712268127649,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1712268127649,
      "end": 1712268127649,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1712268127649,
      "end": 1712268127649,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1712268127649,
      "end": 1712268127649,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1712268127649,
      "end": 1712268127649,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1712268127649,
      "end": 1712268127649,
      "order": "normal"
    }
  ]
}
