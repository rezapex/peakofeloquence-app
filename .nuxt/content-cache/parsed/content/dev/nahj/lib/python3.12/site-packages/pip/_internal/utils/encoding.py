{"parsed":{"_id":"content:dev:nahj:lib:python3.12:site-packages:pip:_internal:utils:encoding.py","body":"import codecs\nimport locale\nimport re\nimport sys\nfrom typing import List, Tuple\n\nBOMS: List[Tuple[bytes, str]] = [\n    (codecs.BOM_UTF8, \"utf-8\"),\n    (codecs.BOM_UTF16, \"utf-16\"),\n    (codecs.BOM_UTF16_BE, \"utf-16-be\"),\n    (codecs.BOM_UTF16_LE, \"utf-16-le\"),\n    (codecs.BOM_UTF32, \"utf-32\"),\n    (codecs.BOM_UTF32_BE, \"utf-32-be\"),\n    (codecs.BOM_UTF32_LE, \"utf-32-le\"),\n]\n\nENCODING_RE = re.compile(rb\"coding[:=]\\s*([-\\w.]+)\")\n\n\ndef auto_decode(data: bytes) -> str:\n    \"\"\"Check a bytes string for a BOM to correctly detect the encoding\n\n    Fallback to locale.getpreferredencoding(False) like open() on Python3\"\"\"\n    for bom, encoding in BOMS:\n        if data.startswith(bom):\n            return data[len(bom) :].decode(encoding)\n    # Lets check the first two lines as in PEP263\n    for line in data.split(b\"\\n\")[:2]:\n        if line[0:1] == b\"#\" and ENCODING_RE.search(line):\n            result = ENCODING_RE.search(line)\n            assert result is not None\n            encoding = result.groups()[0].decode(\"ascii\")\n            return data.decode(encoding)\n    return data.decode(\n        locale.getpreferredencoding(False) or sys.getdefaultencoding(),\n    )\n"},"hash":"fzG7vsEbef"}