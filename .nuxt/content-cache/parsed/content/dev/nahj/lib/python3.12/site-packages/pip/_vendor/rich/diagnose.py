{"parsed":{"_id":"content:dev:nahj:lib:python3.12:site-packages:pip:_vendor:rich:diagnose.py","body":"import os\nimport platform\n\nfrom pip._vendor.rich import inspect\nfrom pip._vendor.rich.console import Console, get_windows_console_features\nfrom pip._vendor.rich.panel import Panel\nfrom pip._vendor.rich.pretty import Pretty\n\n\ndef report() -> None:  # pragma: no cover\n    \"\"\"Print a report to the terminal with debugging information\"\"\"\n    console = Console()\n    inspect(console)\n    features = get_windows_console_features()\n    inspect(features)\n\n    env_names = (\n        \"TERM\",\n        \"COLORTERM\",\n        \"CLICOLOR\",\n        \"NO_COLOR\",\n        \"TERM_PROGRAM\",\n        \"COLUMNS\",\n        \"LINES\",\n        \"JUPYTER_COLUMNS\",\n        \"JUPYTER_LINES\",\n        \"JPY_PARENT_PID\",\n        \"VSCODE_VERBOSE_LOGGING\",\n    )\n    env = {name: os.getenv(name) for name in env_names}\n    console.print(Panel.fit((Pretty(env)), title=\"[b]Environment Variables\"))\n\n    console.print(f'platform=\"{platform.system()}\"')\n\n\nif __name__ == \"__main__\":  # pragma: no cover\n    report()\n"},"hash":"sMdGrogZOi"}