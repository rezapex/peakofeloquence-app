{"parsed":{"_id":"content:dev:nahj:lib:python3.12:site-packages:pip:_vendor:colorama:tests:isatty_test.py","body":"# Copyright Jonathan Hartley 2013. BSD 3-Clause license, see LICENSE file.\nimport sys\nfrom unittest import TestCase, main\n\nfrom ..ansitowin32 import StreamWrapper, AnsiToWin32\nfrom .utils import pycharm, replace_by, replace_original_by, StreamTTY, StreamNonTTY\n\n\ndef is_a_tty(stream):\n    return StreamWrapper(stream, None).isatty()\n\nclass IsattyTest(TestCase):\n\n    def test_TTY(self):\n        tty = StreamTTY()\n        self.assertTrue(is_a_tty(tty))\n        with pycharm():\n            self.assertTrue(is_a_tty(tty))\n\n    def test_nonTTY(self):\n        non_tty = StreamNonTTY()\n        self.assertFalse(is_a_tty(non_tty))\n        with pycharm():\n            self.assertFalse(is_a_tty(non_tty))\n\n    def test_withPycharm(self):\n        with pycharm():\n            self.assertTrue(is_a_tty(sys.stderr))\n            self.assertTrue(is_a_tty(sys.stdout))\n\n    def test_withPycharmTTYOverride(self):\n        tty = StreamTTY()\n        with pycharm(), replace_by(tty):\n            self.assertTrue(is_a_tty(tty))\n\n    def test_withPycharmNonTTYOverride(self):\n        non_tty = StreamNonTTY()\n        with pycharm(), replace_by(non_tty):\n            self.assertFalse(is_a_tty(non_tty))\n\n    def test_withPycharmNoneOverride(self):\n        with pycharm():\n            with replace_by(None), replace_original_by(None):\n                self.assertFalse(is_a_tty(None))\n                self.assertFalse(is_a_tty(StreamNonTTY()))\n                self.assertTrue(is_a_tty(StreamTTY()))\n\n    def test_withPycharmStreamWrapped(self):\n        with pycharm():\n            self.assertTrue(AnsiToWin32(StreamTTY()).stream.isatty())\n            self.assertFalse(AnsiToWin32(StreamNonTTY()).stream.isatty())\n            self.assertTrue(AnsiToWin32(sys.stdout).stream.isatty())\n            self.assertTrue(AnsiToWin32(sys.stderr).stream.isatty())\n\n\nif __name__ == '__main__':\n    main()\n"},"hash":"40mfWiTFo1"}