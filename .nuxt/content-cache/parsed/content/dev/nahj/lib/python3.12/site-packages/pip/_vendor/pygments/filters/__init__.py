{"parsed":{"_id":"content:dev:nahj:lib:python3.12:site-packages:pip:_vendor:pygments:filters:__init__.py","body":"\"\"\"\n    pygments.filters\n    ~~~~~~~~~~~~~~~~\n\n    Module containing filter lookup functions and default\n    filters.\n\n    :copyright: Copyright 2006-2023 by the Pygments team, see AUTHORS.\n    :license: BSD, see LICENSE for details.\n\"\"\"\n\nimport re\n\nfrom pip._vendor.pygments.token import String, Comment, Keyword, Name, Error, Whitespace, \\\n    string_to_tokentype\nfrom pip._vendor.pygments.filter import Filter\nfrom pip._vendor.pygments.util import get_list_opt, get_int_opt, get_bool_opt, \\\n    get_choice_opt, ClassNotFound, OptionError\nfrom pip._vendor.pygments.plugin import find_plugin_filters\n\n\ndef find_filter_class(filtername):\n    \"\"\"Lookup a filter by name. Return None if not found.\"\"\"\n    if filtername in FILTERS:\n        return FILTERS[filtername]\n    for name, cls in find_plugin_filters():\n        if name == filtername:\n            return cls\n    return None\n\n\ndef get_filter_by_name(filtername, **options):\n    \"\"\"Return an instantiated filter.\n\n    Options are passed to the filter initializer if wanted.\n    Raise a ClassNotFound if not found.\n    \"\"\"\n    cls = find_filter_class(filtername)\n    if cls:\n        return cls(**options)\n    else:\n        raise ClassNotFound('filter %r not found' % filtername)\n\n\ndef get_all_filters():\n    \"\"\"Return a generator of all filter names.\"\"\"\n    yield from FILTERS\n    for name, _ in find_plugin_filters():\n        yield name\n\n\ndef _replace_special(ttype, value, regex, specialttype,\n                     replacefunc=lambda x: x):\n    last = 0\n    for match in regex.finditer(value):\n        start, end = match.start(), match.end()\n        if start != last:\n            yield ttype, value[last:start]\n        yield specialttype, replacefunc(value[start:end])\n        last = end\n    if last != len(value):\n        yield ttype, value[last:]\n\n\nclass CodeTagFilter(Filter):\n    \"\"\"Highlight special code tags in comments and docstrings.\n\n    Options accepted:\n\n    `codetags` : list of strings\n       A list of strings that are flagged as code tags.  The default is to\n       highlight ``XXX``, ``TODO``, ``FIXME``, ``BUG`` and ``NOTE``.\n\n    .. versionchanged:: 2.13\n       Now recognizes ``FIXME`` by default.\n    \"\"\"\n\n    def __init__(self, **options):\n        Filter.__init__(self, **options)\n        tags = get_list_opt(options, 'codetags',\n                            ['XXX', 'TODO', 'FIXME', 'BUG', 'NOTE'])\n        self.tag_re = re.compile(r'\\b(%s)\\b' % '|'.join([\n            re.escape(tag) for tag in tags if tag\n        ]))\n\n    def filter(self, lexer, stream):\n        regex = self.tag_re\n        for ttype, value in stream:\n            if ttype in String.Doc or \\\n               ttype in Comment and \\\n               ttype not in Comment.Preproc:\n                yield from _replace_special(ttype, value, regex, Comment.Special)\n            else:\n                yield ttype, value\n\n\nclass SymbolFilter(Filter):\n    \"\"\"Convert mathematical symbols such as \\\\<longrightarrow> in Isabelle\n    or \\\\longrightarrow in LaTeX into Unicode characters.\n\n    This is mostly useful for HTML or console output when you want to\n    approximate the source rendering you'd see in an IDE.\n\n    Options accepted:\n\n    `lang` : string\n       The symbol language. Must be one of ``'isabelle'`` or\n       ``'latex'``.  The default is ``'isabelle'``.\n    \"\"\"\n\n    latex_symbols = {\n        '\\\\alpha'                : '\\U000003b1',\n        '\\\\beta'                 : '\\U000003b2',\n        '\\\\gamma'                : '\\U000003b3',\n        '\\\\delta'                : '\\U000003b4',\n        '\\\\varepsilon'           : '\\U000003b5',\n        '\\\\zeta'                 : '\\U000003b6',\n        '\\\\eta'                  : '\\U000003b7',\n        '\\\\vartheta'             : '\\U000003b8',\n        '\\\\iota'                 : '\\U000003b9',\n        '\\\\kappa'                : '\\U000003ba',\n        '\\\\lambda'               : '\\U000003bb',\n        '\\\\mu'                   : '\\U000003bc',\n        '\\\\nu'                   : '\\U000003bd',\n        '\\\\xi'                   : '\\U000003be',\n        '\\\\pi'                   : '\\U000003c0',\n        '\\\\varrho'               : '\\U000003c1',\n        '\\\\sigma'                : '\\U000003c3',\n        '\\\\tau'                  : '\\U000003c4',\n        '\\\\upsilon'              : '\\U000003c5',\n        '\\\\varphi'               : '\\U000003c6',\n        '\\\\chi'                  : '\\U000003c7',\n        '\\\\psi'                  : '\\U000003c8',\n        '\\\\omega'                : '\\U000003c9',\n        '\\\\Gamma'                : '\\U00000393',\n        '\\\\Delta'                : '\\U00000394',\n        '\\\\Theta'                : '\\U00000398',\n        '\\\\Lambda'               : '\\U0000039b',\n        '\\\\Xi'                   : '\\U0000039e',\n        '\\\\Pi'                   : '\\U000003a0',\n        '\\\\Sigma'                : '\\U000003a3',\n        '\\\\Upsilon'              : '\\U000003a5',\n        '\\\\Phi'                  : '\\U000003a6',\n        '\\\\Psi'                  : '\\U000003a8',\n        '\\\\Omega'                : '\\U000003a9',\n        '\\\\leftarrow'            : '\\U00002190',\n        '\\\\longleftarrow'        : '\\U000027f5',\n        '\\\\rightarrow'           : '\\U00002192',\n        '\\\\longrightarrow'       : '\\U000027f6',\n        '\\\\Leftarrow'            : '\\U000021d0',\n        '\\\\Longleftarrow'        : '\\U000027f8',\n        '\\\\Rightarrow'           : '\\U000021d2',\n        '\\\\Longrightarrow'       : '\\U000027f9',\n        '\\\\leftrightarrow'       : '\\U00002194',\n        '\\\\longleftrightarrow'   : '\\U000027f7',\n        '\\\\Leftrightarrow'       : '\\U000021d4',\n        '\\\\Longleftrightarrow'   : '\\U000027fa',\n        '\\\\mapsto'               : '\\U000021a6',\n        '\\\\longmapsto'           : '\\U000027fc',\n        '\\\\relbar'               : '\\U00002500',\n        '\\\\Relbar'               : '\\U00002550',\n        '\\\\hookleftarrow'        : '\\U000021a9',\n        '\\\\hookrightarrow'       : '\\U000021aa',\n        '\\\\leftharpoondown'      : '\\U000021bd',\n        '\\\\rightharpoondown'     : '\\U000021c1',\n        '\\\\leftharpoonup'        : '\\U000021bc',\n        '\\\\rightharpoonup'       : '\\U000021c0',\n        '\\\\rightleftharpoons'    : '\\U000021cc',\n        '\\\\leadsto'              : '\\U0000219d',\n        '\\\\downharpoonleft'      : '\\U000021c3',\n        '\\\\downharpoonright'     : '\\U000021c2',\n        '\\\\upharpoonleft'        : '\\U000021bf',\n        '\\\\upharpoonright'       : '\\U000021be',\n        '\\\\restriction'          : '\\U000021be',\n        '\\\\uparrow'              : '\\U00002191',\n        '\\\\Uparrow'              : '\\U000021d1',\n        '\\\\downarrow'            : '\\U00002193',\n        '\\\\Downarrow'            : '\\U000021d3',\n        '\\\\updownarrow'          : '\\U00002195',\n        '\\\\Updownarrow'          : '\\U000021d5',\n        '\\\\langle'               : '\\U000027e8',\n        '\\\\rangle'               : '\\U000027e9',\n        '\\\\lceil'                : '\\U00002308',\n        '\\\\rceil'                : '\\U00002309',\n        '\\\\lfloor'               : '\\U0000230a',\n        '\\\\rfloor'               : '\\U0000230b',\n        '\\\\flqq'                 : '\\U000000ab',\n        '\\\\frqq'                 : '\\U000000bb',\n        '\\\\bot'                  : '\\U000022a5',\n        '\\\\top'                  : '\\U000022a4',\n        '\\\\wedge'                : '\\U00002227',\n        '\\\\bigwedge'             : '\\U000022c0',\n        '\\\\vee'                  : '\\U00002228',\n        '\\\\bigvee'               : '\\U000022c1',\n        '\\\\forall'               : '\\U00002200',\n        '\\\\exists'               : '\\U00002203',\n        '\\\\nexists'              : '\\U00002204',\n        '\\\\neg'                  : '\\U000000ac',\n        '\\\\Box'                  : '\\U000025a1',\n        '\\\\Diamond'              : '\\U000025c7',\n        '\\\\vdash'                : '\\U000022a2',\n        '\\\\models'               : '\\U000022a8',\n        '\\\\dashv'                : '\\U000022a3',\n        '\\\\surd'                 : '\\U0000221a',\n        '\\\\le'                   : '\\U00002264',\n        '\\\\ge'                   : '\\U00002265',\n        '\\\\ll'                   : '\\U0000226a',\n        '\\\\gg'                   : '\\U0000226b',\n        '\\\\lesssim'              : '\\U00002272',\n        '\\\\gtrsim'               : '\\U00002273',\n        '\\\\lessapprox'           : '\\U00002a85',\n        '\\\\gtrapprox'            : '\\U00002a86',\n        '\\\\in'                   : '\\U00002208',\n        '\\\\notin'                : '\\U00002209',\n        '\\\\subset'               : '\\U00002282',\n        '\\\\supset'               : '\\U00002283',\n        '\\\\subseteq'             : '\\U00002286',\n        '\\\\supseteq'             : '\\U00002287',\n        '\\\\sqsubset'             : '\\U0000228f',\n        '\\\\sqsupset'             : '\\U00002290',\n        '\\\\sqsubseteq'           : '\\U00002291',\n        '\\\\sqsupseteq'           : '\\U00002292',\n        '\\\\cap'                  : '\\U00002229',\n        '\\\\bigcap'               : '\\U000022c2',\n        '\\\\cup'                  : '\\U0000222a',\n        '\\\\bigcup'               : '\\U000022c3',\n        '\\\\sqcup'                : '\\U00002294',\n        '\\\\bigsqcup'             : '\\U00002a06',\n        '\\\\sqcap'                : '\\U00002293',\n        '\\\\Bigsqcap'             : '\\U00002a05',\n        '\\\\setminus'             : '\\U00002216',\n        '\\\\propto'               : '\\U0000221d',\n        '\\\\uplus'                : '\\U0000228e',\n        '\\\\bigplus'              : '\\U00002a04',\n        '\\\\sim'                  : '\\U0000223c',\n        '\\\\doteq'                : '\\U00002250',\n        '\\\\simeq'                : '\\U00002243',\n        '\\\\approx'               : '\\U00002248',\n        '\\\\asymp'                : '\\U0000224d',\n        '\\\\cong'                 : '\\U00002245',\n        '\\\\equiv'                : '\\U00002261',\n        '\\\\Join'                 : '\\U000022c8',\n        '\\\\bowtie'               : '\\U00002a1d',\n        '\\\\prec'                 : '\\U0000227a',\n        '\\\\succ'                 : '\\U0000227b',\n        '\\\\preceq'               : '\\U0000227c',\n        '\\\\succeq'               : '\\U0000227d',\n        '\\\\parallel'             : '\\U00002225',\n        '\\\\mid'                  : '\\U000000a6',\n        '\\\\pm'                   : '\\U000000b1',\n        '\\\\mp'                   : '\\U00002213',\n        '\\\\times'                : '\\U000000d7',\n        '\\\\div'                  : '\\U000000f7',\n        '\\\\cdot'                 : '\\U000022c5',\n        '\\\\star'                 : '\\U000022c6',\n        '\\\\circ'                 : '\\U00002218',\n        '\\\\dagger'               : '\\U00002020',\n        '\\\\ddagger'              : '\\U00002021',\n        '\\\\lhd'                  : '\\U000022b2',\n        '\\\\rhd'                  : '\\U000022b3',\n        '\\\\unlhd'                : '\\U000022b4',\n        '\\\\unrhd'                : '\\U000022b5',\n        '\\\\triangleleft'         : '\\U000025c3',\n        '\\\\triangleright'        : '\\U000025b9',\n        '\\\\triangle'             : '\\U000025b3',\n        '\\\\triangleq'            : '\\U0000225c',\n        '\\\\oplus'                : '\\U00002295',\n        '\\\\bigoplus'             : '\\U00002a01',\n        '\\\\otimes'               : '\\U00002297',\n        '\\\\bigotimes'            : '\\U00002a02',\n        '\\\\odot'                 : '\\U00002299',\n        '\\\\bigodot'              : '\\U00002a00',\n        '\\\\ominus'               : '\\U00002296',\n        '\\\\oslash'               : '\\U00002298',\n        '\\\\dots'                 : '\\U00002026',\n        '\\\\cdots'                : '\\U000022ef',\n        '\\\\sum'                  : '\\U00002211',\n        '\\\\prod'                 : '\\U0000220f',\n        '\\\\coprod'               : '\\U00002210',\n        '\\\\infty'                : '\\U0000221e',\n        '\\\\int'                  : '\\U0000222b',\n        '\\\\oint'                 : '\\U0000222e',\n        '\\\\clubsuit'             : '\\U00002663',\n        '\\\\diamondsuit'          : '\\U00002662',\n        '\\\\heartsuit'            : '\\U00002661',\n        '\\\\spadesuit'            : '\\U00002660',\n        '\\\\aleph'                : '\\U00002135',\n        '\\\\emptyset'             : '\\U00002205',\n        '\\\\nabla'                : '\\U00002207',\n        '\\\\partial'              : '\\U00002202',\n        '\\\\flat'                 : '\\U0000266d',\n        '\\\\natural'              : '\\U0000266e',\n        '\\\\sharp'                : '\\U0000266f',\n        '\\\\angle'                : '\\U00002220',\n        '\\\\copyright'            : '\\U000000a9',\n        '\\\\textregistered'       : '\\U000000ae',\n        '\\\\textonequarter'       : '\\U000000bc',\n        '\\\\textonehalf'          : '\\U000000bd',\n        '\\\\textthreequarters'    : '\\U000000be',\n        '\\\\textordfeminine'      : '\\U000000aa',\n        '\\\\textordmasculine'     : '\\U000000ba',\n        '\\\\euro'                 : '\\U000020ac',\n        '\\\\pounds'               : '\\U000000a3',\n        '\\\\yen'                  : '\\U000000a5',\n        '\\\\textcent'             : '\\U000000a2',\n        '\\\\textcurrency'         : '\\U000000a4',\n        '\\\\textdegree'           : '\\U000000b0',\n    }\n\n    isabelle_symbols = {\n        '\\\\<zero>'                 : '\\U0001d7ec',\n        '\\\\<one>'                  : '\\U0001d7ed',\n        '\\\\<two>'                  : '\\U0001d7ee',\n        '\\\\<three>'                : '\\U0001d7ef',\n        '\\\\<four>'                 : '\\U0001d7f0',\n        '\\\\<five>'                 : '\\U0001d7f1',\n        '\\\\<six>'                  : '\\U0001d7f2',\n        '\\\\<seven>'                : '\\U0001d7f3',\n        '\\\\<eight>'                : '\\U0001d7f4',\n        '\\\\<nine>'                 : '\\U0001d7f5',\n        '\\\\<A>'                    : '\\U0001d49c',\n        '\\\\<B>'                    : '\\U0000212c',\n        '\\\\<C>'                    : '\\U0001d49e',\n        '\\\\<D>'                    : '\\U0001d49f',\n        '\\\\<E>'                    : '\\U00002130',\n        '\\\\<F>'                    : '\\U00002131',\n        '\\\\<G>'                    : '\\U0001d4a2',\n        '\\\\<H>'                    : '\\U0000210b',\n        '\\\\<I>'                    : '\\U00002110',\n        '\\\\<J>'                    : '\\U0001d4a5',\n        '\\\\<K>'                    : '\\U0001d4a6',\n        '\\\\<L>'                    : '\\U00002112',\n        '\\\\<M>'                    : '\\U00002133',\n        '\\\\<N>'                    : '\\U0001d4a9',\n        '\\\\<O>'                    : '\\U0001d4aa',\n        '\\\\<P>'                    : '\\U0001d4ab',\n        '\\\\<Q>'                    : '\\U0001d4ac',\n        '\\\\<R>'                    : '\\U0000211b',\n        '\\\\<S>'                    : '\\U0001d4ae',\n        '\\\\<T>'                    : '\\U0001d4af',\n        '\\\\<U>'                    : '\\U0001d4b0',\n        '\\\\<V>'                    : '\\U0001d4b1',\n        '\\\\<W>'                    : '\\U0001d4b2',\n        '\\\\<X>'                    : '\\U0001d4b3',\n        '\\\\<Y>'                    : '\\U0001d4b4',\n        '\\\\<Z>'                    : '\\U0001d4b5',\n        '\\\\<a>'                    : '\\U0001d5ba',\n        '\\\\<b>'                    : '\\U0001d5bb',\n        '\\\\<c>'                    : '\\U0001d5bc',\n        '\\\\<d>'                    : '\\U0001d5bd',\n        '\\\\<e>'                    : '\\U0001d5be',\n        '\\\\<f>'                    : '\\U0001d5bf',\n        '\\\\<g>'                    : '\\U0001d5c0',\n        '\\\\<h>'                    : '\\U0001d5c1',\n        '\\\\<i>'                    : '\\U0001d5c2',\n        '\\\\<j>'                    : '\\U0001d5c3',\n        '\\\\<k>'                    : '\\U0001d5c4',\n        '\\\\<l>'                    : '\\U0001d5c5',\n        '\\\\<m>'                    : '\\U0001d5c6',\n        '\\\\<n>'                    : '\\U0001d5c7',\n        '\\\\<o>'                    : '\\U0001d5c8',\n        '\\\\<p>'                    : '\\U0001d5c9',\n        '\\\\<q>'                    : '\\U0001d5ca',\n        '\\\\<r>'                    : '\\U0001d5cb',\n        '\\\\<s>'                    : '\\U0001d5cc',\n        '\\\\<t>'                    : '\\U0001d5cd',\n        '\\\\<u>'                    : '\\U0001d5ce',\n        '\\\\<v>'                    : '\\U0001d5cf',\n        '\\\\<w>'                    : '\\U0001d5d0',\n        '\\\\<x>'                    : '\\U0001d5d1',\n        '\\\\<y>'                    : '\\U0001d5d2',\n        '\\\\<z>'                    : '\\U0001d5d3',\n        '\\\\<AA>'                   : '\\U0001d504',\n        '\\\\<BB>'                   : '\\U0001d505',\n        '\\\\<CC>'                   : '\\U0000212d',\n        '\\\\<DD>'                   : '\\U0001d507',\n        '\\\\<EE>'                   : '\\U0001d508',\n        '\\\\<FF>'                   : '\\U0001d509',\n        '\\\\<GG>'                   : '\\U0001d50a',\n        '\\\\<HH>'                   : '\\U0000210c',\n        '\\\\<II>'                   : '\\U00002111',\n        '\\\\<JJ>'                   : '\\U0001d50d',\n        '\\\\<KK>'                   : '\\U0001d50e',\n        '\\\\<LL>'                   : '\\U0001d50f',\n        '\\\\<MM>'                   : '\\U0001d510',\n        '\\\\<NN>'                   : '\\U0001d511',\n        '\\\\<OO>'                   : '\\U0001d512',\n        '\\\\<PP>'                   : '\\U0001d513',\n        '\\\\<QQ>'                   : '\\U0001d514',\n        '\\\\<RR>'                   : '\\U0000211c',\n        '\\\\<SS>'                   : '\\U0001d516',\n        '\\\\<TT>'                   : '\\U0001d517',\n        '\\\\<UU>'                   : '\\U0001d518',\n        '\\\\<VV>'                   : '\\U0001d519',\n        '\\\\<WW>'                   : '\\U0001d51a',\n        '\\\\<XX>'                   : '\\U0001d51b',\n        '\\\\<YY>'                   : '\\U0001d51c',\n        '\\\\<ZZ>'                   : '\\U00002128',\n        '\\\\<aa>'                   : '\\U0001d51e',\n        '\\\\<bb>'                   : '\\U0001d51f',\n        '\\\\<cc>'                   : '\\U0001d520',\n        '\\\\<dd>'                   : '\\U0001d521',\n        '\\\\<ee>'                   : '\\U0001d522',\n        '\\\\<ff>'                   : '\\U0001d523',\n        '\\\\<gg>'                   : '\\U0001d524',\n        '\\\\<hh>'                   : '\\U0001d525',\n        '\\\\<ii>'                   : '\\U0001d526',\n        '\\\\<jj>'                   : '\\U0001d527',\n        '\\\\<kk>'                   : '\\U0001d528',\n        '\\\\<ll>'                   : '\\U0001d529',\n        '\\\\<mm>'                   : '\\U0001d52a',\n        '\\\\<nn>'                   : '\\U0001d52b',\n        '\\\\<oo>'                   : '\\U0001d52c',\n        '\\\\<pp>'                   : '\\U0001d52d',\n        '\\\\<qq>'                   : '\\U0001d52e',\n        '\\\\<rr>'                   : '\\U0001d52f',\n        '\\\\<ss>'                   : '\\U0001d530',\n        '\\\\<tt>'                   : '\\U0001d531',\n        '\\\\<uu>'                   : '\\U0001d532',\n        '\\\\<vv>'                   : '\\U0001d533',\n        '\\\\<ww>'                   : '\\U0001d534',\n        '\\\\<xx>'                   : '\\U0001d535',\n        '\\\\<yy>'                   : '\\U0001d536',\n        '\\\\<zz>'                   : '\\U0001d537',\n        '\\\\<alpha>'                : '\\U000003b1',\n        '\\\\<beta>'                 : '\\U000003b2',\n        '\\\\<gamma>'                : '\\U000003b3',\n        '\\\\<delta>'                : '\\U000003b4',\n        '\\\\<epsilon>'              : '\\U000003b5',\n        '\\\\<zeta>'                 : '\\U000003b6',\n        '\\\\<eta>'                  : '\\U000003b7',\n        '\\\\<theta>'                : '\\U000003b8',\n        '\\\\<iota>'                 : '\\U000003b9',\n        '\\\\<kappa>'                : '\\U000003ba',\n        '\\\\<lambda>'               : '\\U000003bb',\n        '\\\\<mu>'                   : '\\U000003bc',\n        '\\\\<nu>'                   : '\\U000003bd',\n        '\\\\<xi>'                   : '\\U000003be',\n        '\\\\<pi>'                   : '\\U000003c0',\n        '\\\\<rho>'                  : '\\U000003c1',\n        '\\\\<sigma>'                : '\\U000003c3',\n        '\\\\<tau>'                  : '\\U000003c4',\n        '\\\\<upsilon>'              : '\\U000003c5',\n        '\\\\<phi>'                  : '\\U000003c6',\n        '\\\\<chi>'                  : '\\U000003c7',\n        '\\\\<psi>'                  : '\\U000003c8',\n        '\\\\<omega>'                : '\\U000003c9',\n        '\\\\<Gamma>'                : '\\U00000393',\n        '\\\\<Delta>'                : '\\U00000394',\n        '\\\\<Theta>'                : '\\U00000398',\n        '\\\\<Lambda>'               : '\\U0000039b',\n        '\\\\<Xi>'                   : '\\U0000039e',\n        '\\\\<Pi>'                   : '\\U000003a0',\n        '\\\\<Sigma>'                : '\\U000003a3',\n        '\\\\<Upsilon>'              : '\\U000003a5',\n        '\\\\<Phi>'                  : '\\U000003a6',\n        '\\\\<Psi>'                  : '\\U000003a8',\n        '\\\\<Omega>'                : '\\U000003a9',\n        '\\\\<bool>'                 : '\\U0001d539',\n        '\\\\<complex>'              : '\\U00002102',\n        '\\\\<nat>'                  : '\\U00002115',\n        '\\\\<rat>'                  : '\\U0000211a',\n        '\\\\<real>'                 : '\\U0000211d',\n        '\\\\<int>'                  : '\\U00002124',\n        '\\\\<leftarrow>'            : '\\U00002190',\n        '\\\\<longleftarrow>'        : '\\U000027f5',\n        '\\\\<rightarrow>'           : '\\U00002192',\n        '\\\\<longrightarrow>'       : '\\U000027f6',\n        '\\\\<Leftarrow>'            : '\\U000021d0',\n        '\\\\<Longleftarrow>'        : '\\U000027f8',\n        '\\\\<Rightarrow>'           : '\\U000021d2',\n        '\\\\<Longrightarrow>'       : '\\U000027f9',\n        '\\\\<leftrightarrow>'       : '\\U00002194',\n        '\\\\<longleftrightarrow>'   : '\\U000027f7',\n        '\\\\<Leftrightarrow>'       : '\\U000021d4',\n        '\\\\<Longleftrightarrow>'   : '\\U000027fa',\n        '\\\\<mapsto>'               : '\\U000021a6',\n        '\\\\<longmapsto>'           : '\\U000027fc',\n        '\\\\<midarrow>'             : '\\U00002500',\n        '\\\\<Midarrow>'             : '\\U00002550',\n        '\\\\<hookleftarrow>'        : '\\U000021a9',\n        '\\\\<hookrightarrow>'       : '\\U000021aa',\n        '\\\\<leftharpoondown>'      : '\\U000021bd',\n        '\\\\<rightharpoondown>'     : '\\U000021c1',\n        '\\\\<leftharpoonup>'        : '\\U000021bc',\n        '\\\\<rightharpoonup>'       : '\\U000021c0',\n        '\\\\<rightleftharpoons>'    : '\\U000021cc',\n        '\\\\<leadsto>'              : '\\U0000219d',\n        '\\\\<downharpoonleft>'      : '\\U000021c3',\n        '\\\\<downharpoonright>'     : '\\U000021c2',\n        '\\\\<upharpoonleft>'        : '\\U000021bf',\n        '\\\\<upharpoonright>'       : '\\U000021be',\n        '\\\\<restriction>'          : '\\U000021be',\n        '\\\\<Colon>'                : '\\U00002237',\n        '\\\\<up>'                   : '\\U00002191',\n        '\\\\<Up>'                   : '\\U000021d1',\n        '\\\\<down>'                 : '\\U00002193',\n        '\\\\<Down>'                 : '\\U000021d3',\n        '\\\\<updown>'               : '\\U00002195',\n        '\\\\<Updown>'               : '\\U000021d5',\n        '\\\\<langle>'               : '\\U000027e8',\n        '\\\\<rangle>'               : '\\U000027e9',\n        '\\\\<lceil>'                : '\\U00002308',\n        '\\\\<rceil>'                : '\\U00002309',\n        '\\\\<lfloor>'               : '\\U0000230a',\n        '\\\\<rfloor>'               : '\\U0000230b',\n        '\\\\<lparr>'                : '\\U00002987',\n        '\\\\<rparr>'                : '\\U00002988',\n        '\\\\<lbrakk>'               : '\\U000027e6',\n        '\\\\<rbrakk>'               : '\\U000027e7',\n        '\\\\<lbrace>'               : '\\U00002983',\n        '\\\\<rbrace>'               : '\\U00002984',\n        '\\\\<guillemotleft>'        : '\\U000000ab',\n        '\\\\<guillemotright>'       : '\\U000000bb',\n        '\\\\<bottom>'               : '\\U000022a5',\n        '\\\\<top>'                  : '\\U000022a4',\n        '\\\\<and>'                  : '\\U00002227',\n        '\\\\<And>'                  : '\\U000022c0',\n        '\\\\<or>'                   : '\\U00002228',\n        '\\\\<Or>'                   : '\\U000022c1',\n        '\\\\<forall>'               : '\\U00002200',\n        '\\\\<exists>'               : '\\U00002203',\n        '\\\\<nexists>'              : '\\U00002204',\n        '\\\\<not>'                  : '\\U000000ac',\n        '\\\\<box>'                  : '\\U000025a1',\n        '\\\\<diamond>'              : '\\U000025c7',\n        '\\\\<turnstile>'            : '\\U000022a2',\n        '\\\\<Turnstile>'            : '\\U000022a8',\n        '\\\\<tturnstile>'           : '\\U000022a9',\n        '\\\\<TTurnstile>'           : '\\U000022ab',\n        '\\\\<stileturn>'            : '\\U000022a3',\n        '\\\\<surd>'                 : '\\U0000221a',\n        '\\\\<le>'                   : '\\U00002264',\n        '\\\\<ge>'                   : '\\U00002265',\n        '\\\\<lless>'                : '\\U0000226a',\n        '\\\\<ggreater>'             : '\\U0000226b',\n        '\\\\<lesssim>'              : '\\U00002272',\n        '\\\\<greatersim>'           : '\\U00002273',\n        '\\\\<lessapprox>'           : '\\U00002a85',\n        '\\\\<greaterapprox>'        : '\\U00002a86',\n        '\\\\<in>'                   : '\\U00002208',\n        '\\\\<notin>'                : '\\U00002209',\n        '\\\\<subset>'               : '\\U00002282',\n        '\\\\<supset>'               : '\\U00002283',\n        '\\\\<subseteq>'             : '\\U00002286',\n        '\\\\<supseteq>'             : '\\U00002287',\n        '\\\\<sqsubset>'             : '\\U0000228f',\n        '\\\\<sqsupset>'             : '\\U00002290',\n        '\\\\<sqsubseteq>'           : '\\U00002291',\n        '\\\\<sqsupseteq>'           : '\\U00002292',\n        '\\\\<inter>'                : '\\U00002229',\n        '\\\\<Inter>'                : '\\U000022c2',\n        '\\\\<union>'                : '\\U0000222a',\n        '\\\\<Union>'                : '\\U000022c3',\n        '\\\\<squnion>'              : '\\U00002294',\n        '\\\\<Squnion>'              : '\\U00002a06',\n        '\\\\<sqinter>'              : '\\U00002293',\n        '\\\\<Sqinter>'              : '\\U00002a05',\n        '\\\\<setminus>'             : '\\U00002216',\n        '\\\\<propto>'               : '\\U0000221d',\n        '\\\\<uplus>'                : '\\U0000228e',\n        '\\\\<Uplus>'                : '\\U00002a04',\n        '\\\\<noteq>'                : '\\U00002260',\n        '\\\\<sim>'                  : '\\U0000223c',\n        '\\\\<doteq>'                : '\\U00002250',\n        '\\\\<simeq>'                : '\\U00002243',\n        '\\\\<approx>'               : '\\U00002248',\n        '\\\\<asymp>'                : '\\U0000224d',\n        '\\\\<cong>'                 : '\\U00002245',\n        '\\\\<smile>'                : '\\U00002323',\n        '\\\\<equiv>'                : '\\U00002261',\n        '\\\\<frown>'                : '\\U00002322',\n        '\\\\<Join>'                 : '\\U000022c8',\n        '\\\\<bowtie>'               : '\\U00002a1d',\n        '\\\\<prec>'                 : '\\U0000227a',\n        '\\\\<succ>'                 : '\\U0000227b',\n        '\\\\<preceq>'               : '\\U0000227c',\n        '\\\\<succeq>'               : '\\U0000227d',\n        '\\\\<parallel>'             : '\\U00002225',\n        '\\\\<bar>'                  : '\\U000000a6',\n        '\\\\<plusminus>'            : '\\U000000b1',\n        '\\\\<minusplus>'            : '\\U00002213',\n        '\\\\<times>'                : '\\U000000d7',\n        '\\\\<div>'                  : '\\U000000f7',\n        '\\\\<cdot>'                 : '\\U000022c5',\n        '\\\\<star>'                 : '\\U000022c6',\n        '\\\\<bullet>'               : '\\U00002219',\n        '\\\\<circ>'                 : '\\U00002218',\n        '\\\\<dagger>'               : '\\U00002020',\n        '\\\\<ddagger>'              : '\\U00002021',\n        '\\\\<lhd>'                  : '\\U000022b2',\n        '\\\\<rhd>'                  : '\\U000022b3',\n        '\\\\<unlhd>'                : '\\U000022b4',\n        '\\\\<unrhd>'                : '\\U000022b5',\n        '\\\\<triangleleft>'         : '\\U000025c3',\n        '\\\\<triangleright>'        : '\\U000025b9',\n        '\\\\<triangle>'             : '\\U000025b3',\n        '\\\\<triangleq>'            : '\\U0000225c',\n        '\\\\<oplus>'                : '\\U00002295',\n        '\\\\<Oplus>'                : '\\U00002a01',\n        '\\\\<otimes>'               : '\\U00002297',\n        '\\\\<Otimes>'               : '\\U00002a02',\n        '\\\\<odot>'                 : '\\U00002299',\n        '\\\\<Odot>'                 : '\\U00002a00',\n        '\\\\<ominus>'               : '\\U00002296',\n        '\\\\<oslash>'               : '\\U00002298',\n        '\\\\<dots>'                 : '\\U00002026',\n        '\\\\<cdots>'                : '\\U000022ef',\n        '\\\\<Sum>'                  : '\\U00002211',\n        '\\\\<Prod>'                 : '\\U0000220f',\n        '\\\\<Coprod>'               : '\\U00002210',\n        '\\\\<infinity>'             : '\\U0000221e',\n        '\\\\<integral>'             : '\\U0000222b',\n        '\\\\<ointegral>'            : '\\U0000222e',\n        '\\\\<clubsuit>'             : '\\U00002663',\n        '\\\\<diamondsuit>'          : '\\U00002662',\n        '\\\\<heartsuit>'            : '\\U00002661',\n        '\\\\<spadesuit>'            : '\\U00002660',\n        '\\\\<aleph>'                : '\\U00002135',\n        '\\\\<emptyset>'             : '\\U00002205',\n        '\\\\<nabla>'                : '\\U00002207',\n        '\\\\<partial>'              : '\\U00002202',\n        '\\\\<flat>'                 : '\\U0000266d',\n        '\\\\<natural>'              : '\\U0000266e',\n        '\\\\<sharp>'                : '\\U0000266f',\n        '\\\\<angle>'                : '\\U00002220',\n        '\\\\<copyright>'            : '\\U000000a9',\n        '\\\\<registered>'           : '\\U000000ae',\n        '\\\\<hyphen>'               : '\\U000000ad',\n        '\\\\<inverse>'              : '\\U000000af',\n        '\\\\<onequarter>'           : '\\U000000bc',\n        '\\\\<onehalf>'              : '\\U000000bd',\n        '\\\\<threequarters>'        : '\\U000000be',\n        '\\\\<ordfeminine>'          : '\\U000000aa',\n        '\\\\<ordmasculine>'         : '\\U000000ba',\n        '\\\\<section>'              : '\\U000000a7',\n        '\\\\<paragraph>'            : '\\U000000b6',\n        '\\\\<exclamdown>'           : '\\U000000a1',\n        '\\\\<questiondown>'         : '\\U000000bf',\n        '\\\\<euro>'                 : '\\U000020ac',\n        '\\\\<pounds>'               : '\\U000000a3',\n        '\\\\<yen>'                  : '\\U000000a5',\n        '\\\\<cent>'                 : '\\U000000a2',\n        '\\\\<currency>'             : '\\U000000a4',\n        '\\\\<degree>'               : '\\U000000b0',\n        '\\\\<amalg>'                : '\\U00002a3f',\n        '\\\\<mho>'                  : '\\U00002127',\n        '\\\\<lozenge>'              : '\\U000025ca',\n        '\\\\<wp>'                   : '\\U00002118',\n        '\\\\<wrong>'                : '\\U00002240',\n        '\\\\<struct>'               : '\\U000022c4',\n        '\\\\<acute>'                : '\\U000000b4',\n        '\\\\<index>'                : '\\U00000131',\n        '\\\\<dieresis>'             : '\\U000000a8',\n        '\\\\<cedilla>'              : '\\U000000b8',\n        '\\\\<hungarumlaut>'         : '\\U000002dd',\n        '\\\\<some>'                 : '\\U000003f5',\n        '\\\\<newline>'              : '\\U000023ce',\n        '\\\\<open>'                 : '\\U00002039',\n        '\\\\<close>'                : '\\U0000203a',\n        '\\\\<here>'                 : '\\U00002302',\n        '\\\\<^sub>'                 : '\\U000021e9',\n        '\\\\<^sup>'                 : '\\U000021e7',\n        '\\\\<^bold>'                : '\\U00002759',\n        '\\\\<^bsub>'                : '\\U000021d8',\n        '\\\\<^esub>'                : '\\U000021d9',\n        '\\\\<^bsup>'                : '\\U000021d7',\n        '\\\\<^esup>'                : '\\U000021d6',\n    }\n\n    lang_map = {'isabelle' : isabelle_symbols, 'latex' : latex_symbols}\n\n    def __init__(self, **options):\n        Filter.__init__(self, **options)\n        lang = get_choice_opt(options, 'lang',\n                              ['isabelle', 'latex'], 'isabelle')\n        self.symbols = self.lang_map[lang]\n\n    def filter(self, lexer, stream):\n        for ttype, value in stream:\n            if value in self.symbols:\n                yield ttype, self.symbols[value]\n            else:\n                yield ttype, value\n\n\nclass KeywordCaseFilter(Filter):\n    \"\"\"Convert keywords to lowercase or uppercase or capitalize them, which\n    means first letter uppercase, rest lowercase.\n\n    This can be useful e.g. if you highlight Pascal code and want to adapt the\n    code to your styleguide.\n\n    Options accepted:\n\n    `case` : string\n       The casing to convert keywords to. Must be one of ``'lower'``,\n       ``'upper'`` or ``'capitalize'``.  The default is ``'lower'``.\n    \"\"\"\n\n    def __init__(self, **options):\n        Filter.__init__(self, **options)\n        case = get_choice_opt(options, 'case',\n                              ['lower', 'upper', 'capitalize'], 'lower')\n        self.convert = getattr(str, case)\n\n    def filter(self, lexer, stream):\n        for ttype, value in stream:\n            if ttype in Keyword:\n                yield ttype, self.convert(value)\n            else:\n                yield ttype, value\n\n\nclass NameHighlightFilter(Filter):\n    \"\"\"Highlight a normal Name (and Name.*) token with a different token type.\n\n    Example::\n\n        filter = NameHighlightFilter(\n            names=['foo', 'bar', 'baz'],\n            tokentype=Name.Function,\n        )\n\n    This would highlight the names \"foo\", \"bar\" and \"baz\"\n    as functions. `Name.Function` is the default token type.\n\n    Options accepted:\n\n    `names` : list of strings\n      A list of names that should be given the different token type.\n      There is no default.\n    `tokentype` : TokenType or string\n      A token type or a string containing a token type name that is\n      used for highlighting the strings in `names`.  The default is\n      `Name.Function`.\n    \"\"\"\n\n    def __init__(self, **options):\n        Filter.__init__(self, **options)\n        self.names = set(get_list_opt(options, 'names', []))\n        tokentype = options.get('tokentype')\n        if tokentype:\n            self.tokentype = string_to_tokentype(tokentype)\n        else:\n            self.tokentype = Name.Function\n\n    def filter(self, lexer, stream):\n        for ttype, value in stream:\n            if ttype in Name and value in self.names:\n                yield self.tokentype, value\n            else:\n                yield ttype, value\n\n\nclass ErrorToken(Exception):\n    pass\n\n\nclass RaiseOnErrorTokenFilter(Filter):\n    \"\"\"Raise an exception when the lexer generates an error token.\n\n    Options accepted:\n\n    `excclass` : Exception class\n      The exception class to raise.\n      The default is `pygments.filters.ErrorToken`.\n\n    .. versionadded:: 0.8\n    \"\"\"\n\n    def __init__(self, **options):\n        Filter.__init__(self, **options)\n        self.exception = options.get('excclass', ErrorToken)\n        try:\n            # issubclass() will raise TypeError if first argument is not a class\n            if not issubclass(self.exception, Exception):\n                raise TypeError\n        except TypeError:\n            raise OptionError('excclass option is not an exception class')\n\n    def filter(self, lexer, stream):\n        for ttype, value in stream:\n            if ttype is Error:\n                raise self.exception(value)\n            yield ttype, value\n\n\nclass VisibleWhitespaceFilter(Filter):\n    \"\"\"Convert tabs, newlines and/or spaces to visible characters.\n\n    Options accepted:\n\n    `spaces` : string or bool\n      If this is a one-character string, spaces will be replaces by this string.\n      If it is another true value, spaces will be replaced by ``·`` (unicode\n      MIDDLE DOT).  If it is a false value, spaces will not be replaced.  The\n      default is ``False``.\n    `tabs` : string or bool\n      The same as for `spaces`, but the default replacement character is ``»``\n      (unicode RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK).  The default value\n      is ``False``.  Note: this will not work if the `tabsize` option for the\n      lexer is nonzero, as tabs will already have been expanded then.\n    `tabsize` : int\n      If tabs are to be replaced by this filter (see the `tabs` option), this\n      is the total number of characters that a tab should be expanded to.\n      The default is ``8``.\n    `newlines` : string or bool\n      The same as for `spaces`, but the default replacement character is ``¶``\n      (unicode PILCROW SIGN).  The default value is ``False``.\n    `wstokentype` : bool\n      If true, give whitespace the special `Whitespace` token type.  This allows\n      styling the visible whitespace differently (e.g. greyed out), but it can\n      disrupt background colors.  The default is ``True``.\n\n    .. versionadded:: 0.8\n    \"\"\"\n\n    def __init__(self, **options):\n        Filter.__init__(self, **options)\n        for name, default in [('spaces',   '·'),\n                              ('tabs',     '»'),\n                              ('newlines', '¶')]:\n            opt = options.get(name, False)\n            if isinstance(opt, str) and len(opt) == 1:\n                setattr(self, name, opt)\n            else:\n                setattr(self, name, (opt and default or ''))\n        tabsize = get_int_opt(options, 'tabsize', 8)\n        if self.tabs:\n            self.tabs += ' ' * (tabsize - 1)\n        if self.newlines:\n            self.newlines += '\\n'\n        self.wstt = get_bool_opt(options, 'wstokentype', True)\n\n    def filter(self, lexer, stream):\n        if self.wstt:\n            spaces = self.spaces or ' '\n            tabs = self.tabs or '\\t'\n            newlines = self.newlines or '\\n'\n            regex = re.compile(r'\\s')\n\n            def replacefunc(wschar):\n                if wschar == ' ':\n                    return spaces\n                elif wschar == '\\t':\n                    return tabs\n                elif wschar == '\\n':\n                    return newlines\n                return wschar\n\n            for ttype, value in stream:\n                yield from _replace_special(ttype, value, regex, Whitespace,\n                                            replacefunc)\n        else:\n            spaces, tabs, newlines = self.spaces, self.tabs, self.newlines\n            # simpler processing\n            for ttype, value in stream:\n                if spaces:\n                    value = value.replace(' ', spaces)\n                if tabs:\n                    value = value.replace('\\t', tabs)\n                if newlines:\n                    value = value.replace('\\n', newlines)\n                yield ttype, value\n\n\nclass GobbleFilter(Filter):\n    \"\"\"Gobbles source code lines (eats initial characters).\n\n    This filter drops the first ``n`` characters off every line of code.  This\n    may be useful when the source code fed to the lexer is indented by a fixed\n    amount of space that isn't desired in the output.\n\n    Options accepted:\n\n    `n` : int\n       The number of characters to gobble.\n\n    .. versionadded:: 1.2\n    \"\"\"\n    def __init__(self, **options):\n        Filter.__init__(self, **options)\n        self.n = get_int_opt(options, 'n', 0)\n\n    def gobble(self, value, left):\n        if left < len(value):\n            return value[left:], 0\n        else:\n            return '', left - len(value)\n\n    def filter(self, lexer, stream):\n        n = self.n\n        left = n  # How many characters left to gobble.\n        for ttype, value in stream:\n            # Remove ``left`` tokens from first line, ``n`` from all others.\n            parts = value.split('\\n')\n            (parts[0], left) = self.gobble(parts[0], left)\n            for i in range(1, len(parts)):\n                (parts[i], left) = self.gobble(parts[i], n)\n            value = '\\n'.join(parts)\n\n            if value != '':\n                yield ttype, value\n\n\nclass TokenMergeFilter(Filter):\n    \"\"\"Merges consecutive tokens with the same token type in the output\n    stream of a lexer.\n\n    .. versionadded:: 1.2\n    \"\"\"\n    def __init__(self, **options):\n        Filter.__init__(self, **options)\n\n    def filter(self, lexer, stream):\n        current_type = None\n        current_value = None\n        for ttype, value in stream:\n            if ttype is current_type:\n                current_value += value\n            else:\n                if current_type is not None:\n                    yield current_type, current_value\n                current_type = ttype\n                current_value = value\n        if current_type is not None:\n            yield current_type, current_value\n\n\nFILTERS = {\n    'codetagify':     CodeTagFilter,\n    'keywordcase':    KeywordCaseFilter,\n    'highlight':      NameHighlightFilter,\n    'raiseonerror':   RaiseOnErrorTokenFilter,\n    'whitespace':     VisibleWhitespaceFilter,\n    'gobble':         GobbleFilter,\n    'tokenmerge':     TokenMergeFilter,\n    'symbols':        SymbolFilter,\n}\n"},"hash":"vtqUxhoQty"}