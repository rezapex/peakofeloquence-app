{"parsed":{"_id":"content:dev:nahj:lib:python3.12:site-packages:pip:_internal:utils:appdirs.py","body":"\"\"\"\nThis code wraps the vendored appdirs module to so the return values are\ncompatible for the current pip code base.\n\nThe intention is to rewrite current usages gradually, keeping the tests pass,\nand eventually drop this after all usages are changed.\n\"\"\"\n\nimport os\nimport sys\nfrom typing import List\n\nfrom pip._vendor import platformdirs as _appdirs\n\n\ndef user_cache_dir(appname: str) -> str:\n    return _appdirs.user_cache_dir(appname, appauthor=False)\n\n\ndef _macos_user_config_dir(appname: str, roaming: bool = True) -> str:\n    # Use ~/Application Support/pip, if the directory exists.\n    path = _appdirs.user_data_dir(appname, appauthor=False, roaming=roaming)\n    if os.path.isdir(path):\n        return path\n\n    # Use a Linux-like ~/.config/pip, by default.\n    linux_like_path = \"~/.config/\"\n    if appname:\n        linux_like_path = os.path.join(linux_like_path, appname)\n\n    return os.path.expanduser(linux_like_path)\n\n\ndef user_config_dir(appname: str, roaming: bool = True) -> str:\n    if sys.platform == \"darwin\":\n        return _macos_user_config_dir(appname, roaming)\n\n    return _appdirs.user_config_dir(appname, appauthor=False, roaming=roaming)\n\n\n# for the discussion regarding site_config_dir locations\n# see <https://github.com/pypa/pip/issues/1733>\ndef site_config_dirs(appname: str) -> List[str]:\n    if sys.platform == \"darwin\":\n        return [_appdirs.site_data_dir(appname, appauthor=False, multipath=True)]\n\n    dirval = _appdirs.site_config_dir(appname, appauthor=False, multipath=True)\n    if sys.platform == \"win32\":\n        return [dirval]\n\n    # Unix-y system. Look in /etc as well.\n    return dirval.split(os.pathsep) + [\"/etc\"]\n"},"hash":"iTRqoy10iN"}