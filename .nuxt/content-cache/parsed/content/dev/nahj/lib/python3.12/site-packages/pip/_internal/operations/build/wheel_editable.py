{"parsed":{"_id":"content:dev:nahj:lib:python3.12:site-packages:pip:_internal:operations:build:wheel_editable.py","body":"import logging\nimport os\nfrom typing import Optional\n\nfrom pip._vendor.pyproject_hooks import BuildBackendHookCaller, HookMissing\n\nfrom pip._internal.utils.subprocess import runner_with_spinner_message\n\nlogger = logging.getLogger(__name__)\n\n\ndef build_wheel_editable(\n    name: str,\n    backend: BuildBackendHookCaller,\n    metadata_directory: str,\n    tempd: str,\n) -> Optional[str]:\n    \"\"\"Build one InstallRequirement using the PEP 660 build process.\n\n    Returns path to wheel if successfully built. Otherwise, returns None.\n    \"\"\"\n    assert metadata_directory is not None\n    try:\n        logger.debug(\"Destination directory: %s\", tempd)\n\n        runner = runner_with_spinner_message(\n            f\"Building editable for {name} (pyproject.toml)\"\n        )\n        with backend.subprocess_runner(runner):\n            try:\n                wheel_name = backend.build_editable(\n                    tempd,\n                    metadata_directory=metadata_directory,\n                )\n            except HookMissing as e:\n                logger.error(\n                    \"Cannot build editable %s because the build \"\n                    \"backend does not have the %s hook\",\n                    name,\n                    e,\n                )\n                return None\n    except Exception:\n        logger.error(\"Failed building editable for %s\", name)\n        return None\n    return os.path.join(tempd, wheel_name)\n"},"hash":"95rvZVdMem"}