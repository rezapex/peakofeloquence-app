{"parsed":{"_id":"content:dev:nahj:lib:python3.12:site-packages:pip:_vendor:chardet:sbcsgroupprober.py","body":"######################## BEGIN LICENSE BLOCK ########################\n# The Original Code is Mozilla Universal charset detector code.\n#\n# The Initial Developer of the Original Code is\n# Netscape Communications Corporation.\n# Portions created by the Initial Developer are Copyright (C) 2001\n# the Initial Developer. All Rights Reserved.\n#\n# Contributor(s):\n#   Mark Pilgrim - port to Python\n#   Shy Shalom - original C code\n#\n# This library is free software; you can redistribute it and/or\n# modify it under the terms of the GNU Lesser General Public\n# License as published by the Free Software Foundation; either\n# version 2.1 of the License, or (at your option) any later version.\n#\n# This library is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n# Lesser General Public License for more details.\n#\n# You should have received a copy of the GNU Lesser General Public\n# License along with this library; if not, write to the Free Software\n# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n# 02110-1301  USA\n######################### END LICENSE BLOCK #########################\n\nfrom .charsetgroupprober import CharSetGroupProber\nfrom .hebrewprober import HebrewProber\nfrom .langbulgarianmodel import ISO_8859_5_BULGARIAN_MODEL, WINDOWS_1251_BULGARIAN_MODEL\nfrom .langgreekmodel import ISO_8859_7_GREEK_MODEL, WINDOWS_1253_GREEK_MODEL\nfrom .langhebrewmodel import WINDOWS_1255_HEBREW_MODEL\n\n# from .langhungarianmodel import (ISO_8859_2_HUNGARIAN_MODEL,\n#                                  WINDOWS_1250_HUNGARIAN_MODEL)\nfrom .langrussianmodel import (\n    IBM855_RUSSIAN_MODEL,\n    IBM866_RUSSIAN_MODEL,\n    ISO_8859_5_RUSSIAN_MODEL,\n    KOI8_R_RUSSIAN_MODEL,\n    MACCYRILLIC_RUSSIAN_MODEL,\n    WINDOWS_1251_RUSSIAN_MODEL,\n)\nfrom .langthaimodel import TIS_620_THAI_MODEL\nfrom .langturkishmodel import ISO_8859_9_TURKISH_MODEL\nfrom .sbcharsetprober import SingleByteCharSetProber\n\n\nclass SBCSGroupProber(CharSetGroupProber):\n    def __init__(self) -> None:\n        super().__init__()\n        hebrew_prober = HebrewProber()\n        logical_hebrew_prober = SingleByteCharSetProber(\n            WINDOWS_1255_HEBREW_MODEL, is_reversed=False, name_prober=hebrew_prober\n        )\n        # TODO: See if using ISO-8859-8 Hebrew model works better here, since\n        #       it's actually the visual one\n        visual_hebrew_prober = SingleByteCharSetProber(\n            WINDOWS_1255_HEBREW_MODEL, is_reversed=True, name_prober=hebrew_prober\n        )\n        hebrew_prober.set_model_probers(logical_hebrew_prober, visual_hebrew_prober)\n        # TODO: ORDER MATTERS HERE. I changed the order vs what was in master\n        #       and several tests failed that did not before. Some thought\n        #       should be put into the ordering, and we should consider making\n        #       order not matter here, because that is very counter-intuitive.\n        self.probers = [\n            SingleByteCharSetProber(WINDOWS_1251_RUSSIAN_MODEL),\n            SingleByteCharSetProber(KOI8_R_RUSSIAN_MODEL),\n            SingleByteCharSetProber(ISO_8859_5_RUSSIAN_MODEL),\n            SingleByteCharSetProber(MACCYRILLIC_RUSSIAN_MODEL),\n            SingleByteCharSetProber(IBM866_RUSSIAN_MODEL),\n            SingleByteCharSetProber(IBM855_RUSSIAN_MODEL),\n            SingleByteCharSetProber(ISO_8859_7_GREEK_MODEL),\n            SingleByteCharSetProber(WINDOWS_1253_GREEK_MODEL),\n            SingleByteCharSetProber(ISO_8859_5_BULGARIAN_MODEL),\n            SingleByteCharSetProber(WINDOWS_1251_BULGARIAN_MODEL),\n            # TODO: Restore Hungarian encodings (iso-8859-2 and windows-1250)\n            #       after we retrain model.\n            # SingleByteCharSetProber(ISO_8859_2_HUNGARIAN_MODEL),\n            # SingleByteCharSetProber(WINDOWS_1250_HUNGARIAN_MODEL),\n            SingleByteCharSetProber(TIS_620_THAI_MODEL),\n            SingleByteCharSetProber(ISO_8859_9_TURKISH_MODEL),\n            hebrew_prober,\n            logical_hebrew_prober,\n            visual_hebrew_prober,\n        ]\n        self.reset()\n"},"hash":"evOvsiINqz"}