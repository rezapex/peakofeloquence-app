{"parsed":{"_id":"content:dev:nahj:lib:python3.12:site-packages:pip:_vendor:pygments:__pycache__:__init__.cpython-312.pyc","body":"�\n\n\u0000\u0000\u0000\u0000�Y!f�\u000b\u0000\u0000�\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000�>\u0000\u0000\u0000�\u0000d\u0000Z\u0000d\u0001d\u0002l\u0001m\u0002Z\u0002m\u0003Z\u0003\u0001\u0000d\u0003Z\u0004d\u0004Z\u0005g\u0000d\u0005�\u0001Z\u0006d\u0006�\u0000Z\u0007d\nd\b�\u0001Z\bd\nd\t�\u0001Z\ty\u0007)\u000ba\u0015\u0004\u0000\u0000\n    Pygments\n    ~~~~~~~~\n\n    Pygments is a syntax highlighting package written in Python.\n\n    It is a generic syntax highlighter for general use in all kinds of software\n    such as forum systems, wikis or other applications that need to prettify\n    source code. Highlights are:\n\n    * a wide range of common languages and markup formats is supported\n    * special attention is paid to details, increasing quality by a fair amount\n    * support for new languages and formats are added easily\n    * a number of output formats, presently HTML, LaTeX, RTF, SVG, all image\n      formats that PIL supports, and ANSI sequences\n    * it is usable as a command-line tool and as a library\n    * ... and it highlights even Brainfuck!\n\n    The `Pygments master branch`_ is installable with ``easy_install Pygments==dev``.\n\n    .. _Pygments master branch:\n       https://github.com/pygments/pygments/archive/master.zip#egg=Pygments-dev\n\n    :copyright: Copyright 2006-2023 by the Pygments team, see AUTHORS.\n    :license: BSD, see LICENSE for details.\n�\u0000\u0000\u0000\u0000)\u0002�\bStringIO�\u0007BytesIOz\u00062.15.1�\u0010restructuredtext)\u0003�\u0003lex�\u0006format�\thighlightc\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0003\u0000\u0000\u0000�\u0000\u0000\u0000�\u0000\t\u0000|\u0001j\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000|\u0000�\u0001\u0000\u0000\u0000\u0000\u0000\u0000S\u0000#\u0000t\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000$\u0000r/\u0001\u0000d\u0001d\u0002l\u0002m\u0003}\u0002\u0001\u0000t\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000|\u0001t\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0002\u0000\u0000\u0000\u0000\u0000\u0000r\u0017t\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000|\u0001|\u0002�\u0002\u0000\u0000\u0000\u0000\u0000\u0000r\u000bt\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000d\u0003�\u0001\u0000\u0000\u0000\u0000\u0000\u0000�\u0001�\u0000w\u0000x\u0003Y\u0000w\u0001)\u0004z�\n    Lex `code` with the `lexer` (must be a `Lexer` instance)\n    and return an iterable of tokens. Currently, this only calls\n    `lexer.get_tokens()`.\n    r\u0002\u0000\u0000\u0000)\u0001�\nRegexLexerz4lex() argument must be a lexer instance, not a class)\u0007�\nget_tokens�\tTypeError�\u001apip._vendor.pygments.lexerr\n\u0000\u0000\u0000�\nisinstance�\u0004type�\nissubclass)\u0003�\u0004code�\u0005lexerr\n\u0000\u0000\u0000s\u0003\u0000\u0000\u0000   �s/Users/rezajafar/peakofeloquence-app/content/dev/nahj/lib/python3.12/site-packages/pip/_vendor/pygments/__init__.pyr\u0006\u0000\u0000\u0000r\u0006\u0000\u0000\u0000#\u0000\u0000\u0000sR\u0000\u0000\u0000�\u0000�\f\b\u0005\u000e�\u000f\u0014�\u000f\u001f�\u000f\u001f�\u0004�\u000f%�\b%��\u000b\u0014�\u0000\u0006\u0005\u000e�\b9�\u000b\u0015�e�T�\u000b\"�z�%�\u001a�'D�\u0012\u001b�\u0000\u0001\u001d*�\u0000\u0001\u0013+�\u0000\u0001\n+�\b\n�\n\u0006\u0005\u000e�s\t\u0000\u0000\u0000�\u0010\u0013\u0000�8A\u000b\u0003Nc\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0003\u0000\u0000\u0000�2\u0001\u0000\u0000�\u0000\t\u0000|\u0002sGt\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000|\u0001d\u0001d\u0002�\u0003\u0000\u0000\u0000\u0000\u0000\u0000x\u0001r\n\u0001\u0000t\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0000\u0000\u0000\u0000\u0000\u0000\u0000x\u0001s\n\u0001\u0000t\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0000\u0000\u0000\u0000\u0000\u0000\u0000}\u0003|\u0001j\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000|\u0000|\u0003�\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000|\u0003j\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0000\u0000\u0000\u0000\u0000\u0000\u0000S\u0000|\u0001j\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000|\u0000|\u0002�\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000y\u0002#\u0000t\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000$\u0000r/\u0001\u0000d\u0003d\u0004l\u0006m\u0007}\u0004\u0001\u0000t\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000|\u0001t\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0002\u0000\u0000\u0000\u0000\u0000\u0000r\u0017t\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000|\u0001|\u0004�\u0002\u0000\u0000\u0000\u0000\u0000\u0000r\u000bt\u000b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000d\u0005�\u0001\u0000\u0000\u0000\u0000\u0000\u0000�\u0001�\u0000w\u0000x\u0003Y\u0000w\u0001)\u0006a\u001c\u0001\u0000\u0000\n    Format ``tokens`` (an iterable of tokens) with the formatter ``formatter``\n    (a `Formatter` instance).\n\n    If ``outfile`` is given and a valid file object (an object with a\n    ``write`` method), the result will be written to it, otherwise it\n    is returned as a string.\n    �\bencodingNr\u0002\u0000\u0000\u0000)\u0001�\tFormatterz;format() argument must be a formatter instance, not a class)\u000b�\u0007getattrr\u0004\u0000\u0000\u0000r\u0003\u0000\u0000\u0000r\u0007\u0000\u0000\u0000�\bgetvaluer\f\u0000\u0000\u0000�\u001epip._vendor.pygments.formatterr\u0016\u0000\u0000\u0000r\u000e\u0000\u0000\u0000r\u000f\u0000\u0000\u0000r\u0010\u0000\u0000\u0000)\u0005�\u0006tokens�\tformatter�\u0007outfile�\u000brealoutfiler\u0016\u0000\u0000\u0000s\u0005\u0000\u0000\u0000     r\u0013\u0000\u0000\u0000r\u0007\u0000\u0000\u0000r\u0007\u0000\u0000\u00004\u0000\u0000\u0000s�\u0000\u0000\u0000�\u0000�\u0012\n\u0005\u000e�\u000f\u0016�\u001a!�)�Z�\u0014�\u001a>�\u001aL�7�9�\u001aZ�PX�PZ�K�\f\u0015�\f\u001c�\f\u001c�V�[�\f1�\u0013\u001e�\u0013'�\u0013'�\u0013)�\f)�\f\u0015�\f\u001c�\f\u001c�V�W�\f-��\u000b\u0014�\u0000\u0006\u0005\u000e�\b<�\u000b\u0015�i�\u0014�\u000b&�:�i�\u0019�+K�\u0012\u001b�\u0000\u0001\u001d*�\u0000\u0001\u0013+�\u0000\u0001\n+�\b\n�\n\u0006\u0005\u000e�s\u0012\u0000\u0000\u0000�A\bA\u001e\u0000�\u000b\u0012A\u001e\u0000�\u001e8B\u0016\u0003c\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0003\u0000\u0000\u0000�0\u0000\u0000\u0000�\u0000t\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000t\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000|\u0000|\u0001�\u0002\u0000\u0000\u0000\u0000\u0000\u0000|\u0002|\u0003�\u0003\u0000\u0000\u0000\u0000\u0000\u0000S\u0000)\u0001zp\n    This is the most high-level highlighting function. It combines `lex` and\n    `format` in one function.\n    )\u0002r\u0007\u0000\u0000\u0000r\u0006\u0000\u0000\u0000)\u0004r\u0011\u0000\u0000\u0000r\u0012\u0000\u0000\u0000r\u001b\u0000\u0000\u0000r\u001c\u0000\u0000\u0000s\u0004\u0000\u0000\u0000    r\u0013\u0000\u0000\u0000r\b\u0000\u0000\u0000r\b\u0000\u0000\u0000M\u0000\u0000\u0000s\u001a\u0000\u0000\u0000�\u0000�\n\u0000\f\u0012�#�d�E�\u0012\"�I�w�\u000b7�\u00047�\u0000\u0000\u0000\u0000)\u0001N)\n�\u0007__doc__�\u0002ior\u0003\u0000\u0000\u0000r\u0004\u0000\u0000\u0000�\u000b__version__�\n__docformat__�\u0007__all__r\u0006\u0000\u0000\u0000r\u0007\u0000\u0000\u0000r\b\u0000\u0000\u0000�\u0000r\u001f\u0000\u0000\u0000r\u0013\u0000\u0000\u0000�\b<module>r&\u0000\u0000\u0000\u0001\u0000\u0000\u0000s-\u0000\u0000\u0000�\u0003\u0001\u0001\u0001�\u0002\u0019\u0001\u0004�4\u0000\u0001!�\u000e\u0016�\u000b�\u0010\"�\n�\n(�\u0007�\u0006\u000e\u0001\u000e�\"\u0016\u0001\u000e�2\u0005\u00018r\u001f\u0000\u0000\u0000"},"hash":"XKpdsj6lsK"}